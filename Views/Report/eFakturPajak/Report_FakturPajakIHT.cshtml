<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<script src="@Url.Content("~/ReportViewer/js/print.min.js")"></script>
<script src="~/Scripts/PDFObject.js"></script>
@(
            // All deferred initialization statements will be rendered here
            Html.TelerikReporting().DeferredScripts()
)

<div id="_header">
    <table width="100%" class="hdr">
        <tr>
            <td>
                <div style="text-align:center">Rekap Faktur Pajak IHT</div>
            </td>
        </tr>
    </table>
    <table width="50%">
        <tr>
            <td width="3%">
                <label>Tahun:</label>
            </td>
            <td width="20%">
                @(Html.Kendo().NumericTextBox().Name("Tahun").Min(2017).Format("D4").Value(DateTime.Now.Year)
                    .HtmlAttributes(new { style = "width:25%", @class = "allcaps" })
                )
            </td>
        </tr>
        <tr>
            <td>
                <label style="text-align:left">Bulan:</label>
            </td>
            <td>
                @(Html.Kendo().DropDownList().Name("ddlBulan").DataTextField("Text").DataValueField("Value")
                    //.Events(ev => ev.Select("ddlBulanOnSelect"))
                    //.HtmlAttributes(new { style = "font-size: medium;" })
                    .SelectedIndex(DateTime.Now.Month - 1)
                    .BindTo(new List<SelectListItem>()
                    {
                        new SelectListItem() {
                            Text = "Januari",
                            Value = "1"
                        },
                        new SelectListItem() {
                            Text = "Februari",
                            Value = "2"
                        },
                        new SelectListItem() {
                            Text = "Maret",
                            Value = "3"
                        },
                        new SelectListItem() {
                            Text = "April",
                            Value = "4"
                        },
                        new SelectListItem() {
                            Text = "Mei",
                            Value = "5"
                        },
                        new SelectListItem() {
                            Text = "Juni",
                            Value = "6"
                        },
                        new SelectListItem() {
                            Text = "Juli",
                            Value = "7"
                        },
                        new SelectListItem() {
                            Text = "Agustus",
                            Value = "8"
                        },
                        new SelectListItem() {
                            Text = "September",
                            Value = "9"
                        },
                        new SelectListItem() {
                            Text = "Oktober",
                            Value = "10"
                        },
                        new SelectListItem() {
                            Text = "November",
                            Value = "11"
                        },
                        new SelectListItem() {
                            Text = "Desember",
                            Value = "12"
                        }
                    })
                )
            </td>
        </tr>
        <tr>
            <td></td>
            <td align="left">
                <div class="confirm">
                    <button id="btnSubmitHeader" class="submit k-button" type="button" onclick="btnProsesOnClick()">Proses</button>
                </div>
            </td>
        </tr>
    </table>
</div>
<div id="_detail" style="width:100%;height:490px;">
    @(Html.Kendo().TabStrip().Name("tabstrip").Animation(animation => animation.Open(effect => effect.Fade(FadeDirection.In)))
            .Items(tabstrip =>
            {
                tabstrip.Add().Text("I. Rekap").Selected(true)
                .Content(@<text>
                    @(Html.Kendo()
                        .Grid<Ptpn8.eFakturPajakUnit.Models.ReportFakturPajakIHT>(Guid.Empty.ToString())
                        .Name("grdDetail")
                        .Columns(g =>
                        {
                            g.Bound(i => i.TahunBuku).Width(50).Hidden();
                            g.Bound(i => i.NomorInput).Width(50).Hidden();
                            g.Bound(i => i.Verifikasi).Title("Verifikasi").Width(100).ClientTemplate("#= Verifikasi ? 'Sudah':'Belum' #");
                            g.Group(i => i
                                .Title("Faktur")
                                .Columns(c =>
                                {
                                    c.Bound(q => q.No_Faktur).Width(150).Title("No Faktur");
                                    c.Bound(q => q.NoSeriFakturPajak).Width(150).Title("No. Seri Faktur Pajak");
                                    c.Bound(q => q.Tanggal_Faktur).Title("Tgl. Faktur").Width(100).Format("{0:dd-MM-yyyy}");
                                })
                            );
                            g.Group(i => i
                                .Title("Data Customer")
                                .Columns(c =>
                                {
                                    c.Bound(q => q.Pembeli).Width(200).Title("Nama Customer");
                                    c.Bound(q => q.AlamatPembeli).Width(200).Title("Alamat");
                                    c.Bound(q => q.NPWPPembeli).Width(150).Title("NPWP");
                                    c.Bound(q => q.StatusPembeli).Width(100).Title("Status");
                                    c.Bound(q => q.EmailPembeli).Width(100).Title("Email");
                                    c.Bound(q => q.PejabatPenandatangan).Width(150).Title("Pejabat Penandatangan");

                                })
                            );
                            g.Group(i => i
                               .Title("Detail Produk")
                               .Columns(c =>
                               {
                                   c.Bound(q => q.NamaProduk).Width(200).Title("Nama Produk").HtmlAttributes(new { style = "text-align: center;  font-weight : 700" })
                                   .ClientFooterTemplate("Total")
                                    .ClientGroupFooterTemplate("Jumlah Per Invoice")
                                    .FooterHtmlAttributes(new { style = "text-align: center; background: silver;" });
                                   c.Bound(q => q.Jumlah_Pak).Width(100).Title("Jml. Pak").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" })
                                    .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                                   c.Bound(q => q.Jumlah_Kg).Width(80).Title("Jml. Kg").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" })
                                    .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                                   c.Bound(q => q.HargaSatuan).Width(100).Title("Harga Satuan").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" });
                                   c.Bound(q => q.Diskon).Width(100).Title("Diskon").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" })
                                    .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                                   c.Bound(q => q.JumlahNilai).Width(100).Title("Jml. Nilai").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" })
                                    .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                                   c.Bound(q => q.PPN).Width(100).Title("PPN").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" })
                                    .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                                   c.Bound(q => q.Total).Width(120).Title("Total").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" })
                                    .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                    .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                                   c.Bound(q => q.Ongkir).Width(80).Title("Ongkir").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" }).Hidden();
                                   c.Bound(q => q.JumlahAkhir).Width(100).Title("Jml. Akhir").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right" }).Hidden();
                               })
                           );
                        })
                        .ToolBar(toolbar =>
                        {
                            toolbar.Excel();
                        })
                        .Events(e => { e.DataBound("grdCariOnDataBound"); e.Change("grdCariOnChange"); })
                        .Excel(excel => excel.AllPages(true))
                        .AutoBind(false)
                        .Resizable(resizeable => resizeable.Columns(true))
                        .Scrollable()
                        .Sortable()
                        .Groupable()
                        .Selectable(
                            selectable => selectable
                            .Type(GridSelectionType.Cell)
                        )
                        .Groupable()
                        .HtmlAttributes(new { style = "Height: 450px" })
                        .DataSource(o => o
                            .Ajax()
                            .ServerOperation(false)
                            .Group(g => g.Add(x => x.No_Faktur))
                            .Sort(s => s.Add(x => x.No_Faktur).Descending())
                            .Read(read => read.Action("detailRead", "Report").Data("filterReport").Type(HttpVerbs.Post))
                            .Aggregates(ag =>
                            {
                                ag.Add(x => x.Jumlah_Pak).Sum();
                                ag.Add(x => x.Jumlah_Kg).Sum();
                                ag.Add(x => x.Diskon).Sum();
                                ag.Add(x => x.JumlahNilai).Sum();
                                ag.Add(x => x.PPN).Sum();
                                ag.Add(x => x.Total).Sum();
                            })
                        )
                    )
                </text>);
        })
    )
</div>
<div id="printWindow" contextmenu="Print" title="Print" class="print">
    <div id="reportViewer">
        @(Html.TelerikReporting().ReportViewer()
                    // Each report viewer must have an id - it will be used by the initialization script
                    // to find the element and initialize the report viewer.
                    .Id("reportViewer")
                    // The URL of the service which will serve reports.
                    // The URL corresponds to the name of the controller class (ReportsController).
                    // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
                    .ServiceUrl(Url.Content("/api/reports/"))
                    // The URL for custom report vie    wer template. The template can be edited -
                    // new functionalities can be added and unneeded ones can be removed.
                    // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
                    //
                    // Strongly typed ReportSource - TypeReportSource or UriReportSource.
                    .ReportSource(new UriReportSource() { Uri = "../Reports/eFakturPajak/FakturPajakSementara.trdx" })
                    // Specifies whether the viewer is in interactive or print preview mode.
                    // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
                    // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
                    .ViewMode(ViewMode.Interactive)
                    // Sets the scale mode of the viewer.
                    // Three modes exist currently:
                    // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
                    // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
                    // Specific - Uses the scale to zoom in and out the report.
                    .ScaleMode(ScaleMode.Specific)
                    // Zoom in and out the report using the scale
                    // 1.0 is equal to 100%, i.e. the original size of the report
                    .Scale(1.0)
                    // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
                    // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
                    .PersistSession(false)
                    // Sets the print mode of the viewer.
                    .PrintMode(PrintMode.AutoSelect)
        )
    </div>
</div>

<div id="printWindow2" contextmenu="Print" title="Print" class="print">
    <div id="reportViewer">
        @(Html.TelerikReporting().ReportViewer()
                    // Each report viewer must have an id - it will be used by the initialization script
                    // to find the element and initialize the report viewer.
                    .Id("reportViewer")
                    // The URL of the service which will serve reports.
                    // The URL corresponds to the name of the controller class (ReportsController).
                    // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
                    .ServiceUrl(Url.Content("/api/reports/"))
                    // The URL for custom report vie    wer template. The template can be edited -
                    // new functionalities can be added and unneeded ones can be removed.
                    // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
                    //
                    // Strongly typed ReportSource - TypeReportSource or UriReportSource.
                    .ReportSource(new UriReportSource() { Uri = "../Reports/eFakturPajak/ExportFakturPajakPendapatanLain.trdx" })
                    // Specifies whether the viewer is in interactive or print preview mode.
                    // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
                    // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
                    .ViewMode(ViewMode.Interactive)
                    // Sets the scale mode of the viewer.
                    // Three modes exist currently:
                    // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
                    // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
                    // Specific - Uses the scale to zoom in and out the report.
                    .ScaleMode(ScaleMode.Specific)
                    // Zoom in and out the report using the scale
                    // 1.0 is equal to 100%, i.e. the original size of the report
                    .Scale(1.0)
                    // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
                    // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
                    .PersistSession(false)
                    // Sets the print mode of the viewer.
                    .PrintMode(PrintMode.AutoSelect)
        )
    </div>
</div>

<script>
    var bagian;
    var kode, colIdx, pilihan;

    $(document).ready(function () {
        
        pdf = $("#pdfWindow").kendoWindow({
            title: "PDF Viewer",
            modal: true,
            visible: false,
            resizable: false,
            width: 900,
            height: 550
        }).data("kendoWindow");

        prt = $("#printWindow").kendoWindow({
            title: "Print",
            modal: true,
            visible: false,
            resizable: false,
            width: 800,
            height: 500
        }).data("kendoWindow");

        prt2 = $("#printWindow2").kendoWindow({
            title: "Print",
            modal: true,
            visible: false,
            resizable: false,
            width: 800,
            height: 500
        }).data("kendoWindow");


        gridStatus = 'belum-ngapa-ngapain';
    })

    function btnProsesOnClick() {
        $('#grdDetail').data('kendoGrid').dataSource.read();
    }

    function grdCariOnDataBound(e) {
    }

    function grdCariOnChange(e) {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });

        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        //colIdx = $("td", row).index(row);
        var data = grid.dataItem(row);
        var x = grid.select();
        var r = x.closest("tr");
        var xx = grid.dataItem(r);
        bagian = xx.NamaBagian;
        kode = selected.toString();


        $("#tabstrip").data("kendoTabStrip").select(1);
        var grid = $('#grdDetail2').data('kendoGrid');
        grid.dataSource.read();
        //filterReport3(kode);
        var chart = $('#chart').data('kendoChart');
        chart.dataSource.read();
    }
   
    function btnPrintHeaderOnClick(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");

        var data = grid.dataItem(row);
        var fakturPajakSementara_HDRId = data.FakturPajakSementara_HDRId;

        var viewer = $("#reportViewer").data("telerik_ReportViewer");
        viewer.reportSource({
            report: viewer.reportSource().report,
            parameters: { FakturPajakSementara_HDRId: fakturPajakSementara_HDRId }
        });
        viewer.refreshReport();
        prt.open().center();
    }

    function btnPrintHeaderOnClickCSV(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");

        var data = grid.dataItem(row);
        var fakturPajakSementara_HDRId = data.FakturPajakSementara_HDRId;

        var viewer = $("#reportViewer").data("telerik_ReportViewer");
        viewer.reportSource({
            report: viewer.reportSource().report,
            parameters: { FakturPajakSementara_HDRId: fakturPajakSementara_HDRId }
        });
        viewer.refreshReport();
        prt2.open().center();
    }
    //fungsi dashboard
    function filterReport(e) {
        return {
            strClassView: 'Ptpn8.eFakturPajakUnit.Models.ReportFakturPajakIHT',
            scriptSQL: "exec [SPDK_KanpusEF].[dbo].ReportFakturPajakIHT " + $('#Tahun').val() + " ," + $('#ddlBulan').val()
        }
    }

</script>

<div id="pdfWindow">
    <table width="100%" class="hdr">
        <tr>
            <td>
                <div style="text-align:center">PDF Viewer</div>
            </td>
        </tr>
    </table>
    <div class="notclick" id="testPDFObject" style="height:100%">
    </div>
    <table width="100%">
        <tr>
            <td></td>
            <td align="center">
                <button id="noLeaveGrid" class="k-button">Cancel</button>
            </td>
            <td></td>
        </tr>
    </table>
    <script type='text/javascript'>
        document.addEventListener("contextmenu", function (e) {
            e.preventDefault();
        }, false);
    </script>
</div>
<style>
    #reportViewer {
        position: absolute;
        left: 5px;
        right: 5px;
        top: 5px;
        bottom: 5px;
        overflow: hidden;
        font-family: Verdana, Arial;
    }
</style>




