<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <meta name="viewport" content="width=device-width" />

    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/MyStyle.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2016.3.914/kendo.material.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2016.3.914/kendo.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2016.3.914/kendo.mobile.all.min.css")" rel="stylesheet" type="text/css" />

    <link href="@Url.Content("~/Content/kendo/2016.3.914/kendo.dataviz.min.css")" rel="stylesheet" type="text/css" />
    @*	<link href="@Url.Content("~/Content/kendo/2016.2.714/kendo.default.min.css")" rel="stylesheet" type="text/css" />*@
    <link href="@Url.Content("~/Content/kendo/2016.3.914/kendo.dataviz.default.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/kendo/2016.3.914/jquery.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2016.3.914/angular.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2016.3.914/jszip.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2016.3.914/kendo.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2016.3.914/kendo.aspnetmvc.min.js")"></script>
    <script src="@Url.Content("~/Scripts/cultures/kendo.culture.id-ID.min.js")"></script>
    <script src="@Url.Content("~/Scripts/cultures/kendo.culture.id.min.js")"></script>

    <script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
    <!--Script references. -->
    <!--Reference the jQuery library. -->
    @*<script src="@Url.Content("~/Scripts/jquery-2.2.3.min.js")"></script>*@
    <!--Reference the SignalR library. -->
    <script src="@Url.Content("~/Scripts/jquery.signalR-2.2.1.min.js")"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="@Url.Content("~/signalr/hubs")"></script>
    <!--Add script to update the page and send messages.-->
</head>
<body>

    <table>
        <tr>
            <td>
                <header>
                    @Html.Kendo().TextBox().Name("_username").Value(User.Identity.Name).HtmlAttributes(new { style = "display:none;" })
                    <div class="content-wrapper">
                        <table width="100%">
                            <tr>
                                <td width="50%">
                                    <img src="@Url.Content("~/Content/Images/WalagriJatiUtama.png")" width="100%" />
                                </td>
                                <td style="text-align: right;">
                                    @Html.Partial("_LogInPartial")
                                </td>

                            </tr>
                        </table>
                        <table class="content-header">
                            <tr>
                                <td style="font-size: small;">
                                    @{
                                        List<Ptpn8.Models.Menu> menuList = ViewBag.Menu;
                                        List<Ptpn8.Models.MemoOnline.NotifikasiSudinModin> notifList = Ptpn8.Models.CRUD.CRUDNotifikasiSudinModin.CRUD.Read().ToList();
                                    }

                                    @functions {
                                        public static bool isInRoles(string[] roles)
                                        {
                                            bool isAuthorized = false;

                                            foreach (string role in roles)
                                            {
                                                if (role == "")
                                                {
                                                    isAuthorized = true;
                                                    break;
                                                }

                                                if (role == "Authorize")
                                                {
                                                    if (HttpContext.Current.User.Identity.IsAuthenticated)
                                                        isAuthorized = true;
                                                    else
                                                        isAuthorized = false;
                                                    break;
                                                }

                                                if (HttpContext.Current.User.IsInRole(role))
                                                {
                                                    isAuthorized = true;
                                                    break;
                                                }
                                            }
                                            return isAuthorized;
                                        }
                                    }


                                    @if (menuList != null)
                                    {
                                        <ul id="kmenu" style="display: none;">
                                            @foreach (var mp in menuList.Where(p => p.ParentId == Guid.Empty))
                                            {
                                                string[] roles;
                                                roles = mp.InRole.Split(',');
                                                if (isInRoles(roles) && DateTime.Today <= mp.TanggalKadaluarsa)
                                                //if (@mp.InRole == "" ? true : @mp.InRole == "Authorize" ? User.Identity.IsAuthenticated : User.IsInRole(@mp.InRole))
                                                {
                                                    <li>
                                                        @if (@mp.ActionName != "")
                                                        {
                                                            if (@mp.NamaView == "")
                                                            {
                                                                if (notifList.Where(o => o.MenuId == @mp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@mp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                                                {
                                                                    <span style="color:red; font-weight:600;">
                                                                        @Html.ActionLink(@mp.LinkText, @mp.ActionName, @mp.ControllerName, new { Area = @mp.Area }, null)
                                                                        *
                                                                    </span>
                                                                }
                                                                else
                                                                {
                                                                    @Html.ActionLink(@mp.LinkText, @mp.ActionName, @mp.ControllerName, new { Area = @mp.Area }, null);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (@mp.ControllerName == "Home")
                                                                {
                                                                    if (notifList.Where(o => o.MenuId == @mp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@mp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                                                    {
                                                                        <span style="color:red; font-weight:600;">
                                                                            @Html.ActionLink(@mp.LinkText, @mp.ActionName, @mp.ControllerName, new { Area = "", aplikasi = @mp.NamaView }, null)
                                                                            *
                                                                        </span>
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.ActionLink(@mp.LinkText, @mp.ActionName, @mp.ControllerName, new { Area = "", aplikasi = @mp.NamaView }, null);
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (notifList.Where(o => o.MenuId == @mp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@mp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                                                    {
                                                                        <span style="color:red; font-weight:600;">
                                                                            @Html.ActionLink(@mp.LinkText, @mp.ActionName, @mp.ControllerName, new { Area = "", aplikasiId = @mp.AplikasiId, menuId = @mp.MenuId }, null);
                                                                            *
                                                                        </span>
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.ActionLink(@mp.LinkText, @mp.ActionName, @mp.ControllerName, new { Area = "", aplikasiId = @mp.AplikasiId, menuId = @mp.MenuId }, null);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (notifList.Where(o => o.MenuId == @mp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@mp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                                            {
                                                                @mp.LinkText<span style="color:red; font-weight:600; font-size: large;">*</span>
                                                            }
                                                            else
                                                            {
                                                                @(mp.LinkText)
                                                            }
                                                        }

                                                        @if (menuList.Count(p => p.ParentId == mp.MenuId) > 0)
                                                        {
                                                            @:<ul>
                                                            }
                                                        @RenderMenuItem(menuList, mp, notifList)

                                                        @if (menuList.Count(p => p.ParentId == mp.MenuId) > 0)
                                                        {
                                                        @:</ul>
                                                    }
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    }
                                </td>
                            </tr>
                        </table>

                        @helper RenderMenuItem(List<Ptpn8.Models.Menu> menuList, Ptpn8.Models.Menu mi, List<Ptpn8.Models.MemoOnline.NotifikasiSudinModin> notifList)
                        {
                            foreach (var cp in menuList.Where(p => p.ParentId == mi.MenuId))
                            {
                                string[] roles;
                                roles = cp.InRole.Split(',');
                                @:<li>
                                    if (@cp.ActionName != "")
                                    {
                                        if (isInRoles(roles) && DateTime.Today <= cp.TanggalKadaluarsa)
                                        //if (@cp.InRole == "" ? true : @cp.InRole == "Authorize" ? User.Identity.IsAuthenticated : User.IsInRole(@cp.InRole))
                                        {
                                            if (@cp.NamaView == "")
                                            {
                                                if (notifList.Where(o => o.MenuId == @cp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@cp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                                {
                                                    <span style="color:red; font-weight:600;">
                                                        @Html.ActionLink(@cp.LinkText, @cp.ActionName, @cp.ControllerName, new { Area = @cp.Area }, null)
                                                        *
                                                    </span>
                                                }
                                                else
                                                {
                                                    @Html.ActionLink(@cp.LinkText, @cp.ActionName, @cp.ControllerName, new { Area = @cp.Area }, null);
                                                }
                                            }
                                            else
                                            {
                                                if (@cp.ControllerName == "Home")
                                                {
                                                    if (notifList.Where(o => o.MenuId == @cp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@cp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                                    {
                                                        <span style="color:red; font-weight:600;">
                                                            @Html.ActionLink(@cp.LinkText, @cp.ActionName, @cp.ControllerName, new { Area = "", aplikasi = @cp.NamaView }, null);
                                                            *
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        @Html.ActionLink(@cp.LinkText, @cp.ActionName, @cp.ControllerName, new { Area = "", aplikasi = @cp.NamaView }, null);
                                                    }
                                                }
                                                else
                                                {
                                                    if (notifList.Where(o => o.MenuId == @cp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@cp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                                    {
                                                        <span style="color:red; font-weight:600;">
                                                            @Html.ActionLink(@cp.LinkText, @cp.ActionName, @cp.ControllerName, new { Area = "", aplikasiId = @cp.AplikasiId, menuId = @cp.MenuId }, null)
                                                            *
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        @Html.ActionLink(@cp.LinkText, @cp.ActionName, @cp.ControllerName, new { Area = "", aplikasiId = @cp.AplikasiId, menuId = @cp.MenuId }, null);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (notifList.Where(o => o.MenuId == @cp.MenuId).ToList().Count > 0 || notifList.Where(o => o.IndukId.ToLower().Contains(@cp.MenuId.ToString().ToLower())).ToList().Count > 0)
                                        {
                                            @cp.LinkText<span style="color:red; font-weight:600; font-size: large;">*</span>
                                        }
                                        else
                                        {
                                            @(cp.LinkText)
                                        }
                                    }

                                    if (menuList.Count(p => p.ParentId.ToString() == cp.MenuId.ToString()) > 0)
                                    {
                                        @:<ul>
                                        }
                                        @RenderMenuItem(menuList, cp, notifList)
                                        if (menuList.Count(p => p.ParentId == cp.MenuId) > 0)
                                        {
                                        @:</ul>
                                    }
                                    else
                                    {
                                    @:</li>
                                }
                            }
                        }
                    </div>
                </header>
            </td>
        </tr>
        <tr>
            <td>
                <div id="body">
                    @RenderSection("featured", required: false)
                    <section class="content-wrapper main-content clear-fix">
                        @RenderBody()
                    </section>
                </div>
            </td>
        </tr>
    </table>
    


    

    <footer>
        @Html.Partial("_ViewSwitcher")
        <div class="content-wrapper">
            <div class="float-left">
                <p>&copy; @DateTime.Now.Year - PT Perkebunan Nusantara VIII</p>
                <div class="responsive-message"></div>
                @*@if (User.Identity.Name == "bdhendra@yahoo.com")
                    {
                        <div id="btnBroadcast" style="color:white;background-color:blue;font-weight:500;font-size:small;" class="k-button hide-on-narrow">
                            Broadcast message
                        </div>
                    }*@
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div id="btnPrivateChat" style="color:white;background-color:green;font-weight:500;font-size:small;" class="k-button hide-on-narrow">
                            Private chat
                        </div>
                    }
            </div>
        </div>
    </footer>
    <div id="chatWindow" class="container">
            @(Html.Kendo()
                .Grid<Ptpn8.Models.PenggunaPortalYangAktif>()
                .Name("grdPrivateChat")
                .Columns(g =>
                {
                    g.Bound(i => i.PenggunaPortalYangAktifId).Hidden();
                    g.Bound(i => i.Tanggal).Width(70).Filterable(false).Sortable(false).Title("Foto").HeaderHtmlAttributes(new { style = "display:none;" })
                        .ClientTemplate(@"<div class='photo'><img id='#:PenggunaPortalYangAktifId#' src='" + Url.Content("~/Content/Images/View/") + "#:PenggunaPortalYangAktifId#.jpg' alt='#: PenggunaPortalYangAktifId #' /></div>");
                    g.Bound(i => i.Nama).Title("Nama").Width(150).HeaderHtmlAttributes(new { style = "display:none;" });
                    g.ForeignKey(i => i.LokasiKerjaId, Ptpn8.Areas.Referensi.Models.CRUD.CRUDLokasiKerja.CRUD.getFlatData(), "LokasiKerjaId", "Text")
                        .Title("Lokasi Kerja")
                        .Width(300)
                        .HeaderHtmlAttributes(new { style = "display:none;" });
                    g.Command(cmd => cmd.Custom("Chat").Click("getPrivateChat"))
                        .HeaderHtmlAttributes(new { style = "display:none;" }).Width(70);
                })
                .AutoBind(false)
                .Navigatable()
                .Resizable(resizeable => resizeable.Columns(true))
                .Scrollable()
                .Sortable()
                .HtmlAttributes(new { style = "Height: 480px" })
                .DataSource(o => o
                    .Ajax()
                    .ServerOperation(false)
                    .Model(model =>
                    {
                        model.Id(p => p.PenggunaPortalYangAktifId);
                    })
                .Read(read => read.Action("readPenggunaPortal", "Home").Type(HttpVerbs.Post))
                )
            )
        </div>
        <div id="chatGrid">
            <table width="100%">
                <tr>
                    <td width="75%">
                        @Html.Kendo().TextBox().Name("txtChatMessage").HtmlAttributes(new { style = "width:100%" })
                    </td>
                    <td width="25%">
                        @Html.Kendo().Button().Name("btnSendMessage").Content("Send")
                        @Html.Kendo().Button().Name("btnLeaveMessage").Content("Leave")
                    </td>
                </tr>
            </table>
            <div id="grdChat">
            </div>
        </div>
        <div id="chatConfirmed">
            <table width="100%">
                <tr>
                    <td width="1%"></td>
                    <td width="98%"><span style="font-size: small; font-weight:400;"><span id="yangNgajakChat"></span> ajak chat. Setuju?</span></td>
                    <td width="1%"></td>
                </tr>
                <tr>
                    <td></td>
                    <td style="text-align:center;">
                        <button id="yesChat" class="delete k-button">Ya</button>
                        <button id="noChat" class="edit k-button">Tidak</button>
                    </td>
                    <td></td>
                </tr>
            </table>
        </div>
    @*
        <div id="broadcastWindow" class="container">
            <table width="100%">
                <tr>
                    <td width="90%">
                        @Html.TextArea("txtBroadcastMessage", "", new { @class = "k-textbox", style = "width: 100%; height: 250px" })
                    </td>
                </tr>
                <tr>
                    <td style="text-align:center">
                        @Html.Kendo().Button().Name("btnBroadcastMessage").Content("Send")
                    </td>
                </tr>

            </table>
        </div>
        <div id="broadcastMessageWindow" class="container">
            <table width="100%">
                <tr>
                    <td style="font-weight:600; color:red; font-size:large">
                        <label>Message dari Admin Portal PTPN-VIII</label>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label id="lblBroadcastMessage" style="font-size:small"></label>
                    </td>
                </tr>
                <tr>
                    <td style="text-align:center">
                        @Html.Kendo().Button().Name("btnOKBroadcastMessage").Content("Ok")
                    </td>
                </tr>
            </table>
        </div>*@

</body>
</html>

<script>
    var broadcastRoom;
    var chatRoom;
    var winBroadcast, winBroadcastMessage,winChat, winChatGrid, winChatConfirmed;
    var chat, yangDiajak, namaYangDiajak, yangMengajak, namaYangMengajak;
    var _username;

    kendo.culture("id-ID");
    $(document).ready(function () {

        $('#kmenu').css("display", "block");
        $('#kmenu').kendoPanelBar({
            //openOnClick: true
        });
        $('#kmenu').addClass("xk-menu");

        winBroadcast = $('#broadcastWindow').kendoWindow({
            title: "Broadcast Message",
            modal: true,
            visible: false,
            resizable: false,
            width: 400,
            height: 250
        }).data('kendoWindow');

        winBroadcastMessage = $('#broadcastMessageWindow').kendoWindow({
            title: "Broadcast Message",
            modal: true,
            visible: false,
            resizable: false,
            height: 300
        }).data('kendoWindow');

        winChat = $('#chatWindow').kendoWindow({
            title: "Private Message",
            modal: true,
            visible: false,
            resizable: false,
            width: 800,
            height: 500
        }).data('kendoWindow');

        winChatGrid = $('#chatGrid').kendoWindow({
            title: "Chat Dengan ",
            modal: true,
            visible: false,
            resizable: false,
            //width: 500,
            height: 300
        }).data('kendoWindow');

        winChatConfirmed = $('#chatConfirmed').kendoWindow({
            title: "Konfirmasi",
            modal: true,
            visible: false,
            resizable: false,
            //width: 300,
            height: 300
        }).data('kendoWindow');

        _username = $('#_username').val();
    });

    $(function () {
        // Declare a proxy to reference the hub.
        chat = $.connection.chatHub;
        // Create a function that the hub can call to broadcast messages.

        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#btnBroadcast').click(function () {
                winBroadcast.open().center();
            });
            $('#btnPrivateChat').click(function () {
                $('#grdPrivateChat').data('kendoGrid').dataSource.read();
                winChat.open().center();
            });
        });


        chat.client.broadcastMessage = function (data) {
            $('#lblBroadcastMessage').text(data);
            winBroadcastMessage.open().center();
            var aSound = document.createElement('audio');
            aSound.setAttribute('src', '/Sounds/ring.wav');
            aSound.play();
        };

        chat.client.ajakChat = function (_namaYangMengajak, _yangMengajak, _namaYangDiajak, _yangDiajak) {
            var aSound = document.createElement('audio');
            aSound.setAttribute('src', '/Sounds/sms.wav');
            aSound.play();
            $('#yangNgajakChat').text(_namaYangMengajak + '(' + _yangMengajak + ')');
            yangMengajak = _yangMengajak;
            namaYangMengajak = _namaYangMengajak;
            yangDiajak = _yangDiajak;
            namaYangDiajak = _namaYangDiajak;

            winChatConfirmed.open().center();
        };

        chat.client.setujuChat = function (data) {
            winChatGrid.title("Chat Dengan " + namaYangDiajak);
            chatRoom = data;
            winChatGrid.open().center();
        };

        chat.client.forceSetujuChat = function (_namaYangMengajak, _yangMengajak, _namaYangDiajak, _yangDiajak) {
            yangMengajak = _yangMengajak;
            namaYangMengajak = _namaYangMengajak;
            yangDiajak = _yangDiajak;
            namaYangDiajak = _namaYangDiajak;
            winChatGrid.title("Chat Dengan " + namaYangMengajak);
            winChatGrid.open().center();
            chatRoom = yangMengajak + "_DENGAN_" + yangDiajak;
            chat.server.forceSetujuChat(yangMengajak, yangDiajak, chatRoom);
        }

        chat.client.tolakChat = function () {
            alert("Ditolak!");
        };

        chat.client.gridMessage = function (data) {
            var aSound = document.createElement('audio');
            aSound.setAttribute('src', '/Sounds/notify1.wav');
            aSound.play();
            winChatGrid.open().center();
            var jsonData = JSON.parse(data);
            for (i = 0; i < jsonData.length; i++) {
                var m = jsonData[i];
                if (m.UserName == _username) m.Nama = 'You';
            }

            var grid = $("#grdChat").kendoGrid({
                dataSource: {
                    data: jsonData,
                    pageSize: 20,
                    serverPaging: true,
                    serverSorting: true
                },
                sortable: true,
                pageable: false,
                columns: [
                    {
                        template: "<span style='font-weight:600'>#:Nama+' : '#</span>" + "<span>#:TextMessage#</span>",
                        field: "Nama",
                        title: "Chat",
                    }
                ]
            });
        };

        chat.client.leaveMessage = function () {
            winChatGrid.close();
            winChat.close();
        };

        $("#yesChat").click(function () {
            winChatConfirmed.close();
            winChatGrid.title("Chat Dengan " + namaYangMengajak);
            winChatGrid.open().center();
            chatRoom = yangMengajak + "_DENGAN_" + yangDiajak;
            chat.server.setujuChat(yangMengajak, yangDiajak, chatRoom);
        });

        $("#noChat").click(function () {
            winChatConfirmed.close();
            chat.server.tolakChat(yangMengajak);
        });

        $("#btnBroadcastMessage").click(function () {
            var txt = $("#txtBroadcastMessage").val();
            chat.server.broadcastMessage(txt);
            $("#txtBroadcastMessage").val('');
        });

        $("#btnSendMessage").click(function () {
            var txt = $("#txtChatMessage").val();
            chat.server.sendMessage(chatRoom, txt);
            $("#txtChatMessage").val('');
        });


        $("#btnLeaveMessage").click(function () {
            chat.server.leaveMessage(chatRoom);
        });

        $("#btnOKBroadcastMessage").click(function () {
            winBroadcastMessage.close();
        });
    });

    function filterReadChat() {
        return { roomName: chatRoom }
    }

    function onCloseBroadcast() {
        $("#btnBroadcast").show();
    }
    function getPrivateChat(e) {
        e.preventDefault();
        var grid = $('#grdPrivateChat').data('kendoGrid');
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        yangDiajak = dataItem.UserName;
        namaYangDiajak = dataItem.Nama;
        chat.server.ajakChat(yangDiajak, namaYangDiajak);
    }


</script>

<style type="text/css">
    .xk-menu {
        border: 0;
        color: white;
        background-color: transparent;
        font-size: small;
        font-weight: 500;
        text-decoration: none;
    }
</style>