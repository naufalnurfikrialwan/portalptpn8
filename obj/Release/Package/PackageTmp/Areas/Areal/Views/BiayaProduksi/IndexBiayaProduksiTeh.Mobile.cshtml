@using Ptpn8.Areas.Areal.Models
@{
    ViewBag.Title = "Biaya Produksi Teh";
}
<img id="progress" src="~/Content/Images/ajax-loader.gif" style="position: absolute; left: 50%; top: 5%; " />

<table>
    <tr>
        <td width="50%">@Html.Kendo().CheckBox().Name("chkLayerPanel").Label("View Layer Control").Checked(false).HtmlAttributes(new { @onchange = "chkLayerPanelOnChange()" })</td>
        <td>@Html.Kendo().CheckBox().Name("chkLegendPanel").Label("View Map Legend").Checked(false).HtmlAttributes(new { @onchange = "chkLegendPanelOnChange()" })</td>
    </tr>
</table>
<br />

@(Html.Kendo().Splitter()
          .Name("vertical")
          .Orientation(SplitterOrientation.Vertical)
          .Panes(verticalPanes =>
          {
          verticalPanes.Add()
                .HtmlAttributes(new { id = "top-pane" })
                .Scrollable(false)
                .Size("600px")
                .Collapsible(false)
                .Content(
                        Html.Kendo().Splitter()
                            .Name("horizontal")
                            .HtmlAttributes(new { style = "height: 300px;" })
                            .Panes(horizontalPanes =>
                            {
                            horizontalPanes.Add()
                                .HtmlAttributes(new { id = "left-pane" })
                                .Size("200px")
                                .Collapsible(true)
                                .Collapsed(true)
                                .Content(@<div class="pane-content">
                                    <h3>Layer</h3>
                                    <br />
                                    <table style="width: inherit;">
                                        <tr><td>@Html.Kendo().CheckBox().Name("chkPopUp").Label("PopUp Window ").Checked(false).HtmlAttributes(new { @onchange = "chkPopUpOnChange()" })</td></tr>
                                        <tr><td>@Html.Kendo().CheckBox().Name("chkKebun").Label("Kebun").Checked(true).HtmlAttributes(new { @onchange = "chkKebunOnChange()" })</td></tr>
                                        <tr><td>@Html.Kendo().CheckBox().Name("chkStreetMap").Label("Street Map").Checked(true).HtmlAttributes(new { @onchange = "chkStreetMapOnChange()" })</td></tr>
                                        <tr><td>@Html.Kendo().CheckBox().Name("chkCitra").Label("Citra").Checked(false).HtmlAttributes(new { @onchange = "chkCitraOnChange()" })</td></tr>
                                        <tr><td>@Html.Kendo().CheckBox().Name("chkKontur").Label("Peta Kontur").Checked(false).HtmlAttributes(new { @onchange = "chkKonturOnChange()" })</td></tr>
                                        <tr><td><br /></td></tr>
                                        <tr><td>@Html.Kendo().Button().Name("btnMapExport").Content("Ekspor Peta").Events(e => e.Click("btnMapExportOnClick"))</td></tr>

                                        
                                        <tr><td><h4>Bulan-Tahun</h4></td></tr>
                                        <tr>
                                            <td>
                                                @(Html.Kendo().DropDownList()
                                                    .Name("ddlBulan")
                                                    .AutoBind(true)
                                                    .OptionLabel("Pilih Bulan...")
                                                    .DataTextField("Text")
                                                    .DataValueField("Value")
                                                    .HtmlAttributes(new { style = "width: 100px;" })
                                                    .Events(e => { e.Change("ddlBulanChange"); e.Select("ddlBulanSelect"); })
                                                    .Value(((DateTime.Now.Month) - 1).ToString())
                                                    .BindTo(new List<SelectListItem>()
                                                    {
                                                        new SelectListItem() {Text = "Januari",Value = "1"},
                                                        new SelectListItem() {Text = "Februari",Value = "2"},
                                                        new SelectListItem() {Text = "Maret",Value = "3"},
                                                        new SelectListItem() {Text = "April",Value = "4"},
                                                        new SelectListItem() {Text = "Mei",Value = "5"},
                                                        new SelectListItem() {Text = "Juni",Value = "6"},
                                                        new SelectListItem() {Text = "Juli",Value = "7"},
                                                        new SelectListItem() {Text = "Agustus",Value = "8"},
                                                        new SelectListItem() {Text = "September",Value = "9"},
                                                        new SelectListItem() {Text = "Oktober",Value = "10"},
                                                        new SelectListItem() {Text = "November",Value = "11"},
                                                        new SelectListItem() {Text = "Desember",Value = "12"},
                                                    })
                                                )
                                                -
                                                @(Html.Kendo().IntegerTextBox()
                                                    .Name("txtTahun")
                                                    .Value(DateTime.Now.Year)
                                                    .HtmlAttributes(new { style = "width: 60px;" })
                                                    .Events(e => { e.Change("txtTahunChange"); })
                                                    .Format("{0:0000}")
                                                )

                                            </td>
                                        </tr>
                                    </table>
                                </div>);

                            horizontalPanes.Add()
                                .HtmlAttributes(new { id = "center-pane" })
                                .Content(@<div id="map" style="width:100%;height:100%;">
                                    @(Html.Kendo().Map()
                                          .Name("map")
                                          .HtmlAttributes(new { style = "height: 100%;" })
                                          .Center(-6, 108) //(-6.878055, 107.596070)
                                          .Zoom(9)
                                          .Layers(layers =>
                                          {
                                              layers.Add()
                                                  .Type(MapLayerType.Tile)
                                                  .Key("streetmap")
                                                  .UrlTemplate("https://#= subdomain #.tile.openstreetmap.org/#= zoom #/#= x #/#= y #.png")
                                                  .Subdomains("a", "b", "c")
                                                  .Attribution("&copy; <a href='http://osm.org/copyright'>OpenStreetMap contributors</a>");
                                          })
                                          .Layers(layers =>
                                          {
                                              layers.Add()
                                                .Style(style => style.Fill(fill => fill.Opacity(1)))
                                                .Type(MapLayerType.Tile)
                                                .UrlTemplate("https://tile.thunderforest.com/cycle/#= zoom #/#= x #/#= y #.png")
                                                .Key("kontur");
                                          })
                                        .Layers(layers =>
                                        {
                                            layers.Add()
                                            .Style(style => style.Fill(fill => fill.Opacity(1)))
                                            .Key("citra")
                                            .Type(MapLayerType.Bing)
                                            .ImagerySet(MapLayersImagerySet.AerialWithLabels)
                                            .Key("AqaPuZWytKRUA8Nm5nqvXHWGL8BDCXvK8onCl2PkC581Zp3T_fYAQBiwIphJbRAK");
                                        })

                                        .Layers(layers =>
                                        {

                                            layers.Add()
                                             .Style(style => style.Fill(fill => fill.Opacity(1)))
                                             .Key("Kebun") // Index : 5
                                             .Type(MapLayerType.Shape)
                                             .DataSource(dataSource => dataSource
                                                 .GeoJson()
                                                 .Read(read => read.Action("KebunGeoJson", "BiayaProduksi").Data("getKebunData"))
                                             );

                                        })

                                        .Events(events => events
                                            .ShapeCreated("onShapeCreated")
                                            .ShapeMouseEnter("onShapeMouseEnter")
                                            .ShapeMouseLeave("onShapeMouseLeave")
                                            .ShapeClick("onShapeClick")
                                            .MarkerClick("onMarkerClick")
                                            .Click("onMapClick")
                                        )
                                    )

                                </div>);

                            horizontalPanes.Add()
                                .HtmlAttributes(new { id = "right-pane" })
                                .Collapsible(true)
                                .Collapsed(true)
                                .Scrollable(true)
                                .Size("300px")
                                .Content(@<div class="pane-content">
                                    <div class="legendKebun" style="display: block;">
                                        <h4>Legend</h4>
                                        <table>
                                            <tr>
                                                <td width="50px" style="color:white; background-color: green"></td>
                                                <td width="250px" style="vertical-align:middle;"><h4>Produksi Sendiri sd Bulan Ini >= 100% thd RKAP</h4></td>
                                            </tr>
                                            <tr>
                                                <td style="color:black; background-color: yellow"></td>
                                                <td style="vertical-align:middle;"><h4>Produksi Sendiri sd Bulan Ini >= 90% thd RKAP</h4></td>
                                            </tr>
                                            <tr>
                                                <td style="color:white; background-color: red"></td>
                                                <td style="vertical-align:middle;"><h4>Produksi Sendiri sd Bulan Ini < 90% thd RKAP</h4></td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>);

                            }).ToHtmlString()
              );
          })
)

@(Html.Kendo().TabStrip().Name("tabstrib").Animation(animation => animation.Open(effect => effect.Fade(FadeDirection.In)))
        .Items(items =>
        {
        items.Add().Text("Grafik Produksi").Selected(true).Content(@<text>
        <table width="100%" height="100%">
            <tr>
                <td class="tblChart" width="50%">
                    @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartProduksiPerBudidayaBI")
                                                        .Title("Produksi Bulan Ini")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalProduksiBI", "DashProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiJumlahProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPJumlahProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Budidaya)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(1000000)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                    )
                </td>
            </tr>
            <tr>
                <td class="tblChart" width="50%">
                    @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartProduksiPerBudidayaSBI")
                                                        .Title("Produksi sd Bulan Ini")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalProduksiSBI", "DashProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiJumlahProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPJumlahProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Budidaya)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(5000000)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                    )
                </td>
            </tr>
            <tr>
                <td class="tblChart" width="50%">
                    @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartProduksiTehBI")
                                                        .Title("Produksi Teh Bulan Ini")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalProduksiTehBI", "DashProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiJumlahProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPJumlahProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Kebun)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(100000)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                    )
                </td>
            </tr>
            <tr>
                <td class="tblChart" width="50%">
                    @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartProduksiTehSBI")
                                                        .Title("Produksi Teh sd Bulan Ini")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalProduksiTehSBI", "DashProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiJumlahProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPJumlahProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Kebun)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(500000)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                    )
                </td>
            </tr>

        </table>

        </text>);
            items.Add().Text("Grafik Biaya Produksi").Content(@<text>
            <table width="100%" height="100%">
                <tr>
                    <td class="tblChart" width="50%">
                        @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartBiayaProduksiPerBudidayaBI")
                                                        .Title("Biaya Produksi Bulan Ini (Rp.M)")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalBiayaProduksiBI", "DashBiayaProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiBiayaProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPBiayaProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Budidaya)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(10)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                        )
                    </td>
                </tr>
                <tr>
                    <td class="tblChart" width="50%">
                        @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartBiayaProduksiPerBudidayaSBI")
                                                        .Title("Biaya Produksi sd Bulan Ini (Rp.M)")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalBiayaProduksiSBI", "DashBiayaProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiBiayaProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPBiayaProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Budidaya)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(50)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                        )
                    </td>
                </tr>
                <tr>
                    <td class="tblChart" width="50%">
                        @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartBiayaProduksiTehBI")
                                                        .Title("Biaya Produksi Teh Bulan Ini (Rp.M)")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalBiayaProduksiTehBI", "DashBiayaProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiBiayaProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPBiayaProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Kebun)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(5)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                        )
                    </td>
                </tr>
                <tr>
                    <td class="tblChart" width="50%">
                        @(Html.Kendo().Chart<ChartProduksiPerBudidaya>()
                                                        .Name("ChartBiayaProduksiTehSBI")
                                                        .Title("Biaya Produksi Teh sd Bulan Ini (Rp.M)")
                                                        .AutoBind(false)
                                                        .Legend(legend => legend
                                                            .Position(ChartLegendPosition.Top)
                                                        )
                                                        .DataSource(ds => ds
                                                            .Read(read => read.Action("ChartTotalBiayaProduksiTehSBI", "DashBiayaProduksi").Data("getKebunData"))
                                                        )
                                                        .Series(series =>
                                                        {
                                                            series.Column(model => model.RealisasiBiayaProduksi).Name("Realisasi").Color("green");
                                                            series.Column(model => model.RKAPBiayaProduksi).Name("RKAP").Color("red");
                                                        })
                                                        .CategoryAxis(axis => axis
                                                            .Categories(model => model.Kebun)
                                                            .Labels(labels => labels.Rotation(-90))
                                                            .MajorGridLines(lines => lines.Visible(false)))
                                                        .ValueAxis(axis => axis.Numeric()
                                                            .Labels(labels => labels.Format("{0:N0}"))
                                                            .MajorUnit(10)
                                                            .Line(line => line.Visible(false)))
                                                        .Tooltip(tooltip => tooltip
                                                            .Visible(true)
                                                            .Format("{0:N0}")
                                                        )
                        )
                    </td>
                </tr>

            </table>

            </text>);
            items.Add().Text("Data").Content(@<text>
                <div><h3>Biaya Produksi Teh, Bulan : <input type="text" id="lblBulan" readonly="readonly" style="font-weight: 600; background: none; " /></h3></div>

                <div class="grdKebun">
                    @(Html.Kendo().Grid<Ptpn8.Areas.Areal.Models.BiayaProduksiperBudidaya>().Name("grdDataKebun")
                                    //.Pageable()
                                    .Resizable(resizeable => resizeable.Columns(true))
                                    .Sortable()
                                    .Scrollable()
                                    .Groupable()
                                    .Selectable()
                                    .Events(e => { e.DataBound("grdDataKebunOnDataBound"); e.Change("grdDataKebunOnChange"); })
                                    .HtmlAttributes(new { style = "height: 600px;" })
                                    .ToolBar(tools => tools.Excel())
                                    .AutoBind(false)
                                    .Excel(excel => excel
                                          .FileName("ArealKebun.xlsx")
                                          .Filterable(true)
                                          .AllPages(true)
                                          .ProxyURL(Url.Action("Excel_Export_Save", "Home"))
                                      )
                                  .Columns(c =>
                                  {
                                      c.Bound(o => o.KebunId).Hidden();
                                      c.Bound(o => o.NamaKebun).HeaderTemplate("Kebun").Locked(true).Width(150);
                                      c.Bound(o => o.NamaWilayah).HeaderTemplate("Wilayah").Groupable(true).Hidden();
                                      //c.Bound(o => o.NamaBudidaya).HeaderTemplate("Budidaya").Groupable(true).Locked(true).Width(150); //.ClientTemplate("#= StringJSonDecode(JSON.stringify(DaftarBudidaya)) #");
                                      c.Bound(o => o.LuasAreal).Locked(false).HeaderTemplate("Luas (Ha)").Width(80).Format("{0:n2}").HtmlAttributes(new { style = "text-align: right;" })
                                        .ClientGroupFooterTemplate("#= kendo.toString(sum,'n2') #")
                                        .ClientFooterTemplate("#= kendo.toString(sum,'n2') #")
                                        .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                      c.Group(o => o
                                        .Title("Realisasi Produksi Bulan Ini (Kg)")
                                        .Columns(g =>
                                        {
                                            g.Bound(q => q.ProduksiSendiriMurni_BI).HeaderTemplate("Produksi Sendiri (%RKAP)").Format("{0:n0}")
                                                .ClientTemplate("<div>#= kendo.toString(ProduksiSendiriMurni_BI,'n0')#</div><div>(#= kendo.toString(ProduksiSendiriMurni_BI/ProduksiSendiriMurni_RBI,'p0')#)</div>")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.ProduksiLancuranTBM_BI).HeaderTemplate("Lancuran/TBM (%RKAP)").Format("{0:n0}")
                                                .ClientTemplate("<div>#= kendo.toString(ProduksiLancuranTBM_BI,'n0')#</div><div>(#= kendo.toString(ProduksiLancuranTBM_BI/ProduksiLancuranTBM_RBI,'p0')#)</div>")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.JumlahProduksi_BI).HeaderTemplate("Jumlah (%RKAP)").Format("{0:n0}")
                                                .ClientTemplate("<div>#= kendo.toString(JumlahProduksi_BI,'n0')#</div><div>(#= kendo.toString(JumlahProduksi_BI/JumlahProduksi_RBI,'p0')#)</div>")
                                                .Width(100)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                        }));

                                      c.Group(o => o
                                        .Title("RKAP Produksi Bulan InI (Kg)")
                                        .Columns(g =>
                                        {
                                            g.Bound(q => q.ProduksiSendiriMurni_RBI).HeaderTemplate("Produksi Sendiri").Format("{0:n0}")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.ProduksiLancuranTBM_RBI).HeaderTemplate("Lancuran/TBM").Format("{0:n0}")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.JumlahProduksi_RBI).HeaderTemplate("Jumlah").Format("{0:n0}")
                                                .Width(100)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.JumlahProduksi_RBI).HeaderTemplate("% Realisasi thd RKAP").Format("{0:n0}")
                                                .ClientTemplate("#= kendo.toString(JumlahProduksi_BI/JumlahProduksi_RBI,'p') #")
                                                .Width(100)
                                                .HtmlAttributes(new { style = "text-align: right;" });
                                        }));

                                      c.Group(o => o
                                        .Title("Realisasi Produksi sd Bulan InI (Kg)")
                                        .Columns(g =>
                                        {
                                            g.Bound(q => q.ProduksiSendiriMurni_SBI).HeaderTemplate("Produksi Sendiri (%RKAP)").Format("{0:n0}")
                                                .ClientTemplate("<div>#= kendo.toString(ProduksiSendiriMurni_SBI,'n0')#</div><div>(#= kendo.toString(ProduksiSendiriMurni_SBI/ProduksiSendiriMurni_RSBI,'p0')#)</div>")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.ProduksiLancuranTBM_SBI).HeaderTemplate("Lancuran/TBM (%RKAP)").Format("{0:n0}")
                                                .ClientTemplate("<div>#= kendo.toString(ProduksiSendiriMurni_SBI,'n0')#</div><div>(#= kendo.toString(ProduksiSendiriMurni_SBI/ProduksiSendiriMurni_RSBI,'p0')#)</div>")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.JumlahProduksi_SBI).HeaderTemplate("Jumlah (%RKAP)").Format("{0:n0}")
                                                .ClientTemplate("<div>#= kendo.toString(ProduksiSendiriMurni_SBI,'n0')#</div><div>(#= kendo.toString(ProduksiSendiriMurni_SBI/ProduksiSendiriMurni_RSBI,'p0')#)</div>")
                                                .Width(100)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                        }));

                                      c.Group(o => o
                                        .Title("RKAP Produksi sd Bulan InI (Kg)")
                                        .Columns(g =>
                                        {
                                            g.Bound(q => q.ProduksiSendiriMurni_RSBI).HeaderTemplate("Produksi Sendiri").Format("{0:n0}")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.ProduksiLancuranTBM_RSBI).HeaderTemplate("Lancuran/TBM").Format("{0:n0}")
                                                .Width(70)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.JumlahProduksi_RSBI).HeaderTemplate("Jumlah").Format("{0:n0}")
                                                .Width(100)
                                                .HtmlAttributes(new { style = "text-align: right;" })
                                                .ClientGroupFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .ClientFooterTemplate("#= kendo.toString(sum,'n0') #")
                                                .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                            g.Bound(q => q.JumlahProduksi_RBI).HeaderTemplate("% Realisasi thd RKAP").Format("{0:n0}")
                                                .ClientTemplate("#= kendo.toString(JumlahProduksi_SBI/JumlahProduksi_RSBI,'p') #")
                                                .Width(100)
                                                .HtmlAttributes(new { style = "text-align: right;" });
                                        }));


                                      c.Group(o => o
                                          .Title("Realisasi Biaya Bulan Ini (Rp 000)")
                                          .Columns(p =>
                                          {
                                              p.Bound(q => q.JumlahBiayaProduksi_BI).HeaderTemplate("Jumlah (%RKAP)").Format("{0:n0}")
                                                    .ClientTemplate("<div>#= kendo.toString(JumlahBiayaProduksi_BI/1000,'n0')#</div><div>(#= kendo.toString(JumlahBiayaProduksi_BI/JumlahBiayaProduksi_RBI,'p0')#)</div>")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" })
                                                  .ClientGroupFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .ClientFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                              p.Bound(q => q.JumlahBiayaProduksi_BI).HeaderTemplate("Biaya Produksi per Satuan (%RKAP)").Format("{0:n0}")
                                                  .ClientTemplate("<div>#= kendo.toString(JumlahBiayaProduksi_BI/JumlahProduksi_BI,'n0')#</div><div>(#= kendo.toString((JumlahBiayaProduksi_BI/JumlahProduksi_BI)/(JumlahBiayaProduksi_RBI/JumlahProduksi_RBI),'p0')#)</div>")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" });
                                          })
                                      );

                                      c.Group(o => o
                                          .Title("RKAP Biaya Bulan Ini (Rp 000)")
                                          .Columns(p =>
                                          {
                                              p.Bound(q => q.JumlahBiayaProduksi_RBI).HeaderTemplate("Jumlah").Format("{0:n0}")
                                                    .ClientTemplate("<div>#= kendo.toString(JumlahBiayaProduksi_RBI/1000,'n0')#</div>")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" })
                                                  .ClientGroupFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .ClientFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                              p.Bound(q => q.JumlahBiayaProduksi_RBI).HeaderTemplate("Biaya Produksi").Format("{0:n0}")
                                                    .ClientTemplate("<div>#= kendo.toString(JumlahBiayaProduksi_RBI/1000,'n0')#</div>")
                                                  .ClientTemplate("#= kendo.toString(JumlahBiayaProduksi_RBI/JumlahProduksi_RBI,'n0') #")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" });
                                          })
                                      );

                                      c.Group(o => o
                                          .Title("Realisasi Biaya sd Bulan Ini (Rp 000)")
                                          .Columns(p =>
                                          {
                                              p.Bound(q => q.JumlahBiayaProduksi_SBI).HeaderTemplate("Jumlah").Format("{0:n0}")
                                                    .ClientTemplate("<div>#= kendo.toString(JumlahBiayaProduksi_SBI/1000,'n0')#</div><div>(#= kendo.toString(JumlahBiayaProduksi_SBI/JumlahBiayaProduksi_RSBI,'p0')#)</div>")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" })
                                                  .ClientGroupFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .ClientFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                              p.Bound(q => q.JumlahBiayaProduksi_SBI).HeaderTemplate("Biaya Produksi").Format("{0:n0}")
                                                  .ClientTemplate("<div>#= kendo.toString(JumlahBiayaProduksi_SBI/JumlahProduksi_SBI,'n0')#</div><div>(#= kendo.toString((JumlahBiayaProduksi_SBI/JumlahProduksi_SBI)/(JumlahBiayaProduksi_RSBI/JumlahProduksi_RSBI),'p0')#)</div>")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" });
                                          })
                                      );

                                      c.Group(o => o
                                          .Title("RKAP Biaya sd Bulan Ini (Rp 000)")
                                          .Columns(p =>
                                          {
                                              p.Bound(q => q.JumlahBiayaProduksi_RSBI).HeaderTemplate("Jumlah").Format("{0:n0}")
                                                    .ClientTemplate("<div>#= kendo.toString(JumlahBiayaProduksi_RSBI/1000,'n0')#</div>")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" })
                                                  .ClientGroupFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .ClientFooterTemplate("#= kendo.toString(sum/1000,'n0') #")
                                                  .FooterHtmlAttributes(new { style = "text-align: right; font-weight: 500; color: black; font-size: medium; background: silver;" });
                                              p.Bound(q => q.JumlahBiayaProduksi_RSBI).HeaderTemplate("Biaya Produksi").Format("{0:n0}")
                                                  .ClientTemplate("#= kendo.toString(JumlahBiayaProduksi_RSBI/JumlahProduksi_RSBI,'n0') #")
                                                  .Width(100)
                                                  .HtmlAttributes(new { style = "text-align: right;" });
                                          })
                                      );
                                  })
                                  .DataSource(d => d
                                      .Ajax()
                                      .Read(r => r.Action("biayaProduksi", "BiayaProduksi").Data("getKebunData"))
                                      .Group(g => { g.Add(p => p.NamaWilayah); })
                                      .Model(m => m.Id(p => p.KebunId))
                                      .Aggregates(ag =>
                                      {
                                          ag.Add(o => o.LuasAreal).Sum();
                                          ag.Add(o => o.ProduksiSendiriMurni_BI).Sum();
                                          ag.Add(o => o.ProduksiPembelianAntarKebun_BI).Sum();
                                          ag.Add(o => o.ProduksiPenjualanAntarKebun_BI).Sum();
                                          ag.Add(o => o.ProduksiLancuranTBM_BI).Sum();
                                          ag.Add(o => o.ProduksiPihak3_BI).Sum();
                                          ag.Add(o => o.JumlahProduksi_BI).Sum();
                                          ag.Add(o => o.BiayaPemeliharaanTM_BI).Sum();
                                          ag.Add(o => o.BiayaPanen_BI).Sum();
                                          ag.Add(o => o.BiayaPengangkutan_BI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanTanaman_BI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanNonTanaman_BI).Sum();
                                          ag.Add(o => o.BiayaPengolahan_BI).Sum();
                                          ag.Add(o => o.BiayaPembelianHasilTanaman_BI).Sum();
                                          ag.Add(o => o.BiayaPenjualanHasilTanaman_BI).Sum();
                                          ag.Add(o => o.JumlahBiayaProduksi_BI).Sum();

                                          ag.Add(o => o.ProduksiSendiriMurni_SBI).Sum();
                                          ag.Add(o => o.ProduksiPembelianAntarKebun_SBI).Sum();
                                          ag.Add(o => o.ProduksiPenjualanAntarKebun_SBI).Sum();
                                          ag.Add(o => o.ProduksiLancuranTBM_SBI).Sum();
                                          ag.Add(o => o.ProduksiPihak3_SBI).Sum();
                                          ag.Add(o => o.JumlahProduksi_SBI).Sum();
                                          ag.Add(o => o.BiayaPemeliharaanTM_SBI).Sum();
                                          ag.Add(o => o.BiayaPanen_SBI).Sum();
                                          ag.Add(o => o.BiayaPengangkutan_SBI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanTanaman_SBI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanNonTanaman_SBI).Sum();
                                          ag.Add(o => o.BiayaPengolahan_SBI).Sum();
                                          ag.Add(o => o.BiayaPembelianHasilTanaman_SBI).Sum();
                                          ag.Add(o => o.BiayaPenjualanHasilTanaman_SBI).Sum();
                                          ag.Add(o => o.JumlahBiayaProduksi_SBI).Sum();

                                          ag.Add(o => o.ProduksiSendiriMurni_RBI).Sum();
                                          ag.Add(o => o.ProduksiPembelianAntarKebun_RBI).Sum();
                                          ag.Add(o => o.ProduksiPenjualanAntarKebun_RBI).Sum();
                                          ag.Add(o => o.ProduksiLancuranTBM_RBI).Sum();
                                          ag.Add(o => o.ProduksiPihak3_RBI).Sum();
                                          ag.Add(o => o.JumlahProduksi_RBI).Sum();
                                          ag.Add(o => o.BiayaPemeliharaanTM_RBI).Sum();
                                          ag.Add(o => o.BiayaPanen_RBI).Sum();
                                          ag.Add(o => o.BiayaPengangkutan_RBI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanTanaman_RBI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanNonTanaman_RBI).Sum();
                                          ag.Add(o => o.BiayaPengolahan_RBI).Sum();
                                          ag.Add(o => o.BiayaPembelianHasilTanaman_RBI).Sum();
                                          ag.Add(o => o.BiayaPenjualanHasilTanaman_RBI).Sum();
                                          ag.Add(o => o.JumlahBiayaProduksi_RBI).Sum();

                                          ag.Add(o => o.ProduksiSendiriMurni_RSBI).Sum();
                                          ag.Add(o => o.ProduksiPembelianAntarKebun_RSBI).Sum();
                                          ag.Add(o => o.ProduksiPenjualanAntarKebun_RSBI).Sum();
                                          ag.Add(o => o.ProduksiLancuranTBM_RSBI).Sum();
                                          ag.Add(o => o.ProduksiPihak3_RSBI).Sum();
                                          ag.Add(o => o.JumlahProduksi_RSBI).Sum();
                                          ag.Add(o => o.BiayaPemeliharaanTM_RSBI).Sum();
                                          ag.Add(o => o.BiayaPanen_RSBI).Sum();
                                          ag.Add(o => o.BiayaPengangkutan_RSBI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanTanaman_RSBI).Sum();
                                          ag.Add(o => o.BiayaPenyusutanNonTanaman_RSBI).Sum();
                                          ag.Add(o => o.BiayaPengolahan_RSBI).Sum();
                                          ag.Add(o => o.BiayaPembelianHasilTanaman_RSBI).Sum();
                                          ag.Add(o => o.BiayaPenjualanHasilTanaman_RSBI).Sum();
                                          ag.Add(o => o.JumlahBiayaProduksi_RSBI).Sum();

                                          ag.Add(o => o.BiayaStaf_BI).Sum();
                                          ag.Add(o => o.BiayaStaf_SBI).Sum();
                                          ag.Add(o => o.BiayaStaf_RBI).Sum();
                                          ag.Add(o => o.BiayaStaf_RSBI).Sum();

                                      })
                              ))

                </div>


            </text>);
        })

)

<script>
    var chkPopUp, chkKebun, chkStreetMap, chkCitra, chkKontur;
    var tahun, bulan;
    var map, activeLayer;
    var shapeKlik;
    var statusAreal, lokasiID, kebunID, budidaya, masaBerlakuHGU, textSearch, loadDataKebun;
    var indexStreetMap = 0;
    var indexKontur = 1;
    var indexCitra = 2;
    //var indexKebunTile = 3;
    var indexKebun = 3;
    //var indexAfdeling = 5;
    //var indexBlok = 6;
    var mapExtent;
    var inputProject;

    var popup = $("<div>Foo</div>")
        .appendTo(document.body)
        .kendoPopup()
        .data("kendoPopup");

    $(document).ajaxStart(function () {
        $("#progress").show();
    }).ajaxStop(function () {
        $("#progress").hide();
    });

    $(document).ready(function () {
        bulan = $('#ddlBulan').data('kendoDropDownList').value();
        tahun = $('#txtTahun').val();
        $('#lblBulan').val($('#ddlBulan').data('kendoDropDownList').text() + '-' + $('#txtTahun').val());

        chkPopUp = false;
        chkKebun = true;
        chkStreetMap = true;
        chkCitra = false;
        chkKontur = false;
        statusAreal = "0";
        budidaya = '';
        textSearch = "";
        masaBerlakuHGU = "0"
        shapeKlik = false;
        activeLayer = "Kebun";
        inputProject = false;
        map = $('#map').data('kendoMap');
        for (var i = 0; i < map.layers.length; i++)
        {
            var lyr = map.layers[i];
            if (lyr.options.key == "KebunTile" || lyr.options.key == "Kebun" || lyr.options.key == 'streetmap') lyr.show(); else lyr.hide();
        }
        loadDataKebun = true;
        resetGridData();
    });

    function onShapeCreated(e) {
        var shape = e.shape;

        shape.options.fill.set("color", shape.dataItem.properties.COLOR);


    }

    function onShapeMouseEnter(e) {
        e.shape.options.set("fill.opacity", 0.7);
        var oe = e.originalEvent;
        var x = oe.pageX || oi.clientX;
        var y = oe.pageY || oi.clientY;
        var name = e.shape.dataItem.properties.NAMA_KEBUN;
        $('#NamaLokasi').val(name);
        popup.element.html("<h4>" + name + " (" + kendo.toString(e.shape.dataItem.properties.VALUE1 / e.shape.dataItem.properties.VALUE2, 'p2') + ")</h4>" +
            "<table>" +
            "<tr>" +
                "<td width='200px'>Realisasi Prod Sendiri sd Bulan Ini</td>" +
                "<td width='80px' style='text-align: right'>" + kendo.toString(e.shape.dataItem.properties.VALUE1,'n0') + " Kg </td>" +
            "</tr>" +
            "<tr>" +
                "<td>RKAP Prod Sendiri sd Bulan Ini</td>" +
                "<td style='text-align: right'>" + kendo.toString(e.shape.dataItem.properties.VALUE2, 'n0') + " Kg </td>" +
            "</tr>" +
            "</table>"
            )
        popup.open(x, y);
    }

    function onShapeMouseLeave(e) {
        e.shape.options.set("fill.opacity", 1);
        if (!$(e.originalEvent.relatedTarget).is(".k-popup, .k-animation-container")) {
            if (!chkPopUp) {
                popup.close();
                popup.element.kendoStop(true, true);
            }
        }
    }

    function onMarkerClick(e)
    {
    }

    function onMapClick(e)
    {
    }

    function onShapeClick(e) {
    }

    function chkPopUpOnChange(e) {
        if (chkPopUp) chkPopUp = false; else chkPopUp=true;
    }

    function chkKebunOnChange(e) {
        var map = $('#map').data('kendoMap');
        if (chkKebun) {
            chkKebun = false;
            map.layers[indexKebun].hide();
            map.layers[indexAfdeling].hide();
            map.layers[indexBlok].hide();
        }
        else {
            chkKebun = true;
            if (activeLayer == "Kebun") {
                map.layers[indexKebun].show();
                map.layers[indexAfdeling].hide();
                map.layers[indexBlok].hide();
            }
            else if (activeLayer == "Afdeling") {
                map.layers[indexKebun].hide();
                map.layers[indexAfdeling].show();
                map.layers[indexBlok].hide();
            }
            else if (activeLayer == "Blok") {
                map.layers[indexKebun].hide();
                map.layers[indexAfdeling].show();
                map.layers[indexBlok].show();
            }
        }
    }

    function chkStreetMapOnChange(e) {
        var map = $('#map').data('kendoMap');
        if (chkStreetMap) {
            chkStreetMap = false;
            map.layers[indexStreetMap].hide();
        }
        else {
            chkStreetMap = true;
            map.layers[indexStreetMap].show();
        }
    }

    function chkKonturOnChange(e) {
        var map = $('#map').data('kendoMap');
        if (chkKontur) {
            chkKontur = false;
            map.layers[indexKontur].hide();
        }
        else {
            chkKontur = true;
            map.layers[indexKontur].show();
        }
    }

    function chkCitraOnChange(e) {
        var map = $('#map').data('kendoMap');
        if (chkCitra) {
            chkCitra= false;
            map.layers[indexCitra].hide();
        }
        else {
            chkCitra = true;
            map.layers[indexCitra].show();
        }
    }

    function grdLegendKebunOnDataBound(e)
    {
    }

    function grdLegendKebunOnChange(e) {
        var data = this.dataItem(this.select());
        var id = data.KebunId;
        cariLokasi(id, "Kebun");
    }

    function grdLegendAfdelingOnDataBound(e) {
    }

    function grdLegendAfdelingOnChange(e) {
        var data = this.dataItem(this.select());
        var id = data.Id;
        cariLokasi(id, "Afdeling");
    }

    function grdLegendBlokOnDataBound(e) {
    }

    function grdLegendBlokOnChange(e) {
        var data = this.dataItem(this.select());
        var id = data.Id;
        cariLokasi(id, "Blok");
    }

    function grdLegendCariOnDataBound(e) {
    }

    function grdLegendCariOnChange(e) {
        var data = this.dataItem(this.select());
        var id = data.Id;
        var lyrKey = data.Warna;
        lokasiID = data.IdInduk;
        cariLokasi(id, lyrKey);
    }

    function grdDataKebunOnDataBound(e)
    {
        var rows = e.sender.tbody.children();
        var RealProduksi = 0;
        var RKAPProduksi = 0;

        for (var j = 0; j < rows.length; j++) {
            var row = $(rows[j]);
            var dataItem = e.sender.dataItem(row);
            RealProduksi = dataItem.get("ProduksiSendiriMurni_SBI") + dataItem.get("ProduksiLancuranTBM_SBI");
            RKAPProduksi = dataItem.get("ProduksiSendiriMurni_RSBI") + +dataItem.get("ProduksiLancuranTBM_RSBI");

            if (RealProduksi/RKAPProduksi < 0.9) {
                row.addClass("PencapaianDibawah90pct");
            }
            else if (RealProduksi / RKAPProduksi >= 1) {
                row.addClass("PencapaianDiatas100pct");
            }
            else
            {
                row.addClass("PencapaianDiatas90sd100pct");
            }

        }
    }

    function grdDataKebunOnChange(e) {
        var data = this.dataItem(this.select());
        var id = data.KebunId;
        cariLokasi(id, "Kebun");
    }

    function grdDataAfdelingOnDataBound(e)
    {
    }

    function grdDataAfdelingOnChange(e) {
        var data = this.dataItem(this.select());
        var id = data.Id;
        cariLokasi(id, "Afdeling");
    }

    function grdDataBlokOnDataBound(e)
    {
    }

    function grdDataBlokOnChange(e) {
        var data = this.dataItem(this.select());
        var id = data.Id;
        cariLokasi(id, "Blok");
    }

    function cariLokasi(id, lyrKey)
    {
        var map = $('#map').data('kendoMap');
        {
            _cariLokasi(id, lyrKey).done(function (result) {
                if (result[0] != '') {
                    var loc1 = new kendo.dataviz.map.Location(result[2], result[1]);
                    var loc2 = new kendo.dataviz.map.Location(result[4], result[3]);
                    var extent = new kendo.dataviz.map.Extent(loc1, loc2);
                    map.layers[indexKebun].show();
                    mapExtent = extent;
                    map.extent(extent);
                    map.zoom(13);
                }
            });
        }
    }

    function _cariLokasi(id, lyrKey)
    {
        var url = '../Areal/Home/cariLokasi';
        return $.ajax({
            url: url,
            data: {
                id: id,
                key: lyrKey
            }, //parameters go here in object literal form
            type: 'GET',
            datatype: 'json'
        });
    }

    function getKebunData()
    {
        return { Id: "", budidaya: "Teh", tahun: tahun , bulan: bulan }
    }

    function getAfdelingData()
    {
        return { Id: lokasiID, budidaya: "Teh", tahun: tahun, bulan: bulan }
    }

    function getBlokData()
    {
        return { Id: lokasiID, budidaya: "Teh", tahun: tahun, bulan: bulan }
    }

    function legendData() {
        return { Id: lokasiID, statusAreal: '1.1', budidaya: "Teh", tahun: tahun, bulan: bulan }
    }

    function legendCari() {
        return { cariText: $('#txtCari').val() }
    }

    function KebunGeoJsonData() {
        return { Id: lokasiID, budidaya: "Teh", tahun: tahun, bulan: bulan }
    }

    function AfdelingGeoJsonData() {
        return { Id: lokasiID, statusAreal: '1.1', budidaya: "Teh", tahun: tahun, bulan: bulan }
    }

    function BlokGeoJsonData() {
        return { Id: lokasiID, statusAreal: '1.1', budidaya: "Teh", tahun: tahun, bulan: bulan }
    }

    function ddlBudidayaOnSelect(e)
    {
    }

    function ddlBudidayaOnChange(e)
    {
        budidaya = $('#ddlBudidaya').data('kendoDropDownList').value();
        loadDataKebun = true;
        resetGridData();
    }

    function resetGridData() {

        var map = $('#map').data('kendoMap');
        map.layers[indexKebun].dataSource.read().done(function () {
            $('#ChartProduksiPerBudidayaBI').data('kendoChart').dataSource.read().done(function () {
                $('#ChartProduksiPerBudidayaSBI').data('kendoChart').dataSource.read().done(function () {
                    $('#ChartProduksiTehBI').data('kendoChart').dataSource.read().done(function () {
                        $('#ChartProduksiTehSBI').data('kendoChart').dataSource.read().done(function () {
                            $('#ChartBiayaProduksiPerBudidayaBI').data('kendoChart').dataSource.read().done(function () {
                                $('#ChartBiayaProduksiPerBudidayaSBI').data('kendoChart').dataSource.read().done(function () {
                                    $('#ChartBiayaProduksiTehBI').data('kendoChart').dataSource.read().done(function () {
                                        $('#ChartBiayaProduksiTehSBI').data('kendoChart').dataSource.read().done(function () {
                                            $('#grdDataKebun').data('kendoGrid').dataSource.read();
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });

    }

    function btnSearchOnClick(e)
    {
        activeLayer = "Kebun";
        $('#grdLegendCari').data('kendoGrid').dataSource.read({ cariText: $('#txtCari').val() }).done(function () {
            $('.legendKebun').css('display', 'none');
            $('.legendAfdeling').css('display', 'none');
            $('.legendBlok').css('display', 'none');
            $('.legendCari').css('display', 'block');
        });
    }

    function btnMapExportOnClick(e)
    {
        // Convert the DOM element to a drawing using kendo.drawing.drawDOM
        kendo.drawing.drawDOM($("#map"))
        .then(function (group) {
            // Render the result as a PNG image
            return kendo.drawing.exportImage(group);
        })
        .done(function (data) {
            // Save the image file
            kendo.saveAs({
                dataURI: data,
                fileName: "Map.png",
                proxyURL: "@Url.Action("Export_Save", "Home")"
            });
    });

    }

    function StringJSonDecode(value)
    {
        return value.replace(/"/g, '').replace("[",'').replace("]",'').replace(/,/g,", ");
    }

    function ddlBulanChange(e) {
        bulan = $('#ddlBulan').data('kendoDropDownList').value();
        loadDataKebun = true;
        $('#lblBulan').val($('#ddlBulan').data('kendoDropDownList').text() + '-' + $('#txtTahun').val());
        resetGridData();
    }

    function ddlBulanSelect(e) {
        //bulan = $('#ddlBulan').data('kendoDropDownList').value();
        //loadDataKebun = true;
        //resetGridData();
    }

    function txtTahunChange(e)
    {
        tahun = $('#txtTahun').val();
        loadDataKebun = true;
        $('#lblBulan').val($('#ddlBulan').data('kendoDropDownList').text() + '-' + $('#txtTahun').val());
        resetGridData();
    }

</script>


<style>
    #vertical {
        height: 300px;
        margin: 0 auto;
    }

    #middle-pane {
        background-color: rgba(60, 70, 80, 0.10);
    }

    #bottom-pane {
        background-color: rgba(60, 70, 80, 0.15);
    }

    #left-pane, #center-pane, #right-pane {
        background-color: rgba(60, 70, 80, 0.05);
    }

    .pane-content {
        padding: 0 10px;
    }
    /*.k-grid .k-header {
        display: none;
    }*/

    .PencapaianDibawah90pct {
        color: white;
        background-color: red;
    }

    .PencapaianDiatas100pct {
        color: white;
        background-color: green;
    }

    .PencapaianDiatas90sd100pct {
        color: black;
        background-color: yellow;
    }
</style>