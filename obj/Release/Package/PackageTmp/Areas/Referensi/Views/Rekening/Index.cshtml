@using Ptpn8.Areas.Referensi.Models
@using Ptpn8.Areas.Referensi.Models.CRUD

@model Rekening

@{
    ViewBag.Title = "Referensi Rekening";
}

<h2>Referensi Rekening</h2>

<div id="detailRekening">
    <div>
        @(Html.Kendo()
            .Grid<Rekening>()
            .Name("grdRekening")

        .Columns(g =>
        {
            g.Bound(i => i.RekeningId).Hidden(); //.Width(150);

            g.Bound(i => i.KodeRekening).Width(150);
            g.Bound(i => i.Nama).Width(300);
            g.Bound(i => i.SaldoNormal).Width(150);
            g.Bound(i => i.KelompokRekening).Width(250);
            g.Command(command =>
            {
                command.Edit();
                command.Custom("Delete").Click("openWindow");
            }).Width(180);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create();
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false))
        .Pageable()
        .Filterable()
        .Sortable()
        .AutoBind(true)
        .Groupable()
        .Scrollable()
        .ColumnMenu()
        .Resizable(r => { r.Columns(true); })
        .HtmlAttributes(new { style = "height: 450px" })
        .Events(e => { e.Change("grdOnChange"); e.Edit("grdOnEdit"); e.DetailExpand("grdOnDetailExpand"); })
        .DataSource(o => o
            .Ajax()
            .Model(model =>
            {
                model.Id(p => p.RekeningId);
                model.Field(p => p.RekeningId).Editable(false);//.DefaultValue(Guid.NewGuid());
            })

            .Create(create => create.Action("rekeningCreate", "Rekening", new { @onclick = "grdCreateOnClick" }).Type(HttpVerbs.Post))
            .Read(read => read.Action("rekeningRead", "Rekening").Type(HttpVerbs.Post))
            .Update(update => update.Action("rekeningUpdate", "Rekening").Type(HttpVerbs.Post))
            .Destroy(destroy => destroy.Action("rekeningDestroy", "Rekening").Type(HttpVerbs.Post))
            )
        )
    </div>
</div>

<div id="modalWindow">
    <h2><span style="color: red">Hapus Data ?</span></h2>
    <br />
    <button style="background-color: red; color: white;" id="yes" class="k-button">Yes</button>
    <button style="background-color: green; color: white;" id="no" class="k-button">No</button>
</div>

<script>

    var rekeningId;
    var uid;
    var wnd;

    $(document).ready(function () {
        wnd = $("#modalWindow").kendoWindow({
            title: "Delete confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");

    });

    function openWindow(e) {
        e.preventDefault();

        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        wnd.open().center();

        $("#yes").click(function () {
            grid.removeRow(row);
            wnd.close();
        });

        $("#no").click(function () {
            wnd.close();
        });
    }


    /* Grid Rekening */
    function grdCreateOnClick(e) {

    }

    function grdOnDetailExpand(e) {
        rekeningId = this.dataItem(e.masterRow).RekeningId;
    }

    function grdOnDataBound(e) {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }

    function grdOnEdit(e) {
        var model = e.model;
        if (model.isNew()) {
            model.id = model.uid;
            model.RekeningId = model.uid;
        }
        rekeningId = model.id;
        uid = model.uid;
        this.expandRow(this.tbody.find("tr[data-uid='" + uid + "']"));
    }

    function grdOnChange(e) {
    }

    function ddlKelompokRekeningOnSelect(e) {
        var ddlItem = this.dataItem(e.item);
        var grid = $('#grdRekening').data('kendoGrid');
        var dataItem = grid.dataSource.get(rekeningId);
        var row = grid.tbody.find("tr[data-uid='" + uid + "']");
        var data = grid.dataItem(row);
        data.set("KelompokRekening", ddlItem.Text)
    }

    function ddlSaldoNormalOnSelect(e) {
        var ddlItem = this.dataItem(e.item);
        var grid = $('#grdRekening').data('kendoGrid');
        var dataItem = grid.dataSource.get(rekeningId);
        var row = grid.tbody.find("tr[data-uid='" + uid + "']");
        var data = grid.dataItem(row);
        data.set("SaldoNormal", ddlItem.Text)
    }

</script>

<style>
    .photo {
        display: inline-block;
        width: 50px;
        height: 50px;
    }

    .required {
        font-weight: bold;
    }

    .accept, .status {
    }

    .valid {
        color: green;
    }

    .invalid {
        color: red;
    }

    #headerRekening {
        padding: 5px 15px;
        border-radius: 5px;
        background-color: gainsboro;
    }

    #detailRekening {
    }
</style>