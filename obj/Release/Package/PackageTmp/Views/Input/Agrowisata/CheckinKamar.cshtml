@model Ptpn8.Agrowisata.Models.View_Reservasi
<script src="@Url.Content("~/ReportViewer/js/print.min.js")"></script>
<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<script src="~/Scripts/Agrowisata/CheckinKamar.js"></script>
<img id="progress" src="~/Content/Images/ajax-loader.gif" style="position: absolute; left: 50%; top: 50%; " />
@(
        // All deferred initialization statements will be rendered here
        Html.TelerikReporting().DeferredScripts()
)

<table width="100%" class="hdr">
    <tr>
        <td>
            <div style="text-align:center">@ViewBag.Title</div>
        </td>
    </tr>
</table>
@*header*@
<div id="_header" style="font-size:10px;" ng-app="__header">
    <div class="k-content" ng-controller="MyCtrl">
        <form kendo-validator="validator" ng-submit="validate($event)">
            <div class="_headerkopi">
                <table width="100%">
                    <tr>
                        <td width="100px" style="font-size:13px;color:white;font-weight:400">
                            Check Voucher :
                        </td>
                        <td>
                            @(Html.Kendo().TextBox().Name("eVoucher")
                                .HtmlAttributes(new { style = "width: 25%", @class = "allcaps" })
                            )
                        </td>
                    </tr>

                </table>
                <table width="50%;" align="center" style="margin-bottom: 5px;">
                    <tr>
                        <td width="100%" align="center">
                            <div class="confirm">
                                <button id="btnSubmitHeader" class="submit k-button" type="submit">Proses</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>

@*detail*@
<div id="_detail" class="_detail">
    @(Html.Kendo()
        .Grid<Ptpn8.Agrowisata.Models.View_Reservasi>(Guid.Empty.ToString())
        .Name("grdDetail")
        .Columns(g =>
        {
            g.Bound(i => i.ReservasiId).Width(50).Hidden();
            g.Bound(i => i.Customer_AgrowisataId).Width(50).Hidden();
            g.Bound(i => i.TahunBuku).Width(100).Title("Tahun").Hidden();
            g.Bound(i => i.Nama).Width(200).Title("Nama").Hidden();
            //g.Bound(i => i.NoIdentitas).Width(200).Title("No Identitas");
            g.Bound(i => i.MetodePembayaran).Width(150).Title("Metode Pembayaran");
            g.Bound(i => i.KodeBooking).Width(100).Title("Kode Booking");
            g.Bound(i => i.TanggalReservasi).Width(100).Title("Tanggal Reservasi").Format("{0:dd/MM/yyyy}");
            g.Bound(i => i.StatusReservasi).Width(150).Title("Status Reservasi");
            g.Command(command =>
            {
                command.Custom("btnPrintHeader").Text(" Cek Fasilitas Tambahan").Click("btnPrintHeaderOnClick")
                    .HtmlAttributes(new { @class = "k-button k-font-icon k-i-print", style = "font-size: small; background-color: green; color: white; height: 20px;" });
            }).Width(250);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Excel();
            toolbar.Template("<a class='k-button' style='background-color: green; color: white; font-size:small;' onclick='sendData()' href='#'></span><span class='k-font-icon k-i-restore'></span>Simpan</a>");
        })
        .AutoBind(false)
        .Navigatable()
        .Resizable(resizeable => resizeable.Columns(true))
        .Scrollable()
        .Sortable()
        .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
        .Excel(excel =>
        {
            excel.FileName("ReservationList.xlsx");
            excel.Filterable(true);
        }
        )
        .HtmlAttributes(new { style = "Height: 450px" })
        .ClientDetailTemplateId("detailReservasi")
        .Filterable()
        .Groupable()
        .Sortable()
        .Events(e =>
        {
            e.Change("grdOnChange");
            e.Edit("grdOnEdit");
            e.DataBinding("grdOnDataBinding");
            e.DetailExpand("grdOnDetailExpand");
        })
        .DataSource(o => o
            .Ajax()
            .ServerOperation(false)
            .Sort(s => s.Add(x => x.TanggalReservasi))
            .Batch(true)
            .Model(model =>
            {
                model.Id(p => p.ReservasiId);
            })
            .Read(read => read.Action("detailRead", "Input").Data("filterRead").Type(HttpVerbs.Post))
            .Create(create => create.Action("detailCreate", "Input").Data("filterRead").Type(HttpVerbs.Post))
            .Update(update => update.Action("detailUpdate", "Input").Data("filterRead").Type(HttpVerbs.Post))
            .Destroy(destroy => destroy.Action("detailDestroy", "Input").Data("filterRead").Type(HttpVerbs.Post))
            )
    )
</div>
<script id="detailReservasi" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<Ptpn8.Agrowisata.Models.ViewDTL_Reservasi>()
                .Name("grdDetailReservasi_#=ReservasiId#")
                .Columns(column =>
                {
                    column.Bound(o => o.DTL_ReservasiId).Hidden();
                    column.Bound(o => o.ReservasiId).Hidden();
                    column.Bound(o => o.KebunId).Hidden();
                    column.Bound(o => o.NamaKebun).Width(200).Title("Unit");
                    column.Bound(o => o.TipeKamarId).Hidden();
                    column.Bound(o => o.NamaKamar).Width(200).Title("Tipe Penginapan");
                    column.Bound(o => o.TanggalMasuk).Width(80).Title("Tanggal Check In").Format("{0:dd/MM/yyyy}");
                    column.Bound(o => o.TanggalKeluar).Width(80).Title("Tanggal Check Out").Format("{0:dd/MM/yyyy}");
                    column.Bound(o => o.StatusHoliday).Width(200).Title("Status Holiday");
                    column.Bound(o => o.Keterangan).Width(200).Title("Permintaan Khusus");
                    column.Bound(o => o.StatusCheckin).Width(100).Title("Check In").ClientTemplate("\\#= StatusCheckin ? 'Sudah':'Belum' \\#");

                })
                .AutoBind(false)
                .Events(e => { e.Edit("grdDetailReservasiOnEdit"); e.DataBound("grdDetailReservasiOnDataBound"); })
                .ToolBar(toolbar =>
                {
                    toolbar.Custom().Name("Simpan").Text("Simpan").HtmlAttributes(new { @class = "k-button k-font-icon k-i-restore", onclick = "sendDataDTL()", style = "background-color: green; color: white; font-size:small;" });
                })
                .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
                .DataSource(datasource => datasource
                    .Ajax()

                    .Model(model =>
                    {
                        model.Id(p => p.DTL_ReservasiId);

                    })
                    .Read(read => read.Action("detailRead", "Input", new { id = "#=ReservasiId#", _menuId = "c11fff67-9a07-4a4d-a69a-12150e255cfe", _classDetailView = "Ptpn8.Agrowisata.Models.ViewDTL_Reservasi" }).Type(HttpVerbs.Post))
                //.Aggregates(ag =>
                //{
                //    ag.Add(x => x.Harga).Sum();
                //})
                )
                .ToClientTemplate()
    )
</script>

<div id="errWindow">
    <table width="100%">
        <tr>
            <td width="1%"></td>
            <td>
                <span style="font-size: medium; font-weight: 500;">Data Hasil Input Tidak Valid</span>
                <span style="font-size: medium; font-weight: 500;"><label id="errMsg"></label></span>
            </td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="ok" class="delete k-button">Perbaiki</button></td>
            <td></td>
        </tr>
    </table>
</div>

<div id="printWindow" contextmenu="Print" title="Print" class="print">
    <div id="reportViewer">
        @(Html.TelerikReporting().ReportViewer()
                    // Each report viewer must have an id - it will be used by the initialization script
                    // to find the element and initialize the report viewer.
                    .Id("reportViewer")
                    // The URL of the service which will serve reports.
                    // The URL corresponds to the name of the controller class (ReportsController).
                    // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
                    .ServiceUrl(Url.Content("/api/reports/"))
                    // The URL for custom report vie    wer template. The template can be edited -
                    // new functionalities can be added and unneeded ones can be removed.
                    // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
                    //
                    // Strongly typed ReportSource - TypeReportSource or UriReportSource.
                    .ReportSource(new UriReportSource() { Uri = "../Reports/Agrowisata/CekFasilitasTambahan.trdx" })
                    // Specifies whether the viewer is in interactive or print preview mode.
                    // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
                    // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
                    .ViewMode(ViewMode.Interactive)
                    // Sets the scale mode of the viewer.
                    // Three modes exist currently:
                    // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
                    // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
                    // Specific - Uses the scale to zoom in and out the report.
                    .ScaleMode(ScaleMode.Specific)
                    // Zoom in and out the report using the scale
                    // 1.0 is equal to 100%, i.e. the original size of the report
                    .Scale(1.0)
                    // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
                    // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
                    .PersistSession(false)
                    // Sets the print mode of the viewer.
                    .PrintMode(PrintMode.AutoSelect)
        )
    </div>
</div>
<style>
    #reportViewer {
        position: absolute;
        left: 5px;
        right: 5px;
        top: 5px;
        bottom: 5px;
        overflow: hidden;
        font-family: Verdana, Arial;
    }
</style>



