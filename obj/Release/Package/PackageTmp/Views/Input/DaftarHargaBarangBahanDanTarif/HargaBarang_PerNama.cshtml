
<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<script src="~/Scripts/jquery.maskedinput.js"></script>
<img id="progress" src="~/Content/Images/ajax-loader.gif" style="position: absolute; left: 50%; top: 50%; " />
@(
            // All deferred initialization statements will be rendered here
            Html.TelerikReporting().DeferredScripts()
)
<div id="_header" style="font-size:10px;" ng-app="__header">
    <div class="k-content" ng-controller="MyCtrl">
        <form kendo-validator="validator" ng-submit="validate($event)">
            <div class="_headerkopi">
                <table width="100%">
                    <tr>
                        <td width="3%" style="color:white">
                            <label>Cari Nama Barang :</label>
                        </td>
                        <td width="20%">
                            @(Html.Kendo().TextBox().Name("NamaBarang")
                                .HtmlAttributes(new { style = "width: 55%", @class = "allcaps" })
                            )
                        </td>
                    </tr>

                </table>
                <table width="50%;" align="center" style="margin-bottom: 5px;">
                    <tr>
                        <td width="100%" align="center">
                            <div class="confirm">
                                <button id="btnSubmitHeader" class="submit k-button" type="submit">Proses</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>
    @*detail*@
    <div id="_detail" class="_detail">
        @(Html.Kendo()
            .Grid<Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_Barang>(Guid.Empty.ToString())
            .Name("grdDetail")
            .Columns(g =>
            {
                g.Bound(i => i.DHBB_BarangId).Width(50).Hidden();
                g.Bound(i => i.NamaBarang).Title("Nama Barang").Width(200);
                g.Bound(i => i.Satuan).Title("Satuan").Width(100);
                g.Bound(i => i.Spesifikasi).Title("Spesifikasi").Width(300);
                g.Bound(i => i.Merk).Title("Merk").Width(100);
                g.Bound(i => i.KelompokBarang).Title("Kelompok Barang").Width(100);
            })
            .AutoBind(false)
            .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
            .Navigatable()
            .Resizable(resizeable => resizeable.Columns(true))
            .Scrollable()
            .Sortable()
            .Excel(excel =>
            {
                excel.FileName("DHBB_UpdateHarga.xlsx");
                excel.Filterable(true);
            }
            )
            .HtmlAttributes(new { style = "Height: 450px" })
            .ClientDetailTemplateId("detailVerifikasi")
            .Filterable()
            .Groupable()
            .Sortable()
            .Events(e =>
            {
                e.Change("grdOnChange");
                e.Edit("grdOnEdit");
                e.DataBinding("grdOnDataBinding");
                e.DetailExpand("grdOnDetailExpand");
                e.DataBound("grdOnDataBound");
            })
            .DataSource(o => o
                .Ajax()
                .ServerOperation(false)
                .Batch(true)
                .Model(model =>
                {
                    model.Id(p => p.DHBB_BarangId);
                    model.Field(f => f.NamaBarang).Editable(false);
                    model.Field(f => f.Satuan).Editable(false);
                    model.Field(f => f.Spesifikasi).Editable(false);
                    model.Field(f => f.Merk).Editable(false);
                    model.Field(f => f.KelompokBarang).Editable(false);
                })
                //.Read(read => read.Action("detailRead", "Input").Data("filterRead").Type(HttpVerbs.Post))
                .Create(create => create.Action("detailCreate", "Input").Data("filterRead").Type(HttpVerbs.Post))
                .Update(update => update.Action("detailUpdate", "Input").Data("filterRead").Type(HttpVerbs.Post))
                .Destroy(destroy => destroy.Action("detailDestroy", "Input").Data("filterRead").Type(HttpVerbs.Post))
                )
        )
    </div>

    @*footer*@
    <div id="_footer">
    </div>

    <div id="printWindow" contextmenu="Print" title="Print" class="print">
        <div id="reportViewer">
            @(Html.TelerikReporting().ReportViewer()
                                        // Each report viewer must have an id - it will be used by the initialization script
                                        // to find the element and initialize the report viewer.
                                        .Id("reportViewer")
                                        // The URL of the service which will serve reports.
                                        // The URL corresponds to the name of the controller class (ReportsController).
                                        // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
                                        .ServiceUrl(Url.Content("/api/reports/"))
                                        // The URL for custom report vie    wer template. The template can be edited -
                                        // new functionalities can be added and unneeded ones can be removed.
                                        // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
                                        //
                                        // Strongly typed ReportSource - TypeReportSource or UriReportSource.
                                        .ReportSource(new UriReportSource() { Uri = "../Reports/Agrowisata/VoucherRoom.trdx" })
                                        // Specifies whether the viewer is in interactive or print preview mode.
                                        // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
                                        // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
                                        .ViewMode(ViewMode.Interactive)
                                        // Sets the scale mode of the viewer.
                                        // Three modes exist currently:
                                        // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
                                        // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
                                        // Specific - Uses the scale to zoom in and out the report.
                                        .ScaleMode(ScaleMode.Specific)
                                        // Zoom in and out the report using the scale
                                        // 1.0 is equal to 100%, i.e. the original size of the report
                                        .Scale(1.0)
                                        // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
                                        // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
                                        .PersistSession(false)
                                        // Sets the print mode of the viewer.
                                        .PrintMode(PrintMode.AutoSelect)
            )
        </div>
    </div>
    <div id="modalWindow" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
        <table width="100%">
            <tr>
                <td width="25%"></td>
                <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
                <td width="25%"></td>
            </tr>
            <tr>
                <td><button id="yes" class="delete k-button">Ya</button></td>
                <td></td>
                <td><button id="no" class="edit k-button">Tidak</button></td>
            </tr>
        </table>
    </div>
    <div id="konfirmasiDetail" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
        <table width="100%">
            <tr>
                <td width="25%"></td>
                <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
                <td width="25%"></td>
            </tr>
            <tr>
                <td><button id="yesDetail" class="delete k-button">Ya</button></td>
                <td></td>
                <td><button id="noDetail" class="edit k-button">Tidak</button></td>
            </tr>
        </table>
    </div>
    <div id="errWindow">
        <table width="100%">
            <tr>
                <td width="1%"></td>
                <td>
                    <span style="font-size: medium; font-weight: 500;">Data Hasil Input Tidak Valid</span>
                    <span style="font-size: medium; font-weight: 500;"><label id="errMsg"></label></span>
                </td>
                <td width="1%"></td>
            </tr>
            <tr>
                <td></td>
                <td><button id="ok" class="delete k-button">Perbaiki</button></td>
                <td></td>
            </tr>
        </table>

    </div>
    <div id="delWindow">
        <table width="100%" style="text-align:center">
            <tr>
                <td width="1%"></td>
                <td><span style="font-size: medium; font-weight: 500;">Data Tidak Dapat Dihapus! Penyebab :</span></td>
                <td width="1%"></td>
            </tr>
            <tr>
                <td width="1%"></td>
                <td><span style="font-size: medium; font-weight: 500;">Data detail masih ada, atau</span></td>
                <td width="1%"></td>
            </tr>
            <tr>
                <td width="1%"></td>
                <td><span style="font-size: medium; font-weight: 500;">Faktur dengan No PO ini masih ada.</span></td>
                <td width="1%"></td>
            </tr>
            <tr>
                <td></td>
                <td><button id="okDel" class="delete k-button">Periksa</button></td>
                <td></td>
            </tr>
        </table>
    </div>
    <div id="konfirmasiLeaveGrid" title="Konfirmasi">
        <table width="100%">
            <tr>
                <td width="2%"></td>
                <td><span style="font-size: large ; font-weight: 700;">Data Grid Belum Disimpan! Simpan Data ?</span></td>
                <td width="2%"></td>
            </tr>
            <tr>
                <td></td>
                <td align="center">
                    <button id="yesLeaveGrid" class="k-button">Ya</button>
                    <button id="noLeaveGrid" class="k-button">Tidak</button>
                </td>
                <td></td>
            </tr>
        </table>
    </div>

    <script id="detailVerifikasi" type="text/kendo-tmpl">
        @(Html.Kendo().Grid<Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_HargaBarang>
    ()
    .Name("grdDetailHargaBarang_#=DHBB_BarangId#")
    .Columns(column =>
    {
        column.Bound(o => o.DHBB_HargaBarangId).Width(120).Hidden();
        column.Bound(o => o.DHBB_BarangId).Width(120).Hidden();
        column.Bound(o => o.TanggalSurvey).Width(120).Title("Tgl. Survey").Format("{0:dd/MM/yyyy}");
        column.Bound(o => o.HargaDasar).Title("Harga Dasar").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; color: blue; font-weight : 700" });
        column.Bound(o => o.Overhead).Title("Overhead").Width(100).ClientTemplate("\\#= Overhead ? 'Ya':'Tidak' \\#");
        column.Bound(o => o.Verifikasi).Title("Verifikasi").Width(200).Hidden();
        column.Bound(o => o.NamaPerusahaan).Title("Nama").Width(200);
        column.Bound(o => o.Alamat).Title("Alamat").Width(400);
        column.Bound(o => o.Brosur).Title("Brosur / Kartu Nama").Width(120);
        column.Command(command =>
        {
            command.Custom("Delete").Text("Hapus Baris").Click("openWindow")
                .HtmlAttributes(new { @class = "k-button k-font-icon k-i-trash", style = "font-size: small; background-color: red; color: white; height: 20px;" });

        }).Width(180);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Name("Tambah").Text("Tambah Baris").HtmlAttributes(new { @class = "k-button k-grid-add k-font-icon k-i-plus", style = "background-color: blue; color: white; font-size:small;" });
        toolbar.Custom().Name("Simpan").Text("Simpan").HtmlAttributes(new { @class = "k-button k-font-icon k-i-restore", onclick = "sendDataDTL()", style = "background-color: green; color: white; font-size:small;" });
    })
    .AutoBind(false)
    .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
    .Events(e => { e.Edit("grdDetailHargaBarangOnEdit"); e.DataBound("grdDetailHargaBarangOnDataBound"); })
    .DataSource(datasource => datasource
    .Ajax()
    .Model(model =>
    {
        model.Id(p => p.DHBB_HargaBarangId);
    })
    .Read(read => read.Action("detailRead", "Input", new { id = "#=DHBB_BarangId#", _menuId = "8980479b-1ab5-4e2d-be00-07967199ba53", _classDetailView = "Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_HargaBarang" }).Type(HttpVerbs.Post))
    .Create(create => create.Action("detailCreate", "Input", new { id = "#=DHBB_BarangId#", _menuId = "8980479b-1ab5-4e2d-be00-07967199ba53", _classDetailView = "Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_HargaBarang" }).Type(HttpVerbs.Post))
    .Update(update => update.Action("detailUpdate", "Input", new { id = "#=DHBB_BarangId#", _menuId = "8980479b-1ab5-4e2d-be00-07967199ba53", _classDetailView = "Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_HargaBarang" }).Type(HttpVerbs.Post))
    .Destroy(destroy => destroy.Action("detailDelete", "Input", new { id = "#=DHBB_BarangId#", _menuId = "8980479b-1ab5-4e2d-be00-07967199ba53", _classDetailView = "Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_HargaBarang" }).Type(HttpVerbs.Post))
    )
    .ToClientTemplate()
    )
</script>
    <script>
        var dHBB_BarangId, dHBB_HargaBarangId, dhbbbarangId;
        var wndLeaveGrid, wnd, wndDetail, prt, err, del;
        var model;
        var headerBaru, detailBaru;
        var gridStatus;
        var rowNumber = 0;
        var menuId = '8980479b-1ab5-4e2d-be00-07967199ba53';

        function resetRowNumber(e) {
            rowNumber = 0;
        }

        function renderNumber(data) {
            var no = ++rowNumber;
            data.NoBaris = no;
            return no;
        }

        $('.k-window.titlebar').css('style', 'display: none');
        $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add");

        $(document).ajaxStart(function () {
            $("#_header").addClass('disabledbutton');
            $("#_detail").addClass('disabledbutton');
            $("#_footer").addClass('disabledbutton');
            $("#progress").show();
        }).ajaxStop(function () {
            $("#progress").hide();
            $("#_header").removeClass('disabledbutton');
            $("#_detail").removeClass('disabledbutton');
            $("#_footer").removeClass('disabledbutton');
        });

        $(document).ready(function () {
            wnd = $("#modalWindow").kendoWindow({
                title: "Konfirmasi",
                modal: true,
                visible: false,
                resizable: false,
                width: 300
            }).data("kendoWindow");

            wndDetail = $("#konfirmasiDetail").kendoWindow({
                title: "Konfirmasi",
                modal: true,
                visible: false,
                resizable: false,
                width: 300
            }).data("kendoWindow");

            err = $("#errWindow").kendoWindow({
                title: "Error Data",
                modal: true,
                visible: false,
                resizable: false,
                width: 300
            }).data("kendoWindow");

            prt = $("#printWindow").kendoWindow({
                title: "Print",
                modal: true,
                visible: false,
                resizable: false,
                width: 800,
                height: 500
            }).data("kendoWindow");

            del = $("#delWindow").kendoWindow({
                title: "Hapus Header",
                modal: true,
                visible: false,
                resizable: false,
                width: 400,
                height: 150
            }).data("kendoWindow");

            wndLeaveGrid = $("#konfirmasiLeaveGrid").kendoWindow({
                title: "Konfirmasi",
                modal: true,
                visible: false,
                resizable: false,
                width: 400,
                height: 150
            }).data("kendoWindow");

            gridStatus = 'belum-ngapa-ngapain';
        });

        $(window).on("beforeunload", function () {
            return "Please don't leave me!";
        });

        $(window).on("unload", function () {
            hapusPenggunaPortalYangAktif();
        });

        angular.module("__header", ["kendo.directives"])
            .controller("MyCtrl", function ($scope) {
                $scope.validate = function (event) {
                    event.preventDefault();
                    if ($scope.validator.validate()) {
                        enableHeader();
                        $(".k-button-icontext").removeClass("k-state-disabled").addClass("k-grid-add");
                        $('#_detail').removeClass('disabledbutton');
                        GetNamaBarang().done(function (data1) {
                            if (data1) {
                                var grd = $('#grdDetail').data('kendoGrid');
                                grd.dataSource.data(data1);
                                //grd.refresh();
                            }
                        });
                    } else {
                        $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add"); // edited
                        gridDestroy();
                    }
                }
            });

        function hapusPenggunaPortalYangAktif() {
            var url = '/Account/HapusPenggunaPortalYangAktif';
            return $.ajax({
                url: url,
                data: {
                    _menuId: menuId
                },
                type: 'POST',
                datatype: 'json'
            });
        }

        function grdOnDataBound(e) {
            var rows = e.sender.tbody.children();
            for (var j = 0; j < rows.length; j++) {
                var row = $(rows[j]);
                var dataItem = e.sender.dataItem(row);
            }
        }

        function disableHeader() {
            $("._key").find('span').addClass('disabledbutton');
            $("._key").addClass('disabledbutton');
            $("._nonkey").find('span').addClass('disabledbutton');
            $("._nonkey").addClass('disabledbutton');
            $('#btnSubmitHeader').addClass('disabledbutton');
            $('#btnPrintHeader').addClass('disabledbutton');
            $('#_detail').addClass('disabledbutton');
        }

        function enableHeader() {
            $("._key").find('span').removeClass('disabledbutton');
            $("._key").removeClass('disabledbutton');
            $("._nonkey").find('span').removeClass('disabledbutton');
            $("._nonkey").removeClass('disabledbutton');
            $('#btnSubmitHeader').removeClass('disabledbutton');
            $('#btnPrintHeader').removeClass('disabledbutton');
        }


        function openWindow(e) {
            e.preventDefault();
            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            wndDetail.open().center();
            $("#yesDetail").click(function () {
                wndDetail.close();
                $('#grdDetailHargaBarang_' + dHBB_BarangId).data('kendoGrid').removeRow(row);
                gridStatus = 'sudah-diapa-apain';
            });
            $("#noDetail").click(function () {
                wndDetail.close();
            });
        }

        function openWindowLeaveGrid(e) {
            e.preventDefault();
            wndLeaveGrid.open().center();
            $("#yesLeaveGrid").click(function () {
                wndLeaveGrid.close();
                sendData();
            });
            $("#noLeaveGrid").click(function () {
                gridStatus = 'belum-ngapa-ngapain';
                wndLeaveGrid.close();
            });
        }

        function openErrWindow(e) {
            err.open().center();
            $("#ok").click(function () {
                err.close();
            });
        }

        function openDelWindow(e) {
            del.open().center();
            $("#okDel").click(function () {
                del.close();
            });
        }

        function openDelDetailWindow(e) {
            del.open().center();
            $("#okDel").click(function () {
                del.close();
            });
        }

        function btnPrintHeaderOnClick(e) {
            e.preventDefault();
            var grid = this;
            var row = $(e.currentTarget).closest("tr");

            var data = grid.dataItem(row);
            var dHBB_BarangId = data.DHBB_BarangId;

            var viewer = $("#reportViewer").data("telerik_ReportViewer");
            viewer.reportSource({
                report: viewer.reportSource().report,
                parameters: { DHBB_BarangId: dHBB_BarangId }
            });
            viewer.refreshReport();
            prt.open().center();
        }

        function gridDestroy() {
            $("#grdDetail").data("kendoGrid").dataSource.read([]);
        }

        function grdOnDetailExpand(e) {
            dHBB_BarangId = this.dataItem(e.masterRow).DHBB_BarangId;
            var grd2 = $('#grdDetailHargaBarang_' + dHBB_BarangId).data('kendoGrid');
            grd2.dataSource.read();
        }

        function grdOnChange(e) {
        }

        function grdOnEdit(e) {
            var model = e.model;
            this.expandRow(this.tbody.find("tr[data-uid='" + model.uid + "']"));
            if (model.isNew()) {
                model.DHBB_BarangId = model.uid;
            }
            dHBB_BarangId = model.DHBB_BarangId;
            gridStatus = 'sudah-diapa-apain';

        }

        function grdOnDataBinding(e) {
        }

        function grdDetailHargaBarangOnEdit(e) {
            var model = e.model;
            if (model.isNew()) {
                model.id = model.uid;
                e.container.find("input[name=DHBB_HargaBarangId]").val(model.id).change(); // trigger change in order to notify the model binding
                //e.container.find("input[name=DHBB_BarangId]").val(model.id).change(); // trigger change in order to notify the model binding
                uid = model.uid;
                var grid = $("#grdDetailHargaBarang_" + dHBB_BarangId).data("kendoGrid")
                var dataItem = typeof (grid.dataSource.get(uid)) == "undefined" ? grid.dataSource.getByUid(uid) : grid.dataSource.get(uid);
                var row = grid.tbody.find("tr[data-uid='" + dataItem.uid + "']");
                var data = grid.dataItem(row);
                dataItem["DHBB_BarangId"] = dHBB_BarangId;
                data.DHBB_BarangId = dHBB_BarangId;
            }
            uid = model.uid;
            dHBB_HargaBarangId = model.id;
        }

        function grdDetailHargaBarangOnDataBound(e) {
        }

        function filterRead() {
            return {
                _menuId: menuId
            };
        }

        function sendData() {
            var grid = $("#grdDetail").data("kendoGrid"),
                parameterMap = grid.dataSource.transport.parameterMap;

            //get the new and the updated records
            var currentData = grid.dataSource.data();
            var updatedRecords = [];
            var newRecords = [];

            for (var i = 0; i < currentData.length; i++) {
                if (currentData[i].isNew()) {
                    //this record is new
                    newRecords.push(JSON.stringify(currentData[i]));
                } else if (currentData[i].dirty) {
                    updatedRecords.push(JSON.stringify(currentData[i]));
                }
            }

            //this records are deleted
            var deletedRecords = [];
            for (var i = 0; i < grid.dataSource._destroyed.length; i++) {
                deletedRecords.push(JSON.stringify(grid.dataSource._destroyed[i]));
            }

            var data = {};
            $.extend(data, parameterMap({ updated: updatedRecords }), parameterMap({ deleted: deletedRecords }), parameterMap({ new: newRecords }), parameterMap({ mnid: menuId }));
            _sendData(data).done(function (msg) {
                if (msg == "Success") {
                    grid.dataSource.read([]);
                    gridStatus = 'belum-ngapa-ngapain';
                }
                else {
                    $('#errMsg').text(msg);
                    gridStatus = 'sudah-nyoba-disimpan-tapi-model-masih-salah';
                    openErrWindow();
                }
            }).fail(function (x) {
                $('#errMsg').text(msg);
                openErrWindow();
                grid.dataSource.read([]);
                gridStatus = 'sudah-nyoba-disimpan-tapi-gagal';
            });
        }

        function _sendData(data) {
            return $.ajax({
                url: "/Input/UpdateCreateDelete",
                data: data,
                type: "POST"
            })
        }

        function filterNamaBarang(e) {
            return {
                strClassView: "Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_Barang",
                scriptSQL: "SELECT DHBB_BarangId, NamaBarang FROM [SPDK_KanpusEF].[dbo].[DHBB_Barang]",
                _menuId: menuId
            }
        }

        function NamaBarangOnSelect(e) {
            var namaBarang = this.dataItem(e.item);
            dhbbbarangId = namaBarang.DHBB_BarangId;
        }

        function TahunBukuOnChange(e) {
            if (gridStatus == 'sudah-nyoba-disimpan-tapi-model-masih-salah' ||
                gridStatus == 'sudah-diapa-apain') {
                openWindowLeaveGrid(e);
            }
            else {
                $('#msgInputView').text('');
                tahunBukuOnChange(e).done(function (data) {
                    if (data) {
                        $('#NomorInputView').data('kendoDropDownList').dataSource.read().done(function () {
                            disableHeader();
                            $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add"); // edited
                            gridDestroy();
                        });
                    }
                    else {
                        alert("Error! Hubungi Bagian TI")
                    }
                }).fail(function (x) {
                    alert('Error! Hubungi Bagian TI');
                });
            }
        }

        function GetNamaBarang() {
            var url = '/Input/GetDataFrom';
            return $.ajax({
                url: url,
                data: {
                    strClassView: 'Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_Barang',
                    scriptSQL: "set dateformat dmy;" +
                        "SELECT DHBB_BarangId, NamaBarang, Satuan, Spesifikasi, " +
                        "Merk, KelompokBarang " +
                        "FROM [SPDK_KanpusEF].[dbo].[DHBB_Barang] WHERE NamaBarang like '%" + $('#NamaBarang').val() + "%'",
                    _menuId: menuId
                },
                type: 'POST',
                datatype: 'json'
            });
        }

        function sendDataDTL() {

            var grid = $("#grdDetailHargaBarang_" + dHBB_BarangId).data("kendoGrid"),
                parameterMap = grid.dataSource.transport.parameterMap;

            //get the new and the updated records
            var currentData = grid.dataSource.data();

            var updatedRecords = [];
            var newRecords = [];
            var spupdated = [];
            var spnew = [];

            for (var i = 0; i < currentData.length; i++) {
                if (currentData[i].isNew()) {
                    newRecords.push(JSON.stringify(currentData[i]));
                } else if (currentData[i].dirty) {
                    updatedRecords.push(JSON.stringify(currentData[i]));
                }
            }

            //this records are deleted
            var deletedRecords = [];
            var spdeleted = [];
            for (var i = 0; i < grid.dataSource._destroyed.length; i++) {
                deletedRecords.push(JSON.stringify(grid.dataSource._destroyed[i]));
            }

            var data = {};
            $.extend(data,
                parameterMap({ updated: updatedRecords }),
                parameterMap({ deleted: deletedRecords }),
                parameterMap({ new: newRecords }),
                parameterMap({ spupdated: spupdated }),
                parameterMap({ spdeleted: spdeleted }),
                parameterMap({ spnew: spnew }),
                parameterMap({ mnid: menuId }),
                parameterMap({ classdv: 'Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_HargaBarang' })
            );

            _sendData(data).done(function (msg) {
                if (msg == "Success") {
                    grid.dataSource.read();
                    //gridStatus = 'belum-ngapa-ngapain';
                }
                else {
                    $('#errMsg').text(msg);
                    //gridStatus = 'sudah-nyoba-disimpan-tapi-model-masih-salah';
                    openErrWindow();
                }
            }).fail(function (x) {
                $('#errMsg').text(msg);
                openErrWindow();
                grid.dataSource.read([]);
                //gridStatus = 'sudah-nyoba-disimpan-tapi-gagal';
            });

        }
    </script>

    <style>
        #reportViewer {
            position: absolute;
            left: 5px;
            right: 5px;
            top: 5px;
            bottom: 5px;
            overflow: hidden;
            font-family: Verdana, Arial;
        }

        .kurangDariJatuhTempo {
            background-color: limegreen;
        }

        .jatuhTempo {
            background-color: orange;
        }

        .lebihJatuhTempo {
            background-color: lightcoral;
        }
    </style>



