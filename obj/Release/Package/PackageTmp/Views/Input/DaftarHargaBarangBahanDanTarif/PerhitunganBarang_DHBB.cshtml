
<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<script src="@Url.Content("~/ReportViewer/js/print.min.js")"></script>
<script src="~/Scripts/jquery.maskedinput.js"></script>
<img id="progress" src="~/Content/Images/ajax-loader.gif" style="position: absolute; left: 50%; top: 50%; " />
@(
                // All deferred initialization statements will be rendered here
                Html.TelerikReporting().DeferredScripts()
)
<div id="_header" style="font-size:10px;" ng-app="__header">
    <div class="k-content" ng-controller="MyCtrl">
        <form kendo-validator="validator" ng-submit="validate($event)">
            <div class="_headerkopi">
                <table width="100%">
                    <tr>
                        <td width="3%" style="color:white">
                            <label>Kode Cetak :</label>
                        </td>
                        <td width="20%">
                            @(Html.Kendo().TextBox().Name("KodeCetak")
                                        .HtmlAttributes(new { style = "width: 55%", @class = "allcaps" })
                            )
                        </td>
                    </tr>

                </table>
                <table width="50%;" align="center" style="margin-bottom: 5px;">
                    <tr>
                        <td width="100%" align="center">
                            <div class="confirm">
                                <button id="btnSubmitHeader" class="submit k-button" type="submit" >Proses</button>
                                <button type="button" id="btnPrintHeader" onclick="btnPrintHeaderOnClick()" class="k-button" style="color: white; background-color: gray; font-size: small; height: 30px;"><span class="k-font-icon k-i-print"></span>Cetak</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>
@*detail*@
<div id="_detail" class="_detail">
    @(Html.Kendo()
        .Grid<Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_PerhitunganBarang>(Guid.Empty.ToString())
        .Name("grdDetail")
        .Columns(g =>
        {
            g.Bound(i => i.DHBB_PerhitunganBarangId).Width(50).Hidden();
            g.Bound(i => i.DHBB_BarangId).Width(50).Hidden();
            g.Bound(i => i.DHBB_HargaBarangId).Width(50).Hidden();
            g.Bound(i => i.Cetak).Title("Cetak?").Width(100).ClientTemplate("#= Cetak ? 'Ya':'Tidak'#");
            g.Bound(i => i.NomorPengajuan).Title("No. Pengajuan").Width(100);
            g.Bound(i => i.NamaBarang).Title("Nama Barang").Width(300);
            g.Bound(i => i.Uraian).Title("Uraian").Width(400);
            g.Group(i => i
                .Title("Banyaknya")
                .Columns(c =>
                {
                    c.Bound(q => q.Banyaknya_Volume).Width(100).Title("Volume").Format("{0:N3}").HtmlAttributes(new { style = "text-align: center;  font-weight : 700" });
                    c.Bound(q => q.Banyaknya_Satuan).Width(100).Title("Satuan").HtmlAttributes(new { style = "text-align: center; font-weight : 700" });
                })
            );
            g.Bound(i => i.HargaDasar).Title("Harga").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700" });
            g.Bound(i => i.JumlahHarga).Title("Jml. Nilai").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" });
            g.Bound(i => i.BiayaOverheadAngkutan).Title("Biaya Overhead Angkutan").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; " }).Hidden();
            g.Bound(i => i.JumlahSetelahOverhead).Title("Jml. Setelah Overhead").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; " }).Hidden();
            g.Group(i => i
                .Title("Perbandingan")
                .Columns(c =>
                {
                    c.Bound(q => q.Perbandingan_Formula).Width(100).Title("Formula").Format("{0:N0}").HtmlAttributes(new { style = "text-align: center;  font-weight : 700" });
                    c.Bound(q => q.Perbandingan_PH).Width(100).Title("PH").Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700" });
                })
            );
            g.Bound(i => i.Hasil).Title("Hasil").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" });
            g.Bound(i => i.JumlahHasil).Title("Jumlah Hasil").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" });
            g.Bound(i => i.PPN).Title("PPN 10%").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" });
            g.Bound(i => i.JumlahSetelahPPN).Title("Jml. Setelah PPN").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" });
            g.Bound(i => i.HargaSatuan).Title("Harga Satuan").Width(150).Format("{0:N0}").HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" });
            g.Bound(i => i.TanggalInput).Title("Tanggal Input").Width(150).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" }).Hidden();
            g.Bound(i => i.UserName).Title("User Name").Width(150).HtmlAttributes(new { style = "text-align: center; font-weight : 700; color:maroon" }).Hidden();
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template("<a class='k-button k-grid-add' style='background-color: blue; color: white; font-size:small;' href='#'></span><span class='k-font-icon k-i-plus'></span>Tambah Baris</a>" +
                            "<a class='k-button' style='background-color: green; color: white; font-size:small;' onclick='sendData()' href='#'></span><span class='k-font-icon k-i-restore'></span>Simpan</a>" +
                            "<a class='k-button' style='background-color: red; color: white; font-size:small;' onclick='hapusSeluruh()' href='#'></span><span class='k-font-icon k-i-trash'></span>Hapus Semua Baris</a>");
        })
        .AutoBind(false)
        .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
        .Resizable(resizeable => resizeable.Columns(true))
        .Scrollable()
        .Sortable()
        .Excel(excel =>
        {
            excel.FileName("DHBB_UpdateHarga.xlsx");
            excel.Filterable(true);
        }
        )
        .HtmlAttributes(new { style = "Height: 450px" })
        .Filterable()
        .Groupable()
        .Sortable()
        .Events(e =>
        {
            e.Change("grdOnChange");
            e.Edit("grdOnEdit");
            e.DataBinding("grdOnDataBinding");
            e.DataBound("grdOnDataBound");
        })
        .DataSource(o => o
            .Ajax()
            .ServerOperation(false)
            .Batch(true)
            .Model(model =>
            {
                model.Id(p => p.DHBB_PerhitunganBarangId);
                model.Field(f => f.NamaBarang).Editable(false);
            })
            //.Read(read => read.Action("detailRead", "Input").Data("filterRead").Type(HttpVerbs.Post))
            .Create(create => create.Action("detailCreate", "Input").Data("filterRead").Type(HttpVerbs.Post))
            .Update(update => update.Action("detailUpdate", "Input").Data("filterRead").Type(HttpVerbs.Post))
            .Destroy(destroy => destroy.Action("detailDestroy", "Input").Data("filterRead").Type(HttpVerbs.Post))
            )
    )
</div>

@*footer*@
<div id="_footer">
</div>

<div id="printWindow" contextmenu="Print" title="Print" class="print">
    <div id="reportViewer">
        @(Html.TelerikReporting().ReportViewer()
                                            // Each report viewer must have an id - it will be used by the initialization script
                                            // to find the element and initialize the report viewer.
                                            .Id("reportViewer")
                                            // The URL of the service which will serve reports.
                                            // The URL corresponds to the name of the controller class (ReportsController).
                                            // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
                                            .ServiceUrl(Url.Content("/api/reports/"))
                                            // The URL for custom report vie    wer template. The template can be edited -
                                            // new functionalities can be added and unneeded ones can be removed.
                                            // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
                                            //
                                            // Strongly typed ReportSource - TypeReportSource or UriReportSource.
                                            .ReportSource(new UriReportSource() { Uri = "../Reports/DaftarHargaBarangBahan/DHBB_CetakPerhitungan.trdx" })
                                            // Specifies whether the viewer is in interactive or print preview mode.
                                            // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
                                            // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
                                            .ViewMode(ViewMode.Interactive)
                                            // Sets the scale mode of the viewer.
                                            // Three modes exist currently:
                                            // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
                                            // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
                                            // Specific - Uses the scale to zoom in and out the report.
                                            .ScaleMode(ScaleMode.Specific)
                                            // Zoom in and out the report using the scale
                                            // 1.0 is equal to 100%, i.e. the original size of the report
                                            .Scale(1.0)
                                            // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
                                            // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
                                            .PersistSession(false)
                                            // Sets the print mode of the viewer.
                                            .PrintMode(PrintMode.AutoSelect)
        )
    </div>
</div>
<div id="modalWindow" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yes" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="no" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="konfirmasiDetail" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yesDetail" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="noDetail" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="errWindow">
    <table width="100%">
        <tr>
            <td width="1%"></td>
            <td>
                <span style="font-size: medium; font-weight: 500;">Data Hasil Input Tidak Valid</span>
                <span style="font-size: medium; font-weight: 500;"><label id="errMsg"></label></span>
            </td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="ok" class="delete k-button">Perbaiki</button></td>
            <td></td>
        </tr>
    </table>

</div>
<div id="delWindow">
    <table width="100%" style="text-align:center">
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data Tidak Dapat Dihapus! Penyebab :</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data detail masih ada, atau</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Faktur dengan No PO ini masih ada.</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="okDel" class="delete k-button">Periksa</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="konfirmasiLeaveGrid" title="Konfirmasi">
    <table width="100%">
        <tr>
            <td width="2%"></td>
            <td><span style="font-size: large ; font-weight: 700;">Data Grid Belum Disimpan! Simpan Data ?</span></td>
            <td width="2%"></td>
        </tr>
        <tr>
            <td></td>
            <td align="center">
                <button id="yesLeaveGrid" class="k-button">Ya</button>
                <button id="noLeaveGrid" class="k-button">Tidak</button>
            </td>
            <td></td>
        </tr>
    </table>
</div>

<script>
    var dHBB_BarangId, dHBB_HargaBarangId, dhbbbarangId, nomorPengajuan, dHBB_PerhitunganBarangId;
    var wndLeaveGrid, wnd, wndDetail, prt, err, del;
    var model;
    var headerBaru, detailBaru;
    var gridStatus;
    var rowNumber = 0;
    var menuId = '1fba15f9-52e3-4f5e-a343-3d32fb8c4e48';

    function resetRowNumber(e) {
        rowNumber = 0;
    }

    function renderNumber(data) {
        var no = ++rowNumber;
        data.NoBaris = no;
        return no;
    }

    $('.k-window.titlebar').css('style', 'display: none');
    $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add");

    $(document).ajaxStart(function () {
        $("#_header").addClass('disabledbutton');
        $("#_detail").addClass('disabledbutton');
        $("#_footer").addClass('disabledbutton');
        $("#progress").show();
    }).ajaxStop(function () {
        $("#progress").hide();
        $("#_header").removeClass('disabledbutton');
        $("#_detail").removeClass('disabledbutton');
        $("#_footer").removeClass('disabledbutton');
    });

    $(document).ready(function () {
        wnd = $("#modalWindow").kendoWindow({
            title: "Konfirmasi",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");

        wndDetail = $("#konfirmasiDetail").kendoWindow({
            title: "Konfirmasi",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");

        err = $("#errWindow").kendoWindow({
            title: "Error Data",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");

        prt = $("#printWindow").kendoWindow({
            title: "Print",
            modal: true,
            visible: false,
            resizable: false,
            width: 800,
            height: 500
        }).data("kendoWindow");

        del = $("#delWindow").kendoWindow({
            title: "Hapus Header",
            modal: true,
            visible: false,
            resizable: false,
            width: 400,
            height: 150
        }).data("kendoWindow");

        wndLeaveGrid = $("#konfirmasiLeaveGrid").kendoWindow({
            title: "Konfirmasi",
            modal: true,
            visible: false,
            resizable: false,
            width: 400,
            height: 150
        }).data("kendoWindow");

        gridStatus = 'belum-ngapa-ngapain';
        $("#grdDetail").kendoValidator({
            rules: { // custom rules
                chopvalidation: function (input) {
                    if (input.attr("name") == "Banyaknya_Volume" && input.val() != "") {
                        var grid = $('#grdDetail').data('kendoGrid');
                        var dataItem = typeof (grid.dataSource.get(dHBB_PerhitunganBarangId)) == "undefined" ? grid.dataSource.getByUid(dHBB_PerhitunganBarangId) : grid.dataSource.get(dHBB_PerhitunganBarangId);
                        
                        var hargaDasar = dataItem.HargaDasar;
                        var banyaknya_Volume = dataItem.Banyaknya_Volume;

                        var jumlahHarga = banyaknya_Volume * hargaDasar;
                        dataItem.JumlahHarga = jumlahHarga;
                        $('#JumlahHarga').val(jumlahHarga);
                        

                        grid.refresh();
                    }
                    if (input.attr("name") == "Perbandingan_PH" && input.val() != "") {
                        var grid = $('#grdDetail').data('kendoGrid');
                        var dataItem = typeof (grid.dataSource.get(dHBB_PerhitunganBarangId)) == "undefined" ? grid.dataSource.getByUid(dHBB_PerhitunganBarangId) : grid.dataSource.get(dHBB_PerhitunganBarangId);

                        var perbandingan_Formula = dataItem.Perbandingan_Formula;
                        var perbandingan_PH = dataItem.Perbandingan_PH;
                        var banyaknya_Volume = dataItem.Banyaknya_Volume;

                        if (perbandingan_Formula >= perbandingan_PH) {
                            var hasil = perbandingan_PH;
                            dataItem.Hasil = hasil;
                            $('#Hasil').val(hasil);
                            var jumlahHasil = banyaknya_Volume*perbandingan_PH;
                            dataItem.JumlahHasil = jumlahHasil;
                            $('#JumlahHasil').val(jumlahHasil);
                            var pPN = jumlahHasil*0.1;
                            dataItem.PPN = pPN;
                            $('#PPN').val(pPN);                           
                            var jumlahSetelahPPN = jumlahHasil + pPN;
                            dataItem.JumlahSetelahPPN = jumlahSetelahPPN;
                            $('#JumlahSetelahPPN').val(jumlahSetelahPPN);
                            var hargaSatuan = jumlahSetelahPPN / banyaknya_Volume;
                            dataItem.HargaSatuan = hargaSatuan;
                            $('#HargaSatuan').val(hargaSatuan);
                        }
                        else {
                            var hasil = perbandingan_Formula;
                            dataItem.Hasil = hasil;
                            $('#Hasil').val(hasil);
                            var jumlahHasil = banyaknya_Volume * perbandingan_Formula;
                            dataItem.JumlahHasil = jumlahHasil;
                            $('#JumlahHasil').val(jumlahHasil);
                            var pPN = jumlahHasil * 0.1;
                            dataItem.PPN = pPN;
                            $('#PPN').val(pPN);
                            var jumlahSetelahPPN = jumlahHasil + pPN;
                            dataItem.JumlahSetelahPPN = jumlahSetelahPPN;
                            $('#JumlahSetelahPPN').val(jumlahSetelahPPN);
                            var hargaSatuan = jumlahSetelahPPN / banyaknya_Volume;
                            dataItem.HargaSatuan = hargaSatuan;
                            $('#HargaSatuan').val(hargaSatuan);
                        }
                       


                        grid.refresh();
                    }
                }
            }
        });
    });

    $(window).on("beforeunload", function () {
        return "Please don't leave me!";
    });

    $(window).on("unload", function () {
        hapusPenggunaPortalYangAktif();
    });

    angular.module("__header", ["kendo.directives"])
        .controller("MyCtrl", function ($scope) {
            $scope.validate = function (event) {
                event.preventDefault();
                if ($scope.validator.validate()) {
                    enableHeader();
                    nomorPengajuan = $('#KodeCetak').val();
                    $(".k-button-icontext").removeClass("k-state-disabled").addClass("k-grid-add");
                    $('#_detail').removeClass('disabledbutton');
                    getDataFrom().done(function (data) {
                        if (data == 0) {                          
                            GetNamaBarangBaru().done(function (data1) {
                                if (data1) {
                                    var grd = $('#grdDetail').data('kendoGrid');
                                    grd.dataSource.data(data1);
                                    //grd.refresh();
                                }
                            });
                        }
                        else {
                            GetNamaBarangSudahAda().done(function (data1) {
                                if (data1) {
                                    var grd = $('#grdDetail').data('kendoGrid');
                                    grd.dataSource.data(data1);
                                    //grd.refresh();
                                }
                            });
                        }
                        }).fail(function (x) {
                            alert('Error! Hubungi Bagian TI');
                        });
                } else {
                    $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add"); // edited
                    gridDestroy();
                }
            }
        });

    function hapusPenggunaPortalYangAktif() {
        var url = '/Account/HapusPenggunaPortalYangAktif';
        return $.ajax({
            url: url,
            data: {
                _menuId: menuId
            },
            type: 'POST',
            datatype: 'json'
        });
    }

    function grdOnDataBound(e) {
        var rows = e.sender.tbody.children();
        for (var j = 0; j < rows.length; j++) {
            var row = $(rows[j]);
            var dataItem = e.sender.dataItem(row);
        }
    }

    function disableHeader() {
        $("._key").find('span').addClass('disabledbutton');
        $("._key").addClass('disabledbutton');
        $("._nonkey").find('span').addClass('disabledbutton');
        $("._nonkey").addClass('disabledbutton');
        $('#btnSubmitHeader').addClass('disabledbutton');
        $('#btnPrintHeader').addClass('disabledbutton');
        $('#_detail').addClass('disabledbutton');
    }

    function enableHeader() {
        $("._key").find('span').removeClass('disabledbutton');
        $("._key").removeClass('disabledbutton');
        $("._nonkey").find('span').removeClass('disabledbutton');
        $("._nonkey").removeClass('disabledbutton');
        $('#btnSubmitHeader').removeClass('disabledbutton');
        $('#btnPrintHeader').removeClass('disabledbutton');
    }


    function openWindow(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        wndDetail.open().center();
        $("#yesDetail").click(function () {
            wndDetail.close();
            $('#grdDetailHargaBarang_' + dHBB_BarangId).data('kendoGrid').removeRow(row);
            gridStatus = 'sudah-diapa-apain';
        });
        $("#noDetail").click(function () {
            wndDetail.close();
        });
    }

    function openWindowLeaveGrid(e) {
        e.preventDefault();
        wndLeaveGrid.open().center();
        $("#yesLeaveGrid").click(function () {
            wndLeaveGrid.close();
            sendData();
        });
        $("#noLeaveGrid").click(function () {
            gridStatus = 'belum-ngapa-ngapain';
            wndLeaveGrid.close();
        });
    }

    function openErrWindow(e) {
        err.open().center();
        $("#ok").click(function () {
            err.close();
        });
    }

    function openDelWindow(e) {
        del.open().center();
        $("#okDel").click(function () {
            del.close();
        });
    }

    function openDelDetailWindow(e) {
        del.open().center();
        $("#okDel").click(function () {
            del.close();
        });
    }

    function btnPrintHeaderOnClick() {
        var viewer = $("#reportViewer").data("telerik_ReportViewer");
        viewer.reportSource({
            report: viewer.reportSource().report,
            parameters: { NomorPengajuan: nomorPengajuan }
        });
        viewer.refreshReport();
        prt.open().center();
    }

    function gridDestroy() {
        $("#grdDetail").data("kendoGrid").dataSource.read([]);
    }

    function grdOnDetailExpand(e) {
        dHBB_BarangId = this.dataItem(e.masterRow).DHBB_BarangId;
        var grd2 = $('#grdDetailHargaBarang_' + dHBB_BarangId).data('kendoGrid');
        grd2.dataSource.read();
    }

    function grdOnChange(e) {
    }

    function grdOnEdit(e) {
        var model = e.model;
        this.expandRow(this.tbody.find("tr[data-uid='" + model.uid + "']"));
        if (model.isNew()) {
            model.DHBB_PerhitunganBarangId = model.uid;
        }
        dHBB_PerhitunganBarangId = model.DHBB_PerhitunganBarangId;
        gridStatus = 'sudah-diapa-apain';

    }

    function grdOnDataBinding(e) {
    }

    function grdDetailHargaBarangOnEdit(e) {
        var model = e.model;
        if (model.isNew()) {
            model.id = model.uid;
            e.container.find("input[name=DHBB_HargaBarangId]").val(model.id).change(); // trigger change in order to notify the model binding
            //e.container.find("input[name=DHBB_BarangId]").val(model.id).change(); // trigger change in order to notify the model binding
            uid = model.uid;
            var grid = $("#grdDetailHargaBarang_" + dHBB_BarangId).data("kendoGrid")
            var dataItem = typeof (grid.dataSource.get(uid)) == "undefined" ? grid.dataSource.getByUid(uid) : grid.dataSource.get(uid);
            var row = grid.tbody.find("tr[data-uid='" + dataItem.uid + "']");
            var data = grid.dataItem(row);
            dataItem["DHBB_BarangId"] = dHBB_BarangId;
            data.DHBB_BarangId = dHBB_BarangId;
        }
        uid = model.uid;
        dHBB_HargaBarangId = model.id;
    }

    function grdDetailHargaBarangOnDataBound(e) {
    }

    function filterRead() {
        return {
            _menuId: menuId
        };
    }

    function sendData() {
        var grid = $("#grdDetail").data("kendoGrid"),
            parameterMap = grid.dataSource.transport.parameterMap;

        //get the new and the updated records
        var currentData = grid.dataSource.data();
        var updatedRecords = [];
        var newRecords = [];

        for (var i = 0; i < currentData.length; i++) {
            if (currentData[i].isNew()) {
                //this record is new
                newRecords.push(JSON.stringify(currentData[i]));
            } else if (currentData[i].dirty) {
                updatedRecords.push(JSON.stringify(currentData[i]));
            }
        }

        //this records are deleted
        var deletedRecords = [];
        for (var i = 0; i < grid.dataSource._destroyed.length; i++) {
            deletedRecords.push(JSON.stringify(grid.dataSource._destroyed[i]));
        }

        var data = {};
        $.extend(data, parameterMap({ updated: updatedRecords }), parameterMap({ deleted: deletedRecords }), parameterMap({ new: newRecords }), parameterMap({ mnid: menuId }));
        _sendData(data).done(function (msg) {
            if (msg == "Success") {
                grid.dataSource.read([]);
                gridStatus = 'belum-ngapa-ngapain';
            }
            else {
                $('#errMsg').text(msg);
                gridStatus = 'sudah-nyoba-disimpan-tapi-model-masih-salah';
                openErrWindow();
            }
        }).fail(function (x) {
            $('#errMsg').text(msg);
            openErrWindow();
            grid.dataSource.read([]);
            gridStatus = 'sudah-nyoba-disimpan-tapi-gagal';
        });
    }

    function _sendData(data) {
        return $.ajax({
            url: "/Input/UpdateCreateDelete",
            data: data,
            type: "POST"
        })
    }

    function filterNamaBarang(e) {
        return {
            strClassView: "Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_Barang",
            scriptSQL: "SELECT DHBB_BarangId, NamaBarang FROM [SPDK_KanpusEF].[dbo].[DHBB_Barang]",
            _menuId: menuId
        }
    }

    function NamaBarangOnSelect(e) {
        var namaBarang = this.dataItem(e.item);
        dhbbbarangId = namaBarang.DHBB_BarangId;
    }

    function TahunBukuOnChange(e) {
        if (gridStatus == 'sudah-nyoba-disimpan-tapi-model-masih-salah' ||
            gridStatus == 'sudah-diapa-apain') {
            openWindowLeaveGrid(e);
        }
        else {
            $('#msgInputView').text('');
            tahunBukuOnChange(e).done(function (data) {
                if (data) {
                    $('#NomorInputView').data('kendoDropDownList').dataSource.read().done(function () {
                        disableHeader();
                        $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add"); // edited
                        gridDestroy();
                    });
                }
                else {
                    alert("Error! Hubungi Bagian TI")
                }
            }).fail(function (x) {
                alert('Error! Hubungi Bagian TI');
            });
        }
    }

    function getDataFrom() {
        // Hitung Jumlah Record di Detail
        var url = '/Input/ExecSQL';
        return $.ajax({
            url: url,
            data: {
                scriptSQL: "select count(*) as JmlRecord from [SPDK_KanpusEF].[dbo].[DHBB_PerhitunganBarang]" +
                    " where NomorPengajuan ='" + $('#KodeCetak').val() +"'",
                _menuId: menuId
            },
            type: 'GET',
            datatype: 'json'
        });
    }

    function GetNamaBarangBaru() {
        var url = '/Input/GetDataFrom';
        return $.ajax({
            url: url,
            data: {
                strClassView: 'Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_PerhitunganBarang',
                scriptSQL: "set dateformat dmy;" +
                    "select newid() as DHBB_PerhitunganBarangId, DHBB_BarangId, DHBB_HargaBarangId, Cetak,NomorPengajuan, NamaBarang, HargaDasarOverhead as HargaDasar, Satuan as Banyaknya_Satuan, HargaDasarOverhead as Perbandingan_Formula from [SPDK_KanpusEF].[dbo].[DHBB_PilihBarang] where NomorPengajuan ='" + $('#KodeCetak').val()+"'",
                _menuId: menuId
            },
            type: 'POST',
            datatype: 'json'
        });
    }

    function GetNamaBarangSudahAda() {
        var url = '/Input/GetDataFrom';
        return $.ajax({
            url: url,
            data: {
                strClassView: 'Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_PerhitunganBarang',
                scriptSQL: "set dateformat dmy;" +
                    "select * from [SPDK_KanpusEF].[dbo].[DHBB_PerhitunganBarang] where NomorPengajuan ='" + $('#KodeCetak').val() + "' " +
                    "union " +
                    "select newid() as DHBB_PerhitunganBarangId, a.DHBB_HargaBarangId, a.DHBB_BarangId, a.Cetak, a.NomorPengajuan, a.NamaBarang, '' as Uraian, 0 as Banyaknya_Volume, Satuan as Banyaknya_Satuan, HargaDasarOverhead as HargaDasar, 0 as JumlahHarga, 0 as BiayaOverheadAngkutan, 0 as JumlahSetelahOverhead, HargaDasarOverhead as Perbandingan_Formula, 0 as Perbandingan_PH, 0 as HAsil, 0 as JumlahHasil, 0 as PPn, 0 as JumlahsetelahPPN, 0 as HargaSatuan, GETDATE() as TanggalInput, '' as Username " +
                    "from[SPDK_KanpusEF].[dbo].[DHBB_PilihBarang] as a " +
                    "left join [SPDK_KanpusEF].[dbo].[DHBB_PerhitunganBarang] as b on a.DHBB_BarangId = b.DHBB_BarangId " +
                    "where a.NomorPengajuan = '" + $('#KodeCetak').val() + "' and a.DHBB_BarangId not in (select DHBB_BarangId from[SPDK_KanpusEF].[dbo].[DHBB_PerhitunganBarang] where NomorPengajuan = '" + $('#KodeCetak').val() + "' ) ",
                _menuId: menuId
            },
            type: 'POST',
            datatype: 'json'
        });
    }

    function sendDataDTL() {

        var grid = $("#grdDetailHargaBarang_" + dHBB_BarangId).data("kendoGrid"),
            parameterMap = grid.dataSource.transport.parameterMap;

        //get the new and the updated records
        var currentData = grid.dataSource.data();

        var updatedRecords = [];
        var newRecords = [];
        var spupdated = [];
        var spnew = [];

        for (var i = 0; i < currentData.length; i++) {
            if (currentData[i].isNew()) {
                newRecords.push(JSON.stringify(currentData[i]));
            } else if (currentData[i].dirty) {
                updatedRecords.push(JSON.stringify(currentData[i]));
            }
        }

        //this records are deleted
        var deletedRecords = [];
        var spdeleted = [];
        for (var i = 0; i < grid.dataSource._destroyed.length; i++) {
            deletedRecords.push(JSON.stringify(grid.dataSource._destroyed[i]));
        }

        var data = {};
        $.extend(data,
            parameterMap({ updated: updatedRecords }),
            parameterMap({ deleted: deletedRecords }),
            parameterMap({ new: newRecords }),
            parameterMap({ spupdated: spupdated }),
            parameterMap({ spdeleted: spdeleted }),
            parameterMap({ spnew: spnew }),
            parameterMap({ mnid: menuId }),
            parameterMap({ classdv: 'Ptpn8.DaftarHargaBarangBahanDanTarif.Models.ViewDHBB_HargaBarang' })
        );

        _sendData(data).done(function (msg) {
            if (msg == "Success") {
                grid.dataSource.read();
                //gridStatus = 'belum-ngapa-ngapain';
            }
            else {
                $('#errMsg').text(msg);
                //gridStatus = 'sudah-nyoba-disimpan-tapi-model-masih-salah';
                openErrWindow();
            }
        }).fail(function (x) {
            $('#errMsg').text(msg);
            openErrWindow();
            grid.dataSource.read([]);
            //gridStatus = 'sudah-nyoba-disimpan-tapi-gagal';
        });

    }
</script>

<style>
    #reportViewer {
        position: absolute;
        left: 5px;
        right: 5px;
        top: 5px;
        bottom: 5px;
        overflow: hidden;
        font-family: Verdana, Arial;
    }

    .kurangDariJatuhTempo {
        background-color: limegreen;
    }

    .jatuhTempo {
        background-color: orange;
    }

    .lebihJatuhTempo {
        background-color: lightcoral;
    }
</style>



