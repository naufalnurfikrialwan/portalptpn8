@model Ptpn8.Penjualan.Models.View_HDRSC
<script src="@Url.Content("~/ReportViewer/js/print.min.js")"></script>
<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<script src="~/Scripts/Penjualan/SCKaret_KPBN.js"></script>
<img id="progress" src="~/Content/Images/ajax-loader.gif" style="position: absolute; left: 50%; top: 50%; " />
@(
            // All deferred initialization statements will be rendered here
            Html.TelerikReporting().DeferredScripts()
)

@*header*@
<div id="_header" style="font-size:10px;" ng-app="__header">
    <div class="k-content" ng-controller="MyCtrl">
        <form kendo-validator="validator" ng-submit="validate($event)">
            <table width="100%" class="hdr">
                <tr>
                    <td>
                        <div style="text-align:center">@ViewBag.Title</div>
                    </td>
                </tr>
            </table>
            <div class="_headerkaret">
                @(Html.Kendo().TextBoxFor(m => m.HDR_SCId).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.NomorInput).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.MainBudidayaId).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.NamaMainBudidaya).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.UserName).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.VerKaur).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.VerKabag).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.TglVerKaur).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.TglVerKabag).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.UserNameKaur).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.UserNameKabag).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                @(Html.Kendo().TextBoxFor(m => m.StatusPenjualan).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
                <table width="50%;" align="center">
                    <tr>
                        <td width="100%;">
                            <label id="msgInputView" style="text-align:center; color: white; background-color: red; font-size: medium;"></label>
                        </td>
                    </tr>
                </table>

                <table width="50%;" align="center">
                    <tr>
                        <td width="20%">
                            <label style="text-align:right">Tahun/Nomor Input:</label>
                        </td>
                        <td style="font-size:small">
                            @(Html.Kendo().NumericTextBoxFor(m => m.TahunBuku).Min(2016).Format("D4")
                                        .HtmlAttributes(new { style = "width:15%", @class = "allcaps" })
                                        .Events(e => { e.Change("TahunBukuOnChange"); e.Spin("TahunBukuOnChange"); })
                            )
                            -
                            @(Html.Kendo().DropDownListFor(m => m.NomorInputView)
                                        .OptionLabel("Pilih No Input")
                                        .AutoBind(false)
                                        .DataValueField("NomorInput")
                                        .DataTextField("NomorInputView")
                                        .DataSource(o =>
                                        {
                                            o.Read(r => r.Action("getNomorInput", "Input").Data("filterNomorInput").Type(HttpVerbs.Post));
                                        })
                                        .HtmlAttributes(new { required = "required", data_required_msg = "Pilih Data", style = "width: 82%" })
                                        .SelectedIndex(0)
                                        .Events(e =>
                                        {
                                            e.Select("NomorInputViewOnSelect");
                                            e.Change("NomorInputViewOnSelect");
                                            e.DataBound("NomorInputViewOnDataBound");
                                        })
                            )
                        </td>
                    </tr>
                    <tr>
                        <td class="_nonkey">
                            <label style="text-align:right">No/Tgl SC:</label>
                        </td>
                        <td class="_nonkey">
                            @(Html.Kendo().TextBoxFor(m => m.No_SC).HtmlAttributes(new { style = "width:300px", @class = "allcaps" }))
                            <button type="button" id="btnDownLoad" onclick="btnDownloadOnClick()" class="k-button" style="color: white; background-color: blue; font-size: small; height: 30px; width: 100px"><span class="k-font-icon k-i-trash"></span>Download</button>
                            /
                            @(Html.Kendo().DateTimePickerFor(m => m.Tanggal_SC).Format("dd/MM/yyyy HH:mm").HtmlAttributes(new { style = "width: 20%" }))
                        </td>
                    </tr>
                </table>

                <table width="50%" align="center">
                    <tr>
                        <td width="8%" class="_nonkey">
                            <label style="text-align:right">Buyers:</label>
                        </td>
                        <td width="25%" class="_nonkey">
                            <table width="100%">
                                <tr>
                                    <td>
                                        @(Html.Kendo().AutoCompleteFor(m => m.Buyers1)
                                                    .MinLength(2)
                                                    .Filter("contains")
                                                    .DataTextField("Buyers1")
                                                    .DataSource(o => o.Read(r => r.Action("GetHeaderHistory", "Input").Data("filterBuyers")).ServerFiltering(true))
                                                    .HtmlAttributes(new { required = "required", data_required_msg = "Isi Buyers", style = "width: 100%", @class = "allcaps" })
                                                    .Events(e => e.Select("Buyers1OnSelect"))
                                        )
                                        @(Html.Kendo().AutoCompleteFor(m => m.Buyers2).HtmlAttributes(new { style = "width:100%" }))
                                        @(Html.Kendo().AutoCompleteFor(m => m.Buyers3).HtmlAttributes(new { style = "width:100%" }))
                                        @(Html.Kendo().AutoCompleteFor(m => m.Buyers4).HtmlAttributes(new { style = "width:100%" }))
                                        @(Html.Kendo().AutoCompleteFor(m => m.Buyers5).HtmlAttributes(new { style = "width:100%" }))
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>

                <table width="50%" align="center">
                    <tr>
                        <td width="8%" class="_nonkey">
                            <label style="text-align:right">Through:</label>
                        </td>
                        <td width="25%" class="_nonkey">
                            <table width="100%">
                                <tr>
                                    <td>
                                        @(Html.Kendo().AutoCompleteFor(m => m.Through1)
                                                    .MinLength(2)
                                                    .Filter("contains")
                                                    .DataTextField("Through1")
                                                    .DataSource(o => o.Read(r => r.Action("GetHeaderHistory", "Input").Data("filterThrough")).ServerFiltering(true))
                                                    .HtmlAttributes(new { required = "required", data_required_msg = "Isi Broker", style = "width: 100%", @class = "allcaps" })
                                                    .Events(e => e.Select("Through1OnSelect"))
                                        )
                                        @(Html.Kendo().AutoCompleteFor(m => m.Through2).HtmlAttributes(new { style = "width:100%" }))
                                        @(Html.Kendo().AutoCompleteFor(m => m.Through3).HtmlAttributes(new { style = "width:100%" }))
                                        @(Html.Kendo().AutoCompleteFor(m => m.Through4).HtmlAttributes(new { style = "width:100%" }))
                                        @(Html.Kendo().AutoCompleteFor(m => m.Through5).HtmlAttributes(new { style = "width:100%" }))
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>


                <table width="50%" align="center">
                    <tr>
                        <td width="12.9%" class="_nonkey">
                            <label style="text-align:right">Condition:</label>
                        </td>
                        <td>
                            @(Html.Kendo().AutoCompleteFor(m => m.Condition).HtmlAttributes(new { style = "width:94%" }).Placeholder("Condition"))
                        </td>
                    </tr>

                    <tr>
                        <td width="12.9%" class="_nonkey">
                            <label style="text-align:right">Bank:</label>
                        </td>
                        <td>
                            @(Html.Kendo().AutoCompleteFor(m => m.Through_Bank).HtmlAttributes(new { style = "width:94%" }).Placeholder("Bank"))
                        </td>
                    </tr>
                    <tr>
                        <td width="12.9%" class="_nonkey">
                            <label style="text-align:right">Validity:</label>
                        </td>
                        <td>
                            @(Html.Kendo().AutoCompleteFor(m => m.Validity).HtmlAttributes(new { style = "width:94%" }).Placeholder("Validity"))
                        </td>
                    </tr>
                </table>
                <table width="50%" align="center">
                    <tr class="_nonkey">
                        <td>
                            <label class="_nonkey" style="text-align: right;">Pejabat:</label>
                        </td>
                        <td>
                            @(Html.Kendo().AutoCompleteFor(m => m.Pejabat).HtmlAttributes(new { style = "width:70%", @class = "allcaps" }).Placeholder("Pejabat Penandatangan"))
                            -
                            @(Html.Kendo().AutoCompleteFor(m => m.No_SuratTugas).HtmlAttributes(new { style = "width:100%", @class = "allcaps" }).Placeholder("No Surat Penugasan"))
                        </td>
                    </tr>
                </table>
                <table width="50%;" align="center">
                    <tr>
                        <td width="100%" align="center">
                            <div class="confirm">
                                <button type="submit" id="btnSubmitHeader" class="k-button" style="color: white; background-color: green; font-size: small; height: 30px; margin-left: 20px;"><span class="k-font-icon k-i-restore"></span>Submit</button>
                                <button type="button" id="btnDeleteHeader" onclick="btnDeleteHeaderOnClick()" class="k-button" style="color: white; background-color: red; font-size: small; height: 30px;"><span class="k-font-icon k-i-trash"></span>Hapus SC</button>
                                <button type="button" id="btnPrintHeader" onclick="btnPrintHeaderOnClick()" class="k-button" style="color: white; background-color: gray; font-size: small; height: 30px;"><span class="k-font-icon k-i-print"></span>Cetak SC</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>

@*detail*@
<div id="_detail" class="_detail">
    @(Html.Kendo()
                .Grid<Ptpn8.Penjualan.Models.View_DTLSC>(Guid.Empty.ToString())
                .Name("grdDetail")
                .Columns(g =>
                {
                    g.Bound(i => i.DTL_SCId).Width(50).Hidden();
                    g.Bound(i => i.HDR_SCId).Width(50).Hidden();
                    g.Bound(i => i.SubBudidayaId).Width(50).Hidden();
                    g.Bound(i => i.MerkId).Width(50).Hidden();
                    g.Bound(i => i.GradeId).Width(50).Hidden();
                    g.Bound(i => i.SatuanId).Width(50).Hidden();
                    g.Bound(i => i.NoBaris).Template(t => { }).Title("No Baris").ClientTemplate("#= renderNumber(data) #").Width(50);
                    g.Bound(i => i.NamaSubBudidaya).Width(120).Title("Jenis Karet");
                    g.Bound(i => i.NamaMerk).Width(120).Title("Estate");
                    g.Bound(i => i.NamaGrade).Width(120).Title("Grade")
                        .ClientFooterTemplate("TOTAL")
                        .FooterHtmlAttributes(new { style = "text-align: center; background: silver;" });
                    g.Bound(i => i.QtySacks).Width(70).Title("Qty").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right;" })
                        .Format("{0:N2}")
                        .HtmlAttributes(new { style = "text-align: right;" })
                        .ClientFooterTemplate("#= kendo.toString(sum,'n2') #")
                        .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" }).Hidden();
                    g.Bound(i => i.NamaSatuan).Width(100).Title("Satuan");
                    g.Bound(i => i.Netto).Width(80).Title("Netto").Format("{0:N0}").HtmlAttributes(new { style = "text-align: right;" })
                        .Format("{0:N2}")
                        .HtmlAttributes(new { style = "text-align: right;" })
                        .ClientFooterTemplate("#= kendo.toString(sum,'n2') #")
                        .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                    g.Bound(i => i.Price).Width(80).Title("Price (Cent USD)").Format("{0:N2}").HtmlAttributes(new { style = "text-align: right;" });
                    g.Bound(i => i.JumlahHarga).Width(120).Title("Amount (USD)").Format("{0:N2}").HtmlAttributes(new { id = "jml#=DTL_SCId#", @readonly = "true", style = "text-align: right;" })
                        .ClientFooterTemplate("#= kendo.toString(sum,'n2') #")
                        .FooterHtmlAttributes(new { style = "text-align: right; background: silver;" });
                    g.Command(command =>
                    {
                        command.Custom("Delete").Text("Hapus Baris").Click("openWindow")
                            .HtmlAttributes(new { @class = "k-button k-font-icon k-i-trash", style = "font-size: small; background-color: red; color: white; height: 20px;" });
                    }).Width(200);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Template("<a class='k-button k-grid-add' style='background-color: blue; color: white; font-size:small;' href='#'></span><span class='k-font-icon k-i-plus'></span>Tambah Baris</a>" +
                                    "<a class='k-button' style='background-color: green; color: white; font-size:small;' onclick='sendData()' href='#'></span><span class='k-font-icon k-i-restore'></span>Simpan</a>" +
                                    "<a class='k-button' style='background-color: red; color: white; font-size:small;' onclick='hapusSeluruh()' href='#'></span><span class='k-font-icon k-i-trash'></span>Hapus Semua Baris</a>");
                })
                .AutoBind(false)
                .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
                .Navigatable()
                .Resizable(resizeable => resizeable.Columns(true))
                .Scrollable()
                .Sortable()
                .HtmlAttributes(new { style = "Height: 450px" })
                .Events(e =>
                {
                    e.Change("grdOnChange");
                    e.Edit("grdOnEdit");
                    e.DataBinding("grdOnDataBinding");
                    e.DataBound("resetRowNumber");
                })
                .DataSource(o => o
                    .Ajax()
                    .ServerOperation(false)
                    .Batch(true)
                    .Sort(j => j.Add(i => i.NamaGrade))
                    .Model(model =>
                    {
                        model.Id(p => p.DTL_SCId);
                        model.Field(p => p.NoBaris).Editable(false);
                    })
                    .Read(read => read.Action("detailRead", "Input").Data("filterdetailRead").Type(HttpVerbs.Post))
                    .Create(create => create.Action("detailCreate", "Input").Data("filterdetailCreate").Type(HttpVerbs.Post))
                    .Update(update => update.Action("detailUpdate", "Input").Data("filterGridUpdate").Type(HttpVerbs.Post))
                    .Destroy(destroy => destroy.Action("detailDestroy", "Input").Data("filterGridDestroy").Type(HttpVerbs.Post))
                    .Aggregates(ag =>
                    {
                        ag.Add(x => x.Netto).Sum();
                        ag.Add(x => x.QtySacks).Sum();
                        ag.Add(x => x.JumlahHarga).Sum();
                    })
                    )
    )
</div>

@*footer*@
<div id="_footer">
</div>

<div id="printWindow" contextmenu="Print" title="Print" class="print">
    <div id="reportViewer">
        @(Html.TelerikReporting().ReportViewer()
                    // Each report viewer must have an id - it will be used by the initialization script
                    // to find the element and initialize the report viewer.
                    .Id("reportViewer")
                    // The URL of the service which will serve reports.
                    // The URL corresponds to the name of the controller class (ReportsController).
                    // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
                    .ServiceUrl(Url.Content("/api/reports/"))
                    // The URL for custom report vie    wer template. The template can be edited -
                    // new functionalities can be added and unneeded ones can be removed.
                    // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
                    //
                    // Strongly typed ReportSource - TypeReportSource or UriReportSource.
                    .ReportSource(new UriReportSource() { Uri = "../Reports/Penjualan/SCKaret.trdx" })
                    // Specifies whether the viewer is in interactive or print preview mode.
                    // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
                    // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
                    .ViewMode(ViewMode.Interactive)
                    // Sets the scale mode of the viewer.
                    // Three modes exist currently:
                    // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
                    // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
                    // Specific - Uses the scale to zoom in and out the report.
                    .ScaleMode(ScaleMode.Specific)
                    // Zoom in and out the report using the scale
                    // 1.0 is equal to 100%, i.e. the original size of the report
                    .Scale(1.0)
                    // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
                    // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
                    .PersistSession(false)
                    // Sets the print mode of the viewer.
                    .PrintMode(PrintMode.AutoSelect)
        )
    </div>
</div>
<div id="modalWindow" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yes" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="no" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="konfirmasiDetail" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yesDetail" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="noDetail" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="errWindow">
    <table width="100%">
        <tr>
            <td width="1%"></td>
            <td>
                <span style="font-size: medium; font-weight: 500;">Data Hasil Input Tidak Valid</span>
                <span style="font-size: medium; font-weight: 500;"><label id="errMsg"></label></span>
            </td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="ok" class="delete k-button">Perbaiki</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="delWindow">
    <table width="100%" style="text-align:center">
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data Tidak Dapat Dihapus! Penyebab :</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data detail masih ada, atau</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Invoice dengan No SI ini masih ada.</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="okDel" class="delete k-button">Periksa</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="konfirmasiLeaveGrid" title="Konfirmasi">
    <table width="100%">
        <tr>
            <td width="2%"></td>
            <td><span style="font-size: large ; font-weight: 700;">Data Grid Belum Disimpan! Simpan Data ?</span></td>
            <td width="2%"></td>
        </tr>
        <tr>
            <td></td>
            <td align="center">
                <button id="yesLeaveGrid" class="k-button">Ya</button>
                <button id="noLeaveGrid" class="k-button">Tidak</button>
            </td>
            <td></td>
        </tr>
    </table>
</div>

<div id="downloadWindow" title="Download Data KPBN">
    @(Html.Kendo()
                .Grid<Ptpn8.Penjualan.Models.View_HDRSC>(Guid.Empty.ToString())
                .Name("grdHDRSC")
                .Columns(g =>
                {
                    g.Bound(i => i.HDR_SCId).Width(50).Hidden();
                    g.Bound(i => i.No_SC).Width(120).Title("No SC");
                    g.Bound(i => i.Tanggal_SC).Width(80).Title("Tanggal SC").Format("{0:dd-MM-yyyy}");
                    g.Bound(i => i.UserName).Width(50).Hidden();
                    g.Bound(i => i.Buyers1).Width(120).Title("Buyer");
                    g.Bound(i => i.Buyers2).Width(120).Title("");
                    g.Bound(i => i.Buyers3).Width(120).Title("");
                    g.Command(command =>
                    {
                        command.Custom("btnPilih").Text("Pilih Data").Click("btnPilihOnClick")
                            .HtmlAttributes(new { @class = "k-button k-font-icon k-i-trash", style = "font-size: small; background-color: red; color: white; height: 20px;" });
                    }).Width(200);
                })
                .AutoBind(false)
                .Navigatable()
                .Resizable(resizeable => resizeable.Columns(true))
                .Scrollable()
                .Sortable()
                .HtmlAttributes(new { style = "Height: 300px" })
                .DataSource(o => o
                    .Ajax()
                    .ServerOperation(false)
                    .Batch(true)
                    .Model(model =>
                    {
                        model.Id(p => p.HDR_SCId);
                    })
                    )
    )
</div>

<style>
    #reportViewer {
        position: absolute;
        left: 5px;
        right: 5px;
        top: 5px;
        bottom: 5px;
        overflow: hidden;
        font-family: Verdana, Arial;
    }
</style>

