@**@

<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<img id="progress" src="~/Content/Images/ajax-loader.gif" style="position: absolute; left: 50%; top: 50%; " />
@(
            // All deferred initialization statements will be rendered here
            Html.TelerikReporting().DeferredScripts()
)
@*<script src="~/Scripts/PerjalananDinas/RuangRapat_Pengajuan.js"></script>*@

@*header*@
<div id="_header" style="font-size:10px;" ng-app="__header">
    <div class="k-content" ng-controller="MyCtrl">
        <form kendo-validator="validator" ng-submit="validate($event)">
            <table width="100%" class="hdr">
                <tr>
                    <td>
                        <div style="text-align:center">@ViewBag.Title</div>
                    </td>
                </tr>
            </table>
            <div class="_headerkopi">
                <table width="40%">
                    <tr>
                        <td width="3%">
                            <label>Tahun:</label>
                        </td>
                        <td width="20%">
                            @(Html.Kendo().NumericTextBox().Name("Tahun").Min(2017).Format("D4").Value(2019)
                        .HtmlAttributes(new { style = "width:15%", @class = "allcaps" })
                            )
                        </td>
                    </tr>
                    <tr>
                        <td width="3%">
                            <label>Bulan:</label>
                        </td>
                        <td width="20%">
                            @(Html.Kendo().DropDownList()
                                .AutoBind(true)
                                .Name("Bulan")
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .HtmlAttributes(new { style = "width:55%", @class = "allcaps" })
                                .BindTo(new List<SelectListItem>()
                                {
                                    new SelectListItem() {
                                        Text = "Januari",
                                        Value = "01"
                                    },
                                    new SelectListItem() {
                                        Text = "Februari",
                                        Value = "02"
                                    },
                                    new SelectListItem() {
                                        Text = "Maret",
                                        Value = "03"
                                    },
                                    new SelectListItem() {
                                        Text = "April",
                                        Value = "04"
                                    },
                                    new SelectListItem() {
                                        Text = "Mei",
                                        Value = "05"
                                    },
                                    new SelectListItem() {
                                        Text = "Juni",
                                        Value = "06"
                                    },
                                    new SelectListItem() {
                                        Text = "Juli",
                                        Value = "07"
                                    },
                                    new SelectListItem() {
                                        Text = "Agustus",
                                        Value = "08"
                                    },
                                    new SelectListItem() {
                                        Text = "September",
                                        Value = "09"
                                    },
                                    new SelectListItem() {
                                        Text = "Oktober",
                                        Value = "10"
                                    },
                                    new SelectListItem() {
                                        Text = "Nopember",
                                        Value = "11"
                                    },
                                    new SelectListItem() {
                                        Text = "Desember",
                                        Value = "12"
                                    }
                                    })
                            )
                        </td>
                    </tr>

                </table>
                <table width="50%;" align="center" style="margin-bottom: 5px;">
                    <tr>
                        <td width="100%" align="center">
                            <div class="confirm">
                                <button id="btnSubmitHeader" class="submit k-button" type="submit">Proses</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>
@*detail*@
<div id="_detail" class="_detail">
    @(Html.Kendo()
                .Grid<Ptpn8.Models.RuangRapat.View_RuangRapatPTPNVIII>(Guid.Empty.ToString())
                .Name("grdDetail")
                .Columns(g =>
                {
                    g.Bound(i => i.RuangRapatPTPNVIIIId).Width(50).Hidden();
                    g.Bound(i => i.NoBaris).Template(t => { }).Title("No Baris").ClientTemplate("#= renderNumber(data) #").Width(50);                   
                    g.Bound(i => i.TanggalMulai).Title("Tanggal Mulai").Width(150).Format("{0:dd-MM-yyyy HH:mm}");
                    g.Bound(i => i.TanggalSelesai).Title("Tanggal Selesai").Width(150).Format("{0:dd-MM-yyyy HH:mm}");
                    g.Bound(i => i.JenisRuangRapat).Title("Jenis Ruang Rapat").Width(250);
                    g.Bound(i => i.NamaKegiatan).Title("Nama Kegiatan").Width(250);
                    g.Bound(i => i.JumlahPeserta).Title("Jumlah Peserta").Width(100);
                    g.Bound(i => i.ReferensiNoSuratUndangan).Title("No Surat/Memo Undangan").Width(200);
                    g.Bound(i => i.DihadiriOleh).Title("Dihadiri Oleh").Width(300);
                    g.Bound(i => i.FasilitasRapat).Title("Fasilitas Rapat").Width(300);
                    g.Group(i =>
                    {
                        i.Title("Permintaan Konsumsi (Pemesanan konsumsi dapat dilayani ketika pemesanan ruang > 6 jam sebelumnya)");
                        i.Columns(c =>
                        {
                            c.Bound(j => j.PermintaanSnack).Title("Snack Pagi").Width(120).ClientTemplate("<input id='#=RuangRapatPTPNVIIIId#' type='checkbox' #= PermintaanSnack ? checked='checked' :'' # onclick='handleClickPermintaanSnack(this)'/>");
                            c.Bound(j => j.PermintaanSnackSore).Title("Snack Sore").Width(120).ClientTemplate("<input id='#=RuangRapatPTPNVIIIId#' type='checkbox' #= PermintaanSnackSore ? checked='checked' :'' # onclick='handleClickPermintaanSnackSore(this)'> ");
                            c.Bound(j => j.PermintaanMakan).Title("Makan Pagi").Width(120).ClientTemplate("<input id='#=RuangRapatPTPNVIIIId#' type='checkbox' #= PermintaanMakan ? checked='checked' :'' # onclick='handleClickPermintaanMakan(this)'> ");
                            c.Bound(j => j.PermintaanMakanSiang).Title("Makan Siang").Width(120).ClientTemplate("<input id='#=RuangRapatPTPNVIIIId#' type='checkbox' #= PermintaanMakanSiang ? checked='checked' :'' # onclick='handleClickPermintaanMakanSiang(this)'> ");
                            c.Bound(j => j.PermintaanMakanMalam).Title("Makan Malam").Width(120).ClientTemplate("<input id='#=RuangRapatPTPNVIIIId#' type='checkbox' #= PermintaanMakanMalam ? checked='checked' :'' # onclick='handleClickPermintaanMakanMalam(this)'> ");
                        });
                    });
                    g.Bound(i => i.Verifikasi).Title("Verifikasi (Diisi Sekper)").Width(200);
                    g.Bound(i => i.Catatan).Title("Catatan (Diisi Sekper)").Width(400);
                    g.Bound(i => i.BagianId).Width(50).Hidden();

                })
                .ToolBar(toolbar =>
                {
                    toolbar.Template("<a class='k-button k-grid-add' style='background-color: blue; color: white; font-size:small;' href='#'></span><span class='k-font-icon k-i-plus'></span>Tambah Baris</a>" +
                                    "<a class='k-button' style='background-color: green; color: white; font-size:small;' onclick='sendData()' href='#'></span><span class='k-font-icon k-i-restore'></span>Simpan</a>");
                    toolbar.Excel();
                })
                .AutoBind(false)
                .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
                .Navigatable()
                .Resizable(resizeable => resizeable.Columns(true))
                .Scrollable()
                .Excel(excel => excel.AllPages(true))
                .Sortable()
                .Groupable()
                .Filterable()
                .HtmlAttributes(new { style = "Height: 450px" })
                .Events(e =>
                {
                    e.Change("grdOnChange");
                    e.Edit("grdOnEdit");
                    e.DataBound("resetRowNumber");
                })
                .DataSource(o => o
                    .Ajax()
                    .ServerOperation(false)
                    .Sort(s => s.Add(x => x.TanggalMulai))
                    .Batch(true)
                    .Model(model =>
                    {
                        model.Id(p => p.RuangRapatPTPNVIIIId);
			model.Field(f => f.Verifikasi).Editable(false);
                    })
                    .Read(read => read.Action("detailRead", "Input").Data("filterdetailRead").Type(HttpVerbs.Post))
                    .Create(create => create.Action("detailCreate", "Input").Data("filterdetailCreate").Type(HttpVerbs.Post))
                    .Update(update => update.Action("detailUpdate", "Input").Data("filterGridUpdate").Type(HttpVerbs.Post))
                    .Destroy(destroy => destroy.Action("detailDestroy", "Input").Data("filterGridDestroy").Type(HttpVerbs.Post))
                )
    )
</div>
<div id="modalWindow" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yes" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="no" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="konfirmasiDetail" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yesDetail" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="noDetail" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="errWindow">
    <table width="100%">
        <tr>
            <td width="1%"></td>
            <td>
                <span style="font-size: medium; font-weight: 500;">Data Hasil Input Tidak Valid</span>
                <span style="font-size: medium; font-weight: 500;"><label id="errMsg"></label></span>
            </td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="ok" class="delete k-button">Perbaiki</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="delWindow">
    <table width="100%" style="text-align:center">
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data Tidak Dapat Dihapus! Penyebab :</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data detail masih ada, atau</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Invoice dengan No SI ini masih ada.</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="okDel" class="delete k-button">Periksa</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="konfirmasiLeaveGrid" title="Konfirmasi">
    <table width="100%">
        <tr>
            <td width="2%"></td>
            <td><span style="font-size: large ; font-weight: 700;">Data Grid Belum Disimpan! Simpan Data ?</span></td>
            <td width="2%"></td>
        </tr>
        <tr>
            <td></td>
            <td align="center">
                <button id="yesLeaveGrid" class="k-button">Ya</button>
                <button id="noLeaveGrid" class="k-button">Tidak</button>
            </td>
            <td></td>
        </tr>
    </table>
</div>
<style>
    .belumDisetujui {
        background-color: lightcoral;
    }
    .sudahDisetujui {
        background-color: lightgreen;
    }
</style>
<script>
    var wndLeaveGrid, wnd, wndDetail, prt, err, del;
var _NomorInputView;
var model;
var headerBaru, detailBaru;
var rowNumber = 0;
var menuId = '21BA273F-C5B0-407A-B1CE-ACDF9ED6B1C8';
var ruangRapatPTPNVIIIId, bulan, tahun;
var usrName = "@HttpContext.Current.User.Identity.Name";

function resetRowNumber(e) {
    rowNumber = 0;
        var rows = e.sender.tbody.children();
    for (var j = 0; j < rows.length; j++) {
        var row = $(rows[j]);
        var dataItem = e.sender.dataItem(row);

        if (dataItem.get("Verifikasi") == "Disetujui") {
	    row.addClass("sudahDisetujui");
        }
        else {
            row.addClass("belumDisetujui");
        }
    }
}

function renderNumber(data) {
    var no = ++rowNumber;
    data.NoBaris = no;
    return no;
}

$('.k-window.titlebar').css('style', 'display: none');
$(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add");

$(document).ajaxStart(function () {
    $("#_header").addClass('disabledbutton');
    $("#_detail").addClass('disabledbutton');
    $("#_footer").addClass('disabledbutton');
    $("#progress").show();
}).ajaxStop(function () {
    $("#progress").hide();
    $("#_header").removeClass('disabledbutton');
    $("#_detail").removeClass('disabledbutton');
    $("#_footer").removeClass('disabledbutton');
});

$(document).ready(function () {
    wnd = $("#modalWindow").kendoWindow({
        title: "Konfirmasi",
        modal: true,
        visible: false,
        resizable: false,
        width: 300
    }).data("kendoWindow");

    wndDetail = $("#konfirmasiDetail").kendoWindow({
        title: "Konfirmasi",
        modal: true,
        visible: false,
        resizable: false,
        width: 300
    }).data("kendoWindow");

    err = $("#errWindow").kendoWindow({
        title: "Error Data",
        modal: true,
        visible: false,
        resizable: false,
        width: 300
    }).data("kendoWindow");

    del = $("#delWindow").kendoWindow({
        title: "Hapus Header",
        modal: true,
        visible: false,
        resizable: false,
        width: 400,
        height: 150
    }).data("kendoWindow");

    wndLeaveGrid = $("#konfirmasiLeaveGrid").kendoWindow({
        title: "Konfirmasi",
        modal: true,
        visible: false,
        resizable: false,
        width: 400,
        height: 150
    }).data("kendoWindow");

    gridStatus = 'belum-ngapa-ngapain';
    $("#grdDetail").kendoValidator({
        rules: { // custom rules
            chopvalidation: function (input) {
                if (input.attr("name") == "JumlahPeserta" && input.val() != "") {
                    cekNamaBagian(input.val()).done(function (data) {
                        if (data.length > 0) {
                            var grid = $('#grdDetail').data('kendoGrid');
                            var dataItem = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);
                            dataItem.BagianId = data[0][0];
                            $('#BagianId').val(data[0][0]);
                            grid.refresh();
                        }
                    });
                } 
                else if (input.attr("name") == "NamaKegiatan" && input.val() != "") {
                    input.attr("data-chopvalidation-msg", "Ruangan Sudah Terisi!")
                    cekKetersediaanRuangan(input).done(function (r) {
                        if (r.length == 0) {
                            return true;
                        } else {
                            for (var i = 0; i < r.length; i++) {
                                if (r[i][0] != ruangRapatPTPNVIIIId) {
                                    $('#errMsg').text('Ruangan sudah terisi, harap cari ruangan atau waktu lain!');
                                    openErrWindow();
                                    var grid = $('#grdDetail').data('kendoGrid');
                                    var dataItem = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);
                                    dataItem.NamaKegiatan = '';
                                    dataItem.JumlahPeserta = 0;
                                    dataItem.DihadiriOleh = '';
                                    dataItem.FasilitasRapat = '';
                                    dataItem.RuangRapatPTPNVIIIId = null;
                                    dataItem.TanggalMulai = '00/00/0000';
                                    dataItem.TanggalSelesai = '00/00/0000';
                                }
                            }
                            return true;
                        }
                    })
                        .fail(function (x) {
                            return false;
                        });
                }
                else {
                    return true;
                };
            }
        }
    });
});

$(window).on("beforeunload", function () {
    return "Please don't leave me!";
});

$(window).on("unload", function () {
    hapusPenggunaPortalYangAktif();
});


angular.module("__header", ["kendo.directives"])
    .controller("MyCtrl", function ($scope) {
        $scope.validate = function (event) {
            event.preventDefault();
            if ($scope.validator.validate()) {
                tahun = $('#Tahun').val();
                bulan = $('#Bulan').data('kendoDropDownList').value();
                $(".k-button-icontext").removeClass("k-state-disabled").addClass("k-grid-add");
                $('#grdDetail').removeClass('disabledbutton');
                $("#grdDetail").data("kendoGrid").dataSource.read({
                    id: $('#RuangRapatPTPNVIII').val()
                });
            } else {
                $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add"); // edited
                gridDestroy();
            }
        }
    });


function hapusPenggunaPortalYangAktif() {
    var url = '/Account/HapusPenggunaPortalYangAktif';
    return $.ajax({
        url: url,
        data: {
            _menuId: menuId
        },
        type: 'POST',
        datatype: 'json'
    });
}

function cekKetersediaanRuangan(cekKamar) {
    var grid = $('#grdDetail').data('kendoGrid');
    var dataItem = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);
    var tanggalMasukCek = dataItem.TanggalMulai;
    var tanggalKeluarCek = dataItem.TanggalSelesai;
    var jenisRuangRapat = dataItem.JenisRuangRapat;
    var dateStringMasuk = new Date();
    dateStringMasuk = tanggalMasukCek.getFullYear() + "-" + (tanggalMasukCek.getMonth() + 1) + "-" + (tanggalMasukCek.getDate()) + " " + (tanggalMasukCek.getHours()) + ":" + (tanggalMasukCek.getMinutes());
    var dateStringKeluar = new Date();
    dateStringKeluar = tanggalKeluarCek.getFullYear() + "-" + (tanggalKeluarCek.getMonth() + 1) + "-" + (tanggalKeluarCek.getDate())  + " " + (tanggalKeluarCek.getHours()) + ":" + (tanggalKeluarCek.getMinutes());
    var url = '/Input/ExecSQL';
    return $.ajax({
        url: url,
        data: {
            scriptSQL: "select JenisRuangRapat from [SPDK_KanpusEF].[dbo].[RuangRapat]" +
                " where JenisRuangRapat='" + jenisRuangRapat + "' and TanggalSelesai >='" + dateStringMasuk + "' and TanggalMulai <='" + dateStringKeluar+"' and Verifikasi != 'Ditolak'",
            _menuId: menuId
        },
        type: 'GET',
        datatype: 'json'
    });
}

function disableHeader() {
    $("._key").find('span').addClass('disabledbutton');
    $("._key").addClass('disabledbutton');
    $("._nonkey").find('span').addClass('disabledbutton');
    $("._nonkey").addClass('disabledbutton');
    $('#btnSubmitHeader').addClass('disabledbutton');
    $('#grdDetail').addClass('disabledbutton');
}

function enableHeader() {
    $("._key").find('span').removeClass('disabledbutton');
    $("._key").removeClass('disabledbutton');
    $("._nonkey").find('span').removeClass('disabledbutton');
    $("._nonkey").removeClass('disabledbutton');
    $('#btnSubmitHeader').removeClass('disabledbutton');
}


function openWindow(e) {
    e.preventDefault();
    var grid = this;
    var row = $(e.currentTarget).closest("tr");
    wndDetail.open().center();
    $("#yesDetail").click(function () {
        wndDetail.close();
        $('#grdDetail').data('kendoGrid').removeRow(row);
        gridStatus = 'sudah-diapa-apain';
    });
    $("#noDetail").click(function () {
        wndDetail.close();
    });
}

function openWindowLeaveGrid(e) {
    e.preventDefault();
    wndLeaveGrid.open().center();
    $("#yesLeaveGrid").click(function () {
        wndLeaveGrid.close();
        sendData();
    });
    $("#noLeaveGrid").click(function () {
        gridStatus = 'belum-ngapa-ngapain';
        wndLeaveGrid.close();
    });
}

function openErrWindow(e) {
    err.open().center();
    $("#ok").click(function () {
        err.close();
    });
}

function openDelWindow(e) {
    del.open().center();
    $("#okDel").click(function () {
        del.close();
    });
}

function openDelDetailWindow(e) {
    del.open().center();
    $("#okDel").click(function () {
        del.close();
    });
}

function filterGridUpdate(e) {
    var mdl = e.models;
    var arr = [];
    for (var i = 0; i < mdl.length; i++) {
        arr.push(JSON.stringify(mdl[i]));
    }
    return {
        _model: arr,
        _menuId: menuId
    };
}

function filterGridDestroy(e) {
    return {
        _model: JSON.stringify(e),
        _menuId: menuId
    };
}

function gridDestroy() {
    $("#grdDetail").data("kendoGrid").dataSource.read([]);
}

/* Grid Buyer */

function grdOnChange(e) {
}

function grdOnEdit(e) {
    var model = e.model;
    this.expandRow(this.tbody.find("tr[data-uid='" + model.uid + "']"));
    if (model.isNew()) {
        model.RuangRapatPTPNVIIIId = model.uid;
    }
    ruangRapatPTPNVIIIId = model.RuangRapatPTPNVIIIId;
    gridStatus = 'sudah-diapa-apain';
    $(e.container).find("input[name='Catatan']").prop('disabled', true);
    $(e.container).find("input[name='Verifikasi']").prop('disabled', true);
}

function grdOnDataBinding(e) {
}

function filterdetailRead() {
    return {
        _menuId: menuId, // teh
        _filter: ["Year(TanggalMulai)", "" + tahun + "", "Month(TanggalMulai)", "" + bulan + ""]
    };
}

function filterdetailCreate(e) {
    return { _menuId: menuId };
}

function sendData() {
    var grid = $("#grdDetail").data("kendoGrid"),
        parameterMap = grid.dataSource.transport.parameterMap;

    //get the new and the updated records
    var currentData = grid.dataSource.data();

    var updatedRecords = [];
    var newRecords = [];
    var spupdated = [];
    var spnew = [];

    for (var i = 0; i < currentData.length; i++) {
        if (currentData[i].isNew()) {
            newRecords.push(JSON.stringify(currentData[i]));
        } else if (currentData[i].dirty) {
            updatedRecords.push(JSON.stringify(currentData[i]));
        }
    }

    //this records are deleted
    var deletedRecords = [];
    var spdeleted = [];
    for (var i = 0; i < grid.dataSource._destroyed.length; i++) {
        deletedRecords.push(JSON.stringify(grid.dataSource._destroyed[i]));
    }

    var data = {};
    $.extend(data,
        parameterMap({ updated: updatedRecords }),
        parameterMap({ deleted: deletedRecords }),
        parameterMap({ new: newRecords }),
        parameterMap({ spupdated: spupdated }),
        parameterMap({ spdeleted: spdeleted }),
        parameterMap({ spnew: spnew }),
        parameterMap({ mnid: menuId })
        );

    _sendData(data).done(function (msg) {
        if (msg == "Success") {
            grid.dataSource.read([]);
            //disableHeader();
            gridStatus = 'belum-ngapa-ngapain';
        }
        else {
            $('#errMsg').text(msg);
            gridStatus = 'sudah-nyoba-disimpan-tapi-model-masih-salah';
            openErrWindow();
        }
    }).fail(function (x) {
        $('#errMsg').text(msg);
        openErrWindow();
        grid.dataSource.read([]);
        //disableHeader();
        gridStatus = 'sudah-nyoba-disimpan-tapi-gagal';
    });

}

function _sendData(data) {
    return $.ajax({
        url: "/Input/UpdateCreateDelete",
        data: data,
        type: "POST"
    })
}

function ddlRuangRapatOnChange(e) {
    var jenisRuangRapat = $('#JenisRuangRapat').val();
    var grid = $('#grdDetail').data('kendoGrid');
    var dataItem = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);
    var row = grid.tbody.find("tr[data-uid='" + dataItem.uid + "']");
    var data = grid.dataItem(row);
}

function ddlVerifikasiRuangRapatOnChange(e) {
    var verifikasi = $('#Verifikasi').val();
    var grid = $('#grdDetail').data('kendoGrid');
    var dataItem = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);
    var row = grid.tbody.find("tr[data-uid='" + dataItem.uid + "']");
    var data = grid.dataItem(row);
}

function cekNamaBagian(namaBagian) {
    var url = '/Input/ExecSQL';
    return $.ajax({
        url: url,
        data: {
            scriptSQL: "select BagianId, Nama from [ReferensiEF].[dbo].[Bagian]" +
                " where bagianId=(select posisilokasikerjaid from [Identity].[dbo].[AspNetUsers] where UserName ='" + usrName + "' )",
            _menuId: menuId
        },
        type: 'GET',
        datatype: 'json'
    });
}

function handleClickPermintaanSnack(cb) {
        var grid = $('#grdDetail').data('kendoGrid');
        var model = grid.dataItem($(cb).closest("tr"));
        //var model = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);

        if (cb.checked) {
            model.PermintaanSnack = true;
        }
        else {
            model.PermintaanSnack = false;
        }
            
        model.dirty = true;
    }

function handleClickPermintaanSnackSore(cb) {
        var grid = $('#grdDetail').data('kendoGrid');
        var model = grid.dataItem($(cb).closest("tr"));
        //var model = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);

        if (cb.checked) {
            model.PermintaanSnackSore = true;
        }
        else {
            model.PermintaanSnackSore = false;
        }
            
        model.dirty = true;
    }

function handleClickPermintaanMakan(cb) {
        var grid = $('#grdDetail').data('kendoGrid');
        var model = grid.dataItem($(cb).closest("tr"));
        //var model = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);

        if (cb.checked) {
            model.PermintaanMakan = true;
        }
        else {
            model.PermintaanMakan = false;
        }
            
        model.dirty = true;
    }

function handleClickPermintaanMakanSiang(cb) {
        var grid = $('#grdDetail').data('kendoGrid');
        var model = grid.dataItem($(cb).closest("tr"));
        //var model = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);

        if (cb.checked) {
            model.PermintaanMakanSiang = true;
        }
        else {
            model.PermintaanMakanSiang = false;
        }
            
        model.dirty = true;
    }

function handleClickPermintaanMakanMalam(cb) {
        var grid = $('#grdDetail').data('kendoGrid');
        var model = grid.dataItem($(cb).closest("tr"));
        //var model = typeof (grid.dataSource.get(ruangRapatPTPNVIIIId)) == "undefined" ? grid.dataSource.getByUid(ruangRapatPTPNVIIIId) : grid.dataSource.get(ruangRapatPTPNVIIIId);

        if (cb.checked) {
            model.PermintaanMakanMalam = true;
        }
        else {
            model.PermintaanMakanMalam = false;
        }
            
        model.dirty = true;
    }
</script>







