@**@

<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<img id="progress" src="~/Content/Images/ajax-loader.gif" style="position: absolute; left: 50%; top: 50%; " />
@(
            // All deferred initialization statements will be rendered here
            Html.TelerikReporting().DeferredScripts()
)

@*/****** Script for SelectTopNRows command from SSMS  ******/
SELECT b.pengirim as Pengirim,b.perihal as Perihal,b.tgl_terima as TanggalTerimaSurat,a.TanggalDikirimKeDireksi,c.NamaUnit as TujuanBOM,
[SPDK_KanpusEF].[dbo].[func_ConcatCCTujuan](A.CCTujuanId_SuratDinasMasuk) as CCTujuanBOM,D.TanggalDidisposisiOlehDireksi,'' as PetugasAgenda,E.Tanggal_MemoDinas as TanggalDikirimKeBagian,
D.IsiDisposisi_SuratDinasMasuk,D.PenjelasanDisposisi_SuratDinasMasuk,F.NamaUnit as TujuanDisposisi,[SPDK_KanpusEF].[dbo].[func_ConcatCCTujuan](E.CCTujuanId_MemoDinas) as CCTujuanDisposisi
FROM [SPDK_KanpusEF].[dbo].[eOffice_SuratDinasMasuk] as A join
[Sekper].[dbo].[agenda_surat_masuk] as B on a.TahunAgenda=b.thn_agenda and a.NoAgenda=b.no_agenda join
[ReferensiEF].dbo.Unit as C on A.TujuanId_SuratDinasMasuk=C.OrgId join
[SPDK_KanpusEF].[dbo].[eOffice_DisposisiSuratDinasMasuk] as D on A.SuratDinasMasukId=D.SuratDinasMasukId join
[SPDK_KanpusEF].[dbo].[eOffice_Kirim_MemoDinas] as E on A.SuratDinasMasukId=E.SuratDinasMasukId join
[ReferensiEF].dbo.Unit as F on E.TujuanId_MemoDinas=F.OrgId
order by b.tgl_terima desc*@

@*header*@
<div id="_header" style="font-size:10px;" ng-app="__header">
    <div class="k-content" ng-controller="MyCtrl">
        <form kendo-validator="validator" ng-submit="validate($event)">
            <table width="100%" class="hdr">
                <tr>
                    <td>
                        <div style="text-align:center">@ViewBag.Title</div>
                    </td>
                </tr>
            </table>
            <div class="">
                <table width="40%">
                    <tr>
                        <td width="3%">
                            <label>Tahun:</label>
                        </td>
                        <td width="20%">
                            @(Html.Kendo().NumericTextBox().Name("Tahun").Min(2017).Format("D4").Value(DateTime.Now.Year)
                                                .HtmlAttributes(new { style = "width:25%", @class = "allcaps" })
                            )
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label style="text-align:left">Bulan:</label>
                        </td>
                        <td>
                            @(Html.Kendo().DropDownList().Name("ddlBulan").DataTextField("Text").DataValueField("Value")
                                                //.Events(ev => ev.Select("ddlBulanOnSelect"))
                                                //.HtmlAttributes(new { style = "font-size: medium;" })
                                                .SelectedIndex(DateTime.Now.Month - 1)
                                                .BindTo(new List<SelectListItem>()
                                                {
                                                                            new SelectListItem() {
                                                                                Text = "Januari",
                                                                                Value = "1"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Februari",
                                                                                Value = "2"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Maret",
                                                                                Value = "3"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "April",
                                                                                Value = "4"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Mei",
                                                                                Value = "5"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Juni",
                                                                                Value = "6"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Juli",
                                                                                Value = "7"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Agustus",
                                                                                Value = "8"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "September",
                                                                                Value = "9"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Oktober",
                                                                                Value = "10"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "November",
                                                                                Value = "11"
                                                                            },
                                                                            new SelectListItem() {
                                                                                Text = "Desember",
                                                                                Value = "12"
                                                                            }
                                            })
                            )
                        </td>
                    </tr>
                </table>
                <table width="50%;" align="center" style="margin-bottom: 5px;">
                    <tr>
                        <td width="100%" align="center">
                            <div class="confirm">
                                <button id="btnSubmitHeader" class="submit k-button" type="submit">Proses</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>
@*detail*@
<div id="_detail" class="_detail">
    @(Html.Kendo().Grid<Ptpn8.Models.MemoOnline.ViewMonitoring_MemoDinas>
            (Guid.Empty.ToString())
            .Name("grdDetail")
            .Columns(g =>
            {
                g.Bound(i => i.Monitoring_MemoDinasId).Width(50).Hidden();
                g.Bound(i => i.SuratDinasMasukId).Width(50).Hidden();
                g.Group(i =>
                {
                    i.Title("Aplikasi OA");
                    i.Columns(c =>
                    {
                        c.Bound(j => j.No_OA).Title("Nomor OA").Width(100);
                        c.Bound(j => j.No_Surat).Title("Nomor Surat").Width(150);
                        c.Bound(j => j.Pengirim).Title("Pengirim").Width(180);
                        c.Bound(j => j.Perihal).Title("Perihal").Width(250);
                        c.Bound(j => j.TanggalTerimaSurat).Title("Tanggal Terima Surat").Width(180);
                    });
                });
                g.Group(i =>
                {
                    i.Title("Aplikasi Portal Kirim Surat Ke Direksi");
                    i.Columns(c =>
                    {
                        c.Bound(j => j.TanggalDikirimKeDireksi).Title("Tanggal Dikirim Ke Direksi").Width(180);
                        c.Bound(j => j.TujuanBOM).Title("Tujuan BOM").Width(100);
                        c.Bound(j => j.CCTujuanBOM).Title("CC Tujuan BOM").Width(150);
                        c.Bound(j => j.Sekdir_TanggalDiterima).Title("Tanggal Sekdir Terima").Width(180);
                        c.Bound(j => j.Sekdir_Penerima).Title("Sekdir Penerima").Width(150);
                    });
                });
                g.Group(i =>
                {
                    i.Title("Aplikasi Portal Disposisi Direksi");
                    i.Columns(c =>
                    {
                        c.Bound(j => j.TanggalDidisposisiOlehDireksi).Title("Tanggal Didisposisi Oleh Direksi").Width(180);
                        c.Bound(j => j.IsiDisposisi_SuratDinasMasuk).Title("Isi Disposisi").Width(200);
                        c.Bound(j => j.PenjelasanDisposisi_SuratDinasMasuk).Title("Penjelasan Disposisi").Width(200);
                        c.Bound(j => j.Sekdir_TanggalDiagendakan).Title("Tanggal Diagendakan Sekdir").Width(180);
                        c.Bound(j => j.Sekdir_Agendaris).Title("Sekdir Agendaris").Width(150);
                    });
                });
                g.Group(i =>
                {
                    i.Title("Aplikasi Portal Distribusi Surat Dinas");
                    i.Columns(c =>
                    {
                        c.Bound(j => j.TanggalDikirimKeBagian).Title("Tanggal Dikirim Ke Bagian").Width(180);
                        c.Bound(j => j.TujuanDisposisi).Title("Tujuan Disposisi").Width(120);
                        c.Bound(j => j.CCTujuanDisposisi).Title("CC Tujuan Disposisi").Width(200);
                    });
                });
            })
    .ToolBar(toolbar =>
    {
        toolbar.Template("<a class='k-button' style='background-color: green; color: white; font-size:small;' onclick='sendData()' href='#'></span><span class='k-font-icon k-i-restore'></span>Simpan</a>");
        toolbar.Excel();
    })
    .AutoBind(false)
    .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
    .Navigatable()
    .Resizable(resizeable => resizeable.Columns(true))
    .Scrollable()
    .Excel(excel => excel.AllPages(true))
    .Sortable()
    .Groupable()
    .Filterable()
    .HtmlAttributes(new { style = "Height: 450px" })
    .Events(e =>
    {
        e.Change("grdOnChange");
        e.Edit("grdOnEdit");

    })
    .DataSource(o => o
    .Ajax()
    .ServerOperation(false)
    .Sort(s => s.Add(x => x.TanggalTerimaSurat).Descending())
    .Batch(true)
    .Model(model =>
    {
        model.Id(p => p.Monitoring_MemoDinasId);
        model.Field(f => f.Pengirim).Editable(false);
        model.Field(f => f.Perihal).Editable(false);
        model.Field(f => f.TanggalTerimaSurat).Editable(false);
        model.Field(f => f.TanggalDikirimKeDireksi).Editable(false);
        model.Field(f => f.TanggalDidisposisiOlehDireksi).Editable(false);
        model.Field(f => f.TujuanBOM).Editable(false);
        model.Field(f => f.CCTujuanBOM).Editable(false);
        model.Field(f => f.IsiDisposisi_SuratDinasMasuk).Editable(false);
        model.Field(f => f.PenjelasanDisposisi_SuratDinasMasuk).Editable(false);
        model.Field(f => f.TanggalDikirimKeBagian).Editable(false);
        model.Field(f => f.TujuanDisposisi).Editable(false);
        model.Field(f => f.CCTujuanDisposisi).Editable(false);
    })
    .Read(read => read.Action("detailRead", "Input").Data("filterdetailRead").Type(HttpVerbs.Post))
    .Create(create => create.Action("detailCreate", "Input").Data("filterdetailCreate").Type(HttpVerbs.Post))
    .Update(update => update.Action("detailUpdate", "Input").Data("filterGridUpdate").Type(HttpVerbs.Post))
    .Destroy(destroy => destroy.Action("detailDestroy", "Input").Data("filterGridDestroy").Type(HttpVerbs.Post))
    )
    )
</div>
<div id="modalWindow" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yes" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="no" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="konfirmasiDetail" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yesDetail" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="noDetail" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>
<div id="errWindow">
    <table width="100%">
        <tr>
            <td width="1%"></td>
            <td>
                <span style="font-size: medium; font-weight: 500;">Data Hasil Input Tidak Valid</span>
                <span style="font-size: medium; font-weight: 500;"><label id="errMsg"></label></span>
            </td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="ok" class="delete k-button">Perbaiki</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="delWindow">
    <table width="100%" style="text-align:center">
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data Tidak Dapat Dihapus! Penyebab :</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Data detail masih ada, atau</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td width="1%"></td>
            <td><span style="font-size: medium; font-weight: 500;">Invoice dengan No SI ini masih ada.</span></td>
            <td width="1%"></td>
        </tr>
        <tr>
            <td></td>
            <td><button id="okDel" class="delete k-button">Periksa</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="konfirmasiLeaveGrid" title="Konfirmasi">
    <table width="100%">
        <tr>
            <td width="2%"></td>
            <td><span style="font-size: large ; font-weight: 700;">Data Grid Belum Disimpan! Simpan Data ?</span></td>
            <td width="2%"></td>
        </tr>
        <tr>
            <td></td>
            <td align="center">
                <button id="yesLeaveGrid" class="k-button">Ya</button>
                <button id="noLeaveGrid" class="k-button">Tidak</button>
            </td>
            <td></td>
        </tr>
    </table>
</div>
<style>
    .belumDisetujui {
        background-color: lightcoral;
    }

    .sudahDisetujui {
        background-color: lightgreen;
    }
</style>
<script>
var wndLeaveGrid, wnd, wndDetail, prt, err, del;
var _NomorInputView;
var model;
var headerBaru, detailBaru;
var rowNumber = 0;
var menuId = 'FD7ACC43-F04E-48F4-96B9-25E8A1AB3096';
var monitoring_MemoDinasId, tahun,bulan, unitId;
var usrName = "@HttpContext.Current.User.Identity.Name";

function renderNumber(data) {
    var no = ++rowNumber;
    data.NoBaris = no;
    return no;
}

$('.k-window.titlebar').css('style', 'display: none');
$(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add");

$(document).ajaxStart(function () {
    $("#_header").addClass('disabledbutton');
    $("#_detail").addClass('disabledbutton');
    $("#_footer").addClass('disabledbutton');
    $("#progress").show();
}).ajaxStop(function () {
    $("#progress").hide();
    $("#_header").removeClass('disabledbutton');
    $("#_detail").removeClass('disabledbutton');
    $("#_footer").removeClass('disabledbutton');
});

$(document).ready(function () {
    wnd = $("#modalWindow").kendoWindow({
        title: "Konfirmasi",
        modal: true,
        visible: false,
        resizable: false,
        width: 300
    }).data("kendoWindow");

    wndDetail = $("#konfirmasiDetail").kendoWindow({
        title: "Konfirmasi",
        modal: true,
        visible: false,
        resizable: false,
        width: 300
    }).data("kendoWindow");

    err = $("#errWindow").kendoWindow({
        title: "Error Data",
        modal: true,
        visible: false,
        resizable: false,
        width: 300
    }).data("kendoWindow");

    del = $("#delWindow").kendoWindow({
        title: "Hapus Header",
        modal: true,
        visible: false,
        resizable: false,
        width: 400,
        height: 150
    }).data("kendoWindow");

    wndLeaveGrid = $("#konfirmasiLeaveGrid").kendoWindow({
        title: "Konfirmasi",
        modal: true,
        visible: false,
        resizable: false,
        width: 400,
        height: 150
    }).data("kendoWindow");

    //gridStatus = 'belum-ngapa-ngapain';
    
});

$(window).on("beforeunload", function () {
    return "Please don't leave me!";
});

$(window).on("unload", function () {
    hapusPenggunaPortalYangAktif();
});


angular.module("__header", ["kendo.directives"])
    .controller("MyCtrl", function ($scope) {
        $scope.validate = function (event) {
            event.preventDefault();
            if ($scope.validator.validate()) {
                tahun = $('#Tahun').val();
                bulan = $('#ddlBulan').data('kendoDropDownList').value();
                $(".k-button-icontext").removeClass("k-state-disabled").addClass("k-grid-add");
                $('#grdDetail').data('kendoGrid').dataSource.read();
                $('#grdDetail').removeClass('disabledbutton');
                    InsertGridFrom().done(function (data) {
                        $("#grdDetail").data("kendoGrid").dataSource.read();
                    }).fail(function (x) {
                        alert('Error! Hubungi Bagian TI');
                    });

            } else {
                $(".k-button-icontext").addClass("k-state-disabled").removeClass("k-grid-add"); // edited
                gridDestroy();
            }
        }
    });


function hapusPenggunaPortalYangAktif() {
    var url = '/Account/HapusPenggunaPortalYangAktif';
    return $.ajax({
        url: url,
        data: {
            _menuId: menuId
        },
        type: 'POST',
        datatype: 'json'
    });
}

function InsertGridFrom() {
    var grd = $('#grdDetail').data('kendoGrid');
    var url = '/Input/GetDataFrom';

    return $.ajax({
        url: url,
        //contentType: 'application/json; charset=utf-8',
        data: {
            strClassView: "Ptpn8.Models.MemoOnline.ViewMonitoring_MemoDinas",
            scriptSQL: "INSERT INTO [SPDK_KanpusEF].[dbo].[eOffice_Monitoring_MemoDinas] " +
                       " SELECT NEWID() as Monitoring_MemoDinasId, b.pengirim as Pengirim,b.perihal as Perihal,b.tgl_terima as TanggalTerimaSurat,a.TanggalDikirimKeDireksi,c.NamaUnit as TujuanBOM, "+
                       " [SPDK_KanpusEF].[dbo].[func_ConcatCCTujuan](A.CCTujuanId_SuratDinasMasuk) as CCTujuanBOM,'' as SekdirPenerima, D.TanggalDidisposisiOlehDireksi, D.IsiDisposisi_SuratDinasMasuk,D.PenjelasanDisposisi_SuratDinasMasuk,'' as Sekdir_Agendaris,E.Tanggal_MemoDinas as TanggalDikirimKeBagian, "+
                       " F.NamaUnit as TujuanDisposisi,[SPDK_KanpusEF].[dbo].[func_ConcatCCTujuan](E.CCTujuanId_MemoDinas) as CCTujuanDisposisi, a.SuratDinasMasukId, b.no_agenda as No_OA, b.no_surat as No_Surat,GETDATE(),GETDATE()  "+
                       " FROM [SPDK_KanpusEF].[dbo].[eOffice_SuratDinasMasuk] as A right join "+ 
                       " [Sekper].[dbo].[agenda_surat_masuk] as B on a.TahunAgenda=b.thn_agenda and a.NoAgenda=b.no_agenda left join "+                  
                       " [SPDK_KanpusEF].[dbo].[eOffice_DisposisiSuratDinasMasuk] as D on A.SuratDinasMasukId=D.SuratDinasMasukId left join "+
                       " [SPDK_KanpusEF].[dbo].[eOffice_Kirim_MemoDinas] as E on A.SuratDinasMasukId=E.SuratDinasMasukId and E.UnitId in ('6BC79ED3-8E61-4B07-89E0-27551B4DDF10','203BB8F7-5983-4C65-936F-9C3D83486428','C7A94AC2-6148-400D-9235-A5DE1837A55F') and E.Perihal_MemoDinas like 'Pengantar Surat Dinas%' left join "+
                       " [ReferensiEF].dbo.Unit as C on A.TujuanId_SuratDinasMasuk=C.OrgId left join "+
                       " [ReferensiEF].dbo.Unit as F on E.TujuanId_MemoDinas=F.OrgId "+
                       " where YEAR(b.tgl_terima) ="+tahun+" and MONTH(b.tgl_terima)="+bulan+" "+					   
					   " and a.suratdinasmasukid not in (select suratdinasmasukid from [SPDK_KanpusEF].[dbo].[eOffice_Monitoring_MemoDinas]) "+
					   " order by b.tgl_terima desc",                    
            _menuId: menuId
        },
        type: 'POST',
        datatype: 'json'
    });
}

function disableHeader() {
    $("._key").find('span').addClass('disabledbutton');
    $("._key").addClass('disabledbutton');
    $("._nonkey").find('span').addClass('disabledbutton');
    $("._nonkey").addClass('disabledbutton');
    $('#btnSubmitHeader').addClass('disabledbutton');
    $('#grdDetail').addClass('disabledbutton');
}

function enableHeader() {
    $("._key").find('span').removeClass('disabledbutton');
    $("._key").removeClass('disabledbutton');
    $("._nonkey").find('span').removeClass('disabledbutton');
    $("._nonkey").removeClass('disabledbutton');
    $('#btnSubmitHeader').removeClass('disabledbutton');
}


function openWindow(e) {
    e.preventDefault();
    var grid = this;
    var row = $(e.currentTarget).closest("tr");
    wndDetail.open().center();
    $("#yesDetail").click(function () {
        wndDetail.close();
        $('#grdDetail').data('kendoGrid').removeRow(row);
        gridStatus = 'sudah-diapa-apain';
    });
    $("#noDetail").click(function () {
        wndDetail.close();
    });
}

function openWindowLeaveGrid(e) {
    e.preventDefault();
    wndLeaveGrid.open().center();
    $("#yesLeaveGrid").click(function () {
        wndLeaveGrid.close();
        sendData();
    });
    $("#noLeaveGrid").click(function () {
        gridStatus = 'belum-ngapa-ngapain';
        wndLeaveGrid.close();
    });
}

function openErrWindow(e) {
    err.open().center();
    $("#ok").click(function () {
        err.close();
    });
}

function openDelWindow(e) {
    del.open().center();
    $("#okDel").click(function () {
        del.close();
    });
}

function openDelDetailWindow(e) {
    del.open().center();
    $("#okDel").click(function () {
        del.close();
    });
}

function filterGridUpdate(e) {
    var mdl = e.models;
    var arr = [];
    for (var i = 0; i < mdl.length; i++) {
        arr.push(JSON.stringify(mdl[i]));
    }
    return {
        _model: arr,
        _menuId: menuId
    };
}

function filterGridDestroy(e) {
    return {
        _model: JSON.stringify(e),
        _menuId: menuId
    };
}

function gridDestroy() {
    $("#grdDetail").data("kendoGrid").dataSource.read([]);
}

/* Grid Buyer */

function grdOnChange(e) {
}

function grdOnEdit(e) {
    var model = e.model;
    this.expandRow(this.tbody.find("tr[data-uid='" + model.uid + "']"));
    if (model.isNew()) {
        model.Monitoring_MemoDinasId = model.uid;
    }
    monitoring_MemoDinasId = model.Monitoring_MemoDinasId;
    gridStatus = 'sudah-diapa-apain';
    //$(e.container).find("input[name='Catatan']").prop('disabled', true);
    //$(e.container).find("input[name='Verifikasi']").prop('disabled', true);
}

function grdOnDataBinding(e) {
}

function filterdetailRead() {
    return {
        _menuId: menuId, // teh
        _filter: ['YEAR(TanggalTerimaSurat)', tahun, 'MONTH(TanggalTerimaSurat)', bulan]
    };
}

function filterdetailCreate(e) {
    return { _menuId: menuId };
}

function ddlSekdirOnChange(e) {
        var Sekdir_Penerima = $('#Sekdir_Penerima').val();
        var grid = $('#grdDetail').data('kendoGrid');
        var dataItem = typeof (grid.dataSource.get(monitoring_MemoDinasId)) == "undefined" ? grid.dataSource.getByUid(monitoring_MemoDinasId) : grid.dataSource.get(monitoring_MemoDinasId);
        var row = grid.tbody.find("tr[data-uid='" + dataItem.uid + "']");
        var data = grid.dataItem(row);
    }

function sendData() {
    var grid = $("#grdDetail").data("kendoGrid"),
        parameterMap = grid.dataSource.transport.parameterMap;

    //get the new and the updated records
    var currentData = grid.dataSource.data();

    var updatedRecords = [];
    var newRecords = [];
    var spupdated = [];
    var spnew = [];

    for (var i = 0; i < currentData.length; i++) {
        if (currentData[i].isNew()) {
            newRecords.push(JSON.stringify(currentData[i]));
        } else if (currentData[i].dirty) {
            updatedRecords.push(JSON.stringify(currentData[i]));
            //spupdated.push("Update [SPDK_KanpusEF].[dbo].[KPI_InisiasiKPI] set Dikirim=1 Where Tahun=" + $('#Tahun').val() + " and Bulan =" + $('#ddlBulan').data('kendoDropDownList').value());
        }
    }

    //this records are deleted
    var deletedRecords = [];
    var spdeleted = [];
    for (var i = 0; i < grid.dataSource._destroyed.length; i++) {
        deletedRecords.push(JSON.stringify(grid.dataSource._destroyed[i]));
    }

    var data = {};
    $.extend(data,
        parameterMap({ updated: updatedRecords }),
        parameterMap({ deleted: deletedRecords }),
        parameterMap({ new: newRecords }),
        parameterMap({ spupdated: spupdated }),
        parameterMap({ spdeleted: spdeleted }),
        parameterMap({ spnew: spnew }),
        parameterMap({ mnid: menuId })
        );

    _sendData(data).done(function (msg) {
        if (msg == "Success") {
            grid.dataSource.read([]);
            //disableHeader();
            gridStatus = 'belum-ngapa-ngapain';
        }
        else {
            $('#errMsg').text(msg);
            gridStatus = 'sudah-nyoba-disimpan-tapi-model-masih-salah';
            openErrWindow();
        }
    }).fail(function (x) {
        $('#errMsg').text(msg);
        openErrWindow();
        grid.dataSource.read([]);
        //disableHeader();
        gridStatus = 'sudah-nyoba-disimpan-tapi-gagal';
    });

    }



function _sendData(data) {
    return $.ajax({
        url: "/Input/UpdateCreateDelete",
        data: data,
        type: "POST"
    })
}


    function WarnaKolom(str) {
        if (str != null) {
            if (str == 0)
                return "<div class='breakWord20' style='color: white; background-color: black;'>" + str + "</div>";
            else if (str > 0 && str < 71 )
                return "<div class='breakWord20' style='color: white; background-color: red;'>" + str + "</div>";
            else if (str > 70 && str < 91)
                return "<div class='breakWord20' style='color: white; background-color: orange;'>" + str + "</div>";
            else
                return "<div class='breakWord20' style='color: white; background-color: green;'>" + str + "</div>";
        }
        //else if (str != null && (sts == null || sts == 'Perpanjangan')) {
        //    if (str.indexOf('0') > -1 && (str.indexOf('CRSA') > -1 || str.indexOf('Risalah Rakor') > -1 || str.indexOf('MoU') > -1))
        //        return "<div class='breakWord20' style='color: white; background-color: grey;'>" + str + "</div>";
        //    else if (str.indexOf('0') > -1)
        //        return "<div class='breakWord20' style='color: white; background-color: red;'>" + str + "</div>";
        //    else
        //        return "<div class='breakWord20' style='color: white; background-color: green;'>" + str + "</div>";
        //}
        //else return "<div class='breakWord20' style='color: black'>" + str + "</div>";
    }
</script>







