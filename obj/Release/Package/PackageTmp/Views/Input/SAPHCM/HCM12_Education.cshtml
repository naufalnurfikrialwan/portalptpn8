@model Ptpn8.Models.SAPHCM.View_HCM02_ListEmployee
<script src="~/Scripts/SAPHCM/HCM12_Education.js"></script>

@*header*@

<table width="100%" class="hdr">
    <tr>
        <td>
            <div style="text-align:center">@ViewBag.Title</div>
        </td>
    </tr>
</table>

<div class="_headersawit">
    @(Html.Kendo().TextBoxFor(m => m.PersNo).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.Title).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.KodePosition).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.PersonalArea).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.PersonnelSubArea).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.EmployeeGroup).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.EmployeeSubgroup).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.PayrollArea).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.WorkContract).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.StatusPernikahan).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.TanggalPernikahan).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    @(Html.Kendo().TextBoxFor(m => m.Nationality).HtmlAttributes(new { @readonly = "true", style = "width: 100%; display: none" }))
    <table width="50%;" align="center">
        <tr>
            <td width="100%;">
                <label id="msgInputView" style="text-align:center; color: white; background-color: red; font-size: medium;"></label>
            </td>
        </tr>
    </table>

    <table width="100%;" align="center" style="font-size: small;">
        <tr>
            <td width="5%"><label style="text-align: right; font-size: 12px;">NIK:</label></td>
            <td width="20%">
                @(Html.Kendo().TextBox().Name("CariNIK").HtmlAttributes(new { required = "required", data_required_msg = "Tidak Boloh Kosong", style = "width: 100%; " }))

                <button id="btnSubmitHeader" class="submit k-button" type="button" onclick="btnProsesOnClick()">Proses</button>
            </td>
            <td width="30%" align="left"></td>
        </tr>
        <tr>
            <td><label style="text-align: right; font-size: 12px;">Nama Lengkap:</label></td>
            <td><label id="FullName" style="text-align: left; color: blue;"></label></td>
            <td></td>
        </tr>
        <tr>
            <td><label style="text-align: right; font-size: 12px;">Kota Kelahiran:</label></td>
            <td>
                <label id="TempatLahir" style="text-align: left; color: blue;"></label>
            </td>
            <td></td>
        </tr>
        <tr>
            <td><label style="text-align: right; font-size: 12px;">Negara Kelahiran:</label></td>
            <td>
                <label id="NegaraTempatLahir" style="text-align: left; color: blue;"></label>
            </td>
            <td></td>
        </tr>
        <tr>
            <td><label style="text-align: right; font-size: 12px;">Tanggal Lahir:</label></td>
            <td>
                <label id="TanggalLahir" style="text-align: left; color: blue;"></label>
            </td>
            <td></td>
        </tr>
        <tr>
            <td><label style="text-align: right; font-size: 12px;">Agama:</label></td>
            <td>
                <label id="Agama" style="text-align: left; color: blue;"></label>
            </td>
            <td></td>
        </tr>
        <tr>
            <td></td>
            <td><label style="text-align: left; font-size: 12px; color: red;">Apabila terdapat ketidakcocokan pada data NAMA, TEMPAT TANGGAL LAHIR dan AGAMA, agar segera menghubungi Divisi SDM</label></td>
            <td></td>
        </tr>
        <tr>
            <td></td>
            <td><label style="text-align: left; font-size: 18px; color: darkcyan ;">Lengkapi Isian Di Bawah Ini :</label></td>
            <td></td>
        </tr>
    </table>
</div>

@*detail*@
<div id="_detail" class="_detail">

    @(Html.Kendo().Grid<Ptpn8.Models.SAPHCM.View_HCM12_Education>
    ()
    .Name("grdDetail")
    .Columns(g =>
    {
        g.Command(command => { command.Custom("Delete").Text("Hapus Baris").Click("hapusSatuBaris").HtmlAttributes(new { @class = "k-button k-font-icon k-i-trash", style = "font-size: small; background-color: red; color: white; height: 20px;" }); }).Width(80);
        g.Bound(i => i.IDD).Width(50).Hidden();
        g.Bound(i => i.TanggalEdit).Width(50).Hidden();
        g.Bound(i => i.EmpID).Width(50).Hidden();
        g.Bound(i => i.PersonnelNumber).Width(50).Hidden();
        g.Bound(i => i.TanggalMasuk).Width(120).Title("Tgl Masuk");
        g.Bound(i => i.TanggalLulus).Width(120).Title("Tgl Lulus");
        g.Bound(i => i.JenjangPendidikan).Title("Jenjang Pendidikan").Width(120);
        g.Bound(i => i.InstitusiPendidikanTraining).Width(300).Title("Nama Institusi");
        g.Bound(i => i.Jurusan).Width(150).Title("Jurusan");
        g.Bound(i => i.SertifikatKelulusan).Width(150).Title("Ada Ijasah?");
        g.Bound(i => i.Durasi).Width(50).Title("Lama").Format("{0:N0}");
        g.Bound(i => i.UnitDurasi).Width(50).Title("Satuan (Years)").HtmlAttributes(new { @readonly = "true" });
        g.Bound(i => i.NilaiAkhir).Width(100).Title("Nilai Akhir").Format("{0:0.00}"); ;

    })
    .ToolBar(toolbar =>
    {
        toolbar.Template("<a class='k-button k-grid-add' style='background-color: blue; color: white; font-size:small;' href='#'></span><span class='k-font-icon k-i-plus'></span>Tambah Baris</a>" +
        "<a class='k-button' style='background-color: green; color: white; font-size:small;' onclick='sendData()' href='#'></span><span class='k-font-icon k-i-restore'></span>Simpan</a>" +
        "<a class='k-button' style='background-color: red; color: white; font-size:small;' onclick='hapusSeluruh()' href='#'></span><span class='k-font-icon k-i-trash'></span>Hapus Semua Baris</a>");
    })
    .AutoBind(false)
    .Editable(editable => { editable.Mode(GridEditMode.InCell); editable.DisplayDeleteConfirmation(false); })
    .Navigatable()
    .Resizable(resizeable => resizeable.Columns(true))
    .Scrollable()
    .HtmlAttributes(new { style = "Height: 400px" })
    .Events(e =>
    {
        e.Change("grdOnChange");
        e.Edit("grdOnEdit");
        e.DataBinding("grdOnDataBinding");
    })
    .DataSource(o => o
    .Ajax()
    .ServerOperation(false)
    .Batch(true)
    .Model(model =>
    {
        model.Id(p => p.IDD);
        model.Field(p => p.IDD).DefaultValue(Guid.NewGuid());
        model.Field(p => p.TanggalEdit).DefaultValue(DateTime.Now);
        model.Field(p => p.UnitDurasi).DefaultValue("Years");
    })
    )
    )
</div>

<div id="konfirmasiDetail" contextmenu="Konfirmasi" title="Konfirmasi" class="konfirmasi">
    <table width="100%">
        <tr>
            <td width="25%"></td>
            <td width="50%"><span style="font-size: x-large ; font-weight: 700;">Hapus Data?</span></td>
            <td width="25%"></td>
        </tr>
        <tr>
            <td><button id="yesDetail" class="delete k-button">Ya</button></td>
            <td></td>
            <td><button id="noDetail" class="edit k-button">Tidak</button></td>
        </tr>
    </table>
</div>


<script>

    var UID;
    $(document).ready(function () {
        
    });

    function btnProsesOnClick()
    {
         EmpIDOnSelect();
    }

    function grdOnChange(e) { }

    function grdOnEdit(e) {
        var model = e.model;
        this.expandRow(this.tbody.find("tr[data-uid='" + model.uid + "']"));
        if (model.isNew()) {
            model.IDD = model.uid;
            model.EmpID = $('#EmpID').text().substring(2, 14);
            model.PersonnelNumber = $('#PersNo').val();
        }
        UID = model.uid;
    }

    function grdOnDataBinding() {

    }

    function sendData() {
        var grid = $("#grdDetail").data("kendoGrid");
        var currentData = grid.dataSource.data();
        var stFail = 0;

        for (var i = 0; i < currentData.length; i++) {
            if (currentData[i].isNew()) {
                SimpanData('baru', currentData[i]).done(function (dta) {
                }).fail(function () { stSfail = 1; alert("Ada kesalahan pada data ...");});
            } else if (currentData[i].dirty) {
                SimpanData('edit', currentData[i]).done(function (dta) {
                }).fail(function () { stSfail = 1; alert("Ada kesalahan pada data ...");});
            }
        }

        //this records are deleted
        var deletedRecords = [];
        for (var i = 0; i < grid.dataSource._destroyed.length; i++) {
            SimpanData('hapus', grid.dataSource._destroyed[i]).done(function (dta) {
            }).fail(function () { stSfail = 1; alert("Ada kesalahan pada data ...");});
        }

        if (stFail == 0) {
            alert("Data Sudah Tersimpan...");
        }
    }

    function hapusSeluruh(e) {
        var grid = $('#grdDetail').data('kendoGrid');
        wndDetail.open().center();
        $("#yesDetail").click(function () {
            wndDetail.close();
            var grid = $('#grdDetail').data('kendoGrid');
            var row = grid.tbody.find("tr:first");
            do {
                $('#grdDetail').data('kendoGrid').removeRow(row);
                row = grid.tbody.find("tr:first");
            }
            while (grid.tbody.contents().length > 0)
        });
        $("#noDetail").click(function () {
            wndDetail.close();
        });
    }

    function hapusSatuBaris(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        wndDetail.open().center();
        $("#yesDetail").click(function () {
            wndDetail.close();
            $('#grdDetail').data('kendoGrid').removeRow(row);
        });
        $("#noDetail").click(function () {
            wndDetail.close();
        });

    }

    function EmpIDOnSelect(e) {
        GetEmployee().done(function (data) {
            if (data) {
                var dta = data[0];
                $('#FullName').text(dta.FullName);
                $('#TempatLahir').text(dta.TempatLahir);
                $('#NegaraTempatLahir').text(dta.NegaraTempatLahir);
                $('#TanggalLahir').text(dta.TanggalLahir);
                $('#Agama').text(dta.Agama);
                $('#PersNo').val(dta.PersNo);
                GetEducation(dta.EmpID).done(function (data1) {
                    if (data1) {
                        var grd = $('#grdDetail').data('kendoGrid');
                        grd.dataSource.data(data1);
                        //grd.refresh();
                    }
                });
            }
        });
    }

    function GetEmployee() {
        var url = '/Input/GetDataFrom';
        var empID = $('#CariNIK').val();
        return $.ajax({
            url: url,
            data: {
                strClassView: 'Ptpn8.Models.SAPHCM.View_HCM02_ListEmployee',
                scriptSQL: "SELECT [Emp ID] as EmpID,[Full Name] as FullName,[Tempat Lahir] as TempatLahir,[Tanggal Lahir] as TanggalLahir, [Negara Tempat Lahir] as NegaraTempatLahir, [Agama] as Agama, PersNo FROM [SAPHCM].[dbo].[HCM02_ListEmployee] " +
                    "WHERE [Emp ID]='" + empID.substring(2, 14) + "'",
                _menuId: menuId
            },
            type: 'POST',
            datatype: 'json'
        });
    }

    function GetEducation() {
        var url = '/Input/GetDataFrom';
        var empID = $('#CariNIK').val();
        return $.ajax({
            url: url,
            data: {
                strClassView: 'Ptpn8.Models.SAPHCM.View_HCM12_Education',
                scriptSQL: "set dateformat dmy;" +
                    "SELECT Idd as IDD, SYSDATETIME() as TanggalEdit, [Emp ID] as EmpID, [Personnel Number] as PersonnelNumber, " +
                    "[Tanggal Masuk] as TanggalMasuk, [Tanggal Lulus] as TanggalLulus, [Jenjang Pendidikan] as JenjangPendidikan, " +
                    "[Institusi Pendidikan / Training] as InstitusiPendidikanTraining, [Sertifikat Kelulusan] as SertifikatKelulusan, " +
                    "Durasi, [Unit Durasi] as UnitDurasi, [Nilai Akhir] as NilaiAkhir, Jurusan "+
                    "FROM [SAPHCM].[dbo].[HCM12_Education] WHERE [Emp ID]='" + empID.substring(2, 14) + "'",
                _menuId: menuId
            },
            type: 'POST',
            datatype: 'json'
        });
    }

    function SimpanData(status, dta) {

        var url = '/Input/ExecSQL';
        var IDD = dta.IDD;
        var tanggalEdit
        if (typeof (dta.TanggalEdit) == "string") {
            tanggalEdit = new Date(parseInt(dta.TanggalEdit.substr(6)));
        } else {
            tanggalEdit = dta.TanggalEdit;
        }

        var EmpID = $('#CariNIK').val(); 
        var PersonnelNumber = dta.PersonnelNumber;
        var TanggalMasuk = dta.TanggalMasuk;
        var TanggalLulus = dta.TanggalLulus;
        var JenjangPendidikan = dta.JenjangPendidikan;
        var InstitusiPendidikanTraining = dta.InstitusiPendidikanTraining;
        var SertifikatKelulusan = dta.SertifikatKelulusan;
        var Durasi = dta.Durasi;
        var UnitDurasi = dta.UnitDurasi;
        var NilaiAkhir = dta.NilaiAkhir;
        var Jurusan = dta.Jurusan;

        if (status == 'baru') {
            return $.ajax({
                url: url,
                data: {
                    scriptSQL: "exec SimpanHCM12_Education_ADD '" + IDD.toString() +
                        "','" + EmpID.substring(2, 14) + "','" + PersonnelNumber + "','" + TanggalMasuk + "', '" + TanggalLulus + "', '" +
                        JenjangPendidikan + "', '" + InstitusiPendidikanTraining + "', '" + SertifikatKelulusan + "', '" +
                        Durasi + "', '" + UnitDurasi + "', '" + NilaiAkhir + "', '" + Jurusan + "'" ,
                    _menuId: menuId
                },
                type: 'POST',
                datatype: 'json'
            });

        } else if (status == 'edit') {
            return $.ajax({
                url: url,
                data: {
                    scriptSQL: "exec SimpanHCM12_Education_EDIT '" + IDD.toString() +
                        "','" + EmpID.substring(2, 14) + "','" + PersonnelNumber + "','" + TanggalMasuk + "', '" + TanggalLulus + "', '" +
                        JenjangPendidikan + "', '" + InstitusiPendidikanTraining + "', '" + SertifikatKelulusan + "', '" +
                        Durasi + "', '" + UnitDurasi + "', '" + NilaiAkhir + "', '" + Jurusan + "'",
                    _menuId: menuId
                },
                type: 'POST',
                datatype: 'json'
            });

        } else {
            return $.ajax({
                url: url,
                data: {
                    scriptSQL: "exec SimpanHCM12_Education_DEL '" + IDD.toString() + "'",
                    _menuId: menuId
                },
                type: 'POST',
                datatype: 'json'
            });

        }
    }

    function ddlJenisKelaminOnChange(e) {
        var grid = $('#grdDetail').data('kendoGrid');
        var row = grid.tbody.find("tr[data-uid='" + UID + "']");
        var data = grid.dataItem(row);
        var ddlJenisKelamin = this.dataItem(e.item);
        if (ddlJenisKelamin.Value == 'Pria') {
            data.Male = 'X';
            data.Female = '';
        }
        else {
            data.Male = '';
            data.Female = 'X';
        }
    }

    function txtDateMasukOnChange(e) {
        var grid = $('#grdDetail').data('kendoGrid');
        var row = grid.tbody.find("tr[data-uid='" + UID + "']");
        var data = grid.dataItem(row);
        var dt1 = $("#TanggalMasuk").data("kendoDatePicker");
        var dtStr1 = dt1._value.getDate().toString() + "." + (dt1._value.getMonth()+1).toString() + "." + dt1._value.getFullYear().toString()
        data.TanggalMasuk = dtStr1;
    }

    function txtDateLulusOnChange(e) {
        var grid = $('#grdDetail').data('kendoGrid');
        var row = grid.tbody.find("tr[data-uid='" + UID + "']");
        var data = grid.dataItem(row);
        var dt2 = $("#TanggalLulus").data("kendoDatePicker");
        var dtStr2 = dt2._value.getDate().toString() + "." + (dt2._value.getMonth()+1).toString() + "." + dt2._value.getFullYear().toString()
        data.TanggalLulus = dtStr2;
    }

    function ddlJenjangPendidikanOnChange(e) {
        var grid = $('#grdDetail').data('kendoGrid');
        var row = grid.tbody.find("tr[data-uid='" + UID + "']");
        var data = grid.dataItem(row);

        var ddlJenjangPendidikan = this.dataItem(e.item);
        data.JenjangPendidikan = ddlJenjangPendidikan.Value;
    }

    function ddlSertifikatKelulusanOnChange(e) {
        var grid = $('#grdDetail').data('kendoGrid');
        var row = grid.tbody.find("tr[data-uid='" + UID + "']");
        var data = grid.dataItem(row);

        var ddlSertifikatKelulusan = this.dataItem(e.item);
        data.SertifikatKelulusan = ddlSertifikatKelulusan.Value;

    }

</script>

<style>
    #reportViewer {
        position: absolute;
        left: 5px;
        right: 5px;
        top: 5px;
        bottom: 5px;
        overflow: hidden;
        font-family: Verdana, Arial;
    }
</style>

