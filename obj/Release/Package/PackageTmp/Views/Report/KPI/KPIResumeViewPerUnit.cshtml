<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-10.2.16.725.js")"></script>
<script src="~/Scripts/PDFObject.js"></script>
@(
            // All deferred initialization statements will be rendered here
            Html.TelerikReporting().DeferredScripts()
)

<div id="_header">
    <table width="100%" class="hdr">
        <tr>
            <td>
                <div style="text-align:center">KPI Resume PTP. Nusantara VIII</div>
            </td>
        </tr>
    </table>
    <table width="50%">
        <tr>
            <td width="3%">
                <label>Tahun:</label>
            </td>
            <td width="20%">
                @(Html.Kendo().NumericTextBox().Name("Tahun").Min(2017).Format("D4").Value(2020)
                                    .HtmlAttributes(new { style = "width:25%", @class = "allcaps" })
                )
            </td>
        </tr>
        <tr>
            <td>
                <label style="text-align:left">Bulan:</label>
            </td>
            <td>
                @(Html.Kendo().DropDownList().Name("ddlBulan").DataTextField("Text").DataValueField("Value")
                                    //.Events(ev => ev.Select("ddlBulanOnSelect"))
                                    //.HtmlAttributes(new { style = "font-size: medium;" })
                                    .SelectedIndex(DateTime.Now.Month - 1)
                                    .BindTo(new List<SelectListItem>()
                                    {
                                                                new SelectListItem() {
                                                                    Text = "Januari",
                                                                    Value = "1"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Februari",
                                                                    Value = "2"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Maret",
                                                                    Value = "3"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "April",
                                                                    Value = "4"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Mei",
                                                                    Value = "5"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Juni",
                                                                    Value = "6"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Juli",
                                                                    Value = "7"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Agustus",
                                                                    Value = "8"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "September",
                                                                    Value = "9"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Oktober",
                                                                    Value = "10"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "November",
                                                                    Value = "11"
                                                                },
                                                                new SelectListItem() {
                                                                    Text = "Desember",
                                                                    Value = "12"
                                                                }
                                })
                )
            </td>
        </tr>
        <tr>
            <td></td>
            <td align="left">
                <div class="confirm">
                    <button id="btnSubmitHeader" class="submit k-button" type="button" onclick="btnProsesOnClick()">Proses</button>
                </div>
            </td>
        </tr>
    </table>
</div>
<div id="_detail" style="width:100%;height:490px;">
    @(Html.Kendo().TabStrip().Name("tabstrip").Animation(animation => animation.Open(effect => effect.Fade(FadeDirection.In)))
                .Items(tabstrip =>
                {
                    tabstrip.Add().Text("I. Rekap").Selected(true)
        .Content(@<text>
                @(Html.Kendo()
                            .Grid<Ptpn8.KPI.Models.KPIResume_PerUnit>(Guid.Empty.ToString())
                            .Name("grdDetail")
                            .Columns(g =>
                            {
                                        g.Bound(i => i.Direktorat).Width(100).Title("Direktorat").HtmlAttributes(new { style = "text-align: left; font-weight : 700" });
                                        g.Bound(i => i.Unit).Width(100).Title("Unit").HtmlAttributes(new { style = "text-align: center; color: DarkOliveGreen; font-weight : 700" });
                                        g.Bound(i => i.Kebun).Width(100).Title("Kebun").HtmlAttributes(new { style = "text-align: center; color: red; font-weight : 700" });
                                        g.Bound(i => i.Skor).Width(100).Title("Skor").HtmlAttributes(new { style = "text-align: center; color: blue; font-weight : 700" });
                                        g.Command(com => com.GetType()).Width(300);
                                    })
                            .ToolBar(toolbar =>
                            {
                                        toolbar.Excel();
                                    })
                            .Events(e => { e.DataBound("grdCariOnDataBound"); e.Change("grdCariOnChange"); })
                            .Excel(excel => excel.AllPages(true))
                            .AutoBind(false)
                            .Resizable(resizeable => resizeable.Columns(true))
                            .Scrollable()
                            .Sortable()
                            .Groupable()
                            .Selectable(
                                selectable => selectable
                                .Type(GridSelectionType.Cell)
                            )
                            .Groupable()
                            .HtmlAttributes(new { style = "Height: 450px" })
                            .DataSource(o => o
                                .Ajax()
                                .ServerOperation(false)
                                .Sort(s => s.Add(x => x.Skor).Descending())
                                //.Group(s => { s.Add(x => x.Direktorat); s.Add(x => x.Unit); })
                                .Read(read => read.Action("detailRead", "Report").Data("filterReport").Type(HttpVerbs.Post))

                            )
                )
        </text>);
        tabstrip.Add().Text("II. Rincian").Selected(false)
.Content(@<text>
    @(Html.Kendo()
            .Grid<Ptpn8.KPI.Models.KPIResume_PerUnit_Rincian>(Guid.Empty.ToString())
            .Name("grdDetail2")
            .Columns(g =>
            {
                        g.Bound(i => i.IndikatorKPI).Title("Indikator KPI").Width(180)
                .ClientFooterTemplate("Jumlah Skor")
                .FooterHtmlAttributes(new { style = "text-align: center; background: silver;" });
                        g.Bound(i => i.StrategyObjektif).Title("Strategy Objektif").Width(180).Hidden();
                        g.Bound(i => i.Satuan).Title("Satuan").Width(120);
                        g.Bound(i => i.Polarization).Title("Polarization").Width(120);
                        g.Bound(i => i.Bobot).Title("Bobot").Width(80).HtmlAttributes(new { style = "text-align: center; color: orange; font-weight : 700" });
                        g.Bound(i => i.RKAP).Title("RKAP").Width(80).HtmlAttributes(new { style = "text-align: center; color: blue; font-weight : 700" });
                        g.Bound(i => i.Realisasi).Title("Realisasi").Width(100).HtmlAttributes(new { style = "text-align: center;font-weight : 700" });
                        g.Bound(i => i.Capaian).Title("Capaian").Width(80).ClientTemplate("#= WarnaKolom(Capaian) #").HtmlAttributes(new { style = "text-align: center;font-weight : 700" });
                        g.Bound(i => i.Skor).Title("Skor").Width(80).HtmlAttributes(new { style = "text-align: center;font-weight : 700" })
                .ClientFooterTemplate("#= kendo.toString(sum,'n2') #")
                .FooterHtmlAttributes(new { style = "text-align: center; background: silver;" });
                        g.Bound(i => i.Keterangan).Title("Keterangan").Width(100);
                    })
        .ToolBar(toolbar =>
        {
                    toolbar.Excel();
                })
        .Excel(excel => excel.AllPages(true))
        .AutoBind(false)
        .Resizable(resizeable => resizeable.Columns(true))
        .Scrollable()
        .Selectable()
        .Sortable()
        .Groupable()
        .HtmlAttributes(new { style = "Height: 450px" })
        .DataSource(o => o
            .Ajax()
            .ServerOperation(false)
            .Sort(s => s.Add(x => x.IndikatorKPI))
            .Group(s => s.Add(x => x.StrategyObjektif))
            .Read(read => read.Action("detailRead", "Report").Data("filterReport2").Type(HttpVerbs.Post))
            .Aggregates(ag =>
            {
                        ag.Add(x => x.Skor).Sum();
                    })
        )
    )
</text>);
tabstrip.Add().Text("III. Grafik").Selected(false)
.Content(@<text>
    <div class="demo-section k-content wide">
        @(Html.Kendo().Chart<Ptpn8.KPI.Models.KPIResume_PerUnit_Chart>()
                        .Name("chart")
                        .Title("Grafik Ketercapaian Per Indikator")
                        .Legend(legend => legend.Position(ChartLegendPosition.Top))
                        .DataSource(ds => ds
                            .Read(read => read.Action("GetDataFrom", "Report").Type(HttpVerbs.Post).Data("filterReport3"))
                        )
                        .ChartArea(chartArea => chartArea
                            .Background("transparent")
                        )
                        .Series(series =>
                        {
                                    series.Bar(model => model.Bobot).Name("Bobot").Color("DarkOliveGreen");
                                    series.Bar(model => model.Skor).Name("Skor").Color("red");
                                })

                        .CategoryAxis(axis => axis
                                .Categories(model => model.Indikator)

                                )
                        .ValueAxis(axis => axis
                            .Numeric()
                            .Line(line => line.Visible(false))
                            .MajorGridLines(lines => lines.Visible(true))
                        )
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Template("#= series.name #: #= value #")
                        )
        )
    </div>
</text>);
})
    )
</div>

<script>
    var bagian;
    var kode, colIdx, pilihan;

    $(document).ready(function () {
        document.addEventListener("contextmenu", function (e) {
            e.preventDefault();
        }, false);
        pdf = $("#pdfWindow").kendoWindow({
            title: "PDF Viewer",
            modal: true,
            visible: false,
            resizable: false,
            width: 900,
            height: 550
        }).data("kendoWindow");


        gridStatus = 'belum-ngapa-ngapain';
    })

    //function onButtonClick(e) {
    //    e.preventDefault();
    //    var grid = this;
    //    var row = $(e.currentTarget).closest("tr");

    //    var data = grid.dataItem(row);
    //    var file = data.File;

    //    pdf.open().center();

    //    var options = {
    //        pdfOpenParams: {
    //            navpanes: 1,
    //            toolbar: 0,
    //            statusbar: 0,
    //            pagemode: 'none',
    //            pagemode: "none",
    //            page: 1,
    //            zoom: "page-width",

    //            enableHandToolOnLoad: true
    //        } //,
    //        //forcePDFJS: true,
    //        //PDFJS_URL: "/PDF.js/web/viewer.html"
    //    }


    //    PDFObject.embed("/Content/Images/Document/SMPNVIII/" + file, "#testPDFObject", options)
    //}
    function btnProsesOnClick() {
        $('#grdDetail').data('kendoGrid').dataSource.read();
    }

    function grdCariOnDataBound(e) {
    }

    function grdCariOnChange(e) {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });

        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        //colIdx = $("td", row).index(row);
        var data = grid.dataItem(row);
        var x = grid.select();
        var r = x.closest("tr");
        var xx = grid.dataItem(r);
        bagian = xx.NamaBagian;
        kode = selected.toString();


        $("#tabstrip").data("kendoTabStrip").select(1);
        var grid = $('#grdDetail2').data('kendoGrid');
        grid.dataSource.read();
        //filterReport3(kode);
        var chart = $('#chart').data('kendoChart');
        chart.dataSource.read();
    }

    //fungsi menampilkan rincian PK dan IK
    function filterReport2(e) {
        return {
            strClassView: 'Ptpn8.KPI.Models.KPIResume_PerUnit_Rincian',
            scriptSQL: "SELECT C.StrategyObjektif,B.IndikatorKPI,A.Satuan,A.Polarization,A.RKAP,A.Realisasi,A.Capaian,A.Bobot,A.Skor,A.Keterangan " +
                "FROM [SPDK_KanpusEF].[dbo].[KPI_InisiasiKPI] as A join [SPDK_KanpusEF].[dbo].KPI_IndikatorKPI as B " +
                "on a.KPI_IndikatorKPIId = b.KPI_IndikatorKPIId " +
                "join [SPDK_KanpusEF].[dbo].KPI_StrategyObjektif as C " +
                "on b.KPI_StrategyObjektifId = c.KPI_StrategyObjektifId " +
                "join [ReferensiEF].[dbo].Unit as D " +
                "on A.UnitId = D.OrgId " +
                "where D.NamaUnit like '%" + kode + "%' and A.Tahun=" + $('#Tahun').val() + " and A.Bulan =" + $('#ddlBulan').val()
        }
    }

    //fungsi dashboard
    function filterReport(e) {
        return {
            strClassView: 'Ptpn8.KPI.Models.KPIResume_PerUnit',
            scriptSQL: "exec [SPDK_KanpusEF].[dbo].DashboardKPI_PerUnit " + $('#Tahun').val() + " ," + $('#ddlBulan').val()
        }
    }

    function filterReport3(e) {
        return {
            strClassView: 'Ptpn8.KPI.Models.KPIResume_PerUnit_Chart',
            scriptSQL: "SELECT B.IndikatorKPI as Indikator, sum(A.Bobot) as Bobot, SUM(A.skor) as skor " +
                "FROM [SPDK_KanpusEF].[dbo].[KPI_InisiasiKPI] as A join [SPDK_KanpusEF].[dbo].KPI_IndikatorKPI as B " +
                "on a.KPI_IndikatorKPIId = b.KPI_IndikatorKPIId " +
                "join [SPDK_KanpusEF].[dbo].KPI_StrategyObjektif as C " +
                "on b.KPI_StrategyObjektifId = c.KPI_StrategyObjektifId " +
                "join [ReferensiEF].[dbo].Unit as D " +
                "on A.UnitId = D.OrgId " +
                "where D.NamaUnit like '%" + kode + "%' " +
                "group by B.IndikatorKPI "
        }
    }

    function WarnaKolom(str) {
        if (str != null) {
            if (str == 0)
                return "<div class='breakWord20' style='color: white; background-color: black;'>" + str + "</div>";
            else if (str > 0 && str < 71)
                return "<div class='breakWord20' style='color: white; background-color: red;'>" + str + "</div>";
            else if (str > 70 && str < 91)
                return "<div class='breakWord20' style='color: white; background-color: orange;'>" + str + "</div>";
            else
                return "<div class='breakWord20' style='color: white; background-color: green;'>" + str + "</div>";
        }
        //else if (str != null && (sts == null || sts == 'Perpanjangan')) {
        //    if (str.indexOf('0') > -1 && (str.indexOf('CRSA') > -1 || str.indexOf('Risalah Rakor') > -1 || str.indexOf('MoU') > -1))
        //        return "<div class='breakWord20' style='color: white; background-color: grey;'>" + str + "</div>";
        //    else if (str.indexOf('0') > -1)
        //        return "<div class='breakWord20' style='color: white; background-color: red;'>" + str + "</div>";
        //    else
        //        return "<div class='breakWord20' style='color: white; background-color: green;'>" + str + "</div>";
        //}
        //else return "<div class='breakWord20' style='color: black'>" + str + "</div>";
    }

</script>

<div id="pdfWindow">
    <table width="100%" class="hdr">
        <tr>
            <td>
                <div style="text-align:center">PDF Viewer</div>
            </td>
        </tr>
    </table>
    <div class="notclick" id="testPDFObject" style="height:100%">
    </div>
    <table width="100%">
        <tr>
            <td></td>
            <td align="center">
                <button id="noLeaveGrid" class="k-button">Cancel</button>
            </td>
            <td></td>
        </tr>
    </table>
    <script type='text/javascript'>
        document.addEventListener("contextmenu", function (e) {
            e.preventDefault();
        }, false);
    </script>
</div>





